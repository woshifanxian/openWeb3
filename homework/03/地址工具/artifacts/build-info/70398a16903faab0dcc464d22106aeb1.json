{
	"id": "70398a16903faab0dcc464d22106aeb1",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"homework/03/地址工具/MyToken.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// compiler version must be greater than or equal to 0.8.24 and less than 0.9.0\npragma solidity ^0.8.24;\n import \"@openzeppelin/contracts/utils/Address.sol\";\nimport \"./Address2.sol\";\n\ncontract   MyToken {\n    using Address2 for address;\n\n    function send(address recipient, uint256 amount) external view {\n        if (recipient.isContract()) {\n            // do something\n        }\n    }\n\n    function getAddress() public view returns(address){\n       address addr = 0x690B9A9E9aa1C9dB991C7721a92d351Db4FaC990;\n            address payable addr_pay = payable(0x8306300ffd616049FD7e4b0354a64Da835c1A81C);\n            return addr_pay;\n    }\n}\n"
			},
			"homework/03/地址工具/Address2.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// compiler version must be greater than or equal to 0.8.24 and less than 0.9.0\npragma solidity ^0.8.24;\n\nlibrary Address2 {\n    function isContract(address account) public view returns (bool) {\n        uint256 size;\n        assembly {\n            size := extcodesize(account)\n        }\n        return size > 0;\n    }\n\n    function getAddress() public view returns(address){\n        return address(this);\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Address.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Address.sol)\n\npragma solidity ^0.8.20;\n\nimport {Errors} from \"./Errors.sol\";\n\n/**\n * @dev Collection of functions related to the address type\n */\nlibrary Address {\n    /**\n     * @dev There's no code at `target` (it is not a contract).\n     */\n    error AddressEmptyCode(address target);\n\n    /**\n     * @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n     * `recipient`, forwarding all available gas and reverting on errors.\n     *\n     * https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n     * of certain opcodes, possibly making contracts go over the 2300 gas limit\n     * imposed by `transfer`, making them unable to receive funds via\n     * `transfer`. {sendValue} removes this limitation.\n     *\n     * https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n     *\n     * IMPORTANT: because control is transferred to `recipient`, care must be\n     * taken to not create reentrancy vulnerabilities. Consider using\n     * {ReentrancyGuard} or the\n     * https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern].\n     */\n    function sendValue(address payable recipient, uint256 amount) internal {\n        if (address(this).balance < amount) {\n            revert Errors.InsufficientBalance(address(this).balance, amount);\n        }\n\n        (bool success, ) = recipient.call{value: amount}(\"\");\n        if (!success) {\n            revert Errors.FailedCall();\n        }\n    }\n\n    /**\n     * @dev Performs a Solidity function call using a low level `call`. A\n     * plain `call` is an unsafe replacement for a function call: use this\n     * function instead.\n     *\n     * If `target` reverts with a revert reason or custom error, it is bubbled\n     * up by this function (like regular Solidity function calls). However, if\n     * the call reverted with no returned reason, this function reverts with a\n     * {Errors.FailedCall} error.\n     *\n     * Returns the raw returned data. To convert to the expected return value,\n     * use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n     *\n     * Requirements:\n     *\n     * - `target` must be a contract.\n     * - calling `target` with `data` must not revert.\n     */\n    function functionCall(address target, bytes memory data) internal returns (bytes memory) {\n        return functionCallWithValue(target, data, 0);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but also transferring `value` wei to `target`.\n     *\n     * Requirements:\n     *\n     * - the calling contract must have an ETH balance of at least `value`.\n     * - the called Solidity function must be `payable`.\n     */\n    function functionCallWithValue(address target, bytes memory data, uint256 value) internal returns (bytes memory) {\n        if (address(this).balance < value) {\n            revert Errors.InsufficientBalance(address(this).balance, value);\n        }\n        (bool success, bytes memory returndata) = target.call{value: value}(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a static call.\n     */\n    function functionStaticCall(address target, bytes memory data) internal view returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.staticcall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n     * but performing a delegate call.\n     */\n    function functionDelegateCall(address target, bytes memory data) internal returns (bytes memory) {\n        (bool success, bytes memory returndata) = target.delegatecall(data);\n        return verifyCallResultFromTarget(target, success, returndata);\n    }\n\n    /**\n     * @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n     * was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n     * of an unsuccessful call.\n     */\n    function verifyCallResultFromTarget(\n        address target,\n        bool success,\n        bytes memory returndata\n    ) internal view returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            // only check if target is a contract if the call was successful and the return data is empty\n            // otherwise we already know that it was a contract\n            if (returndata.length == 0 && target.code.length == 0) {\n                revert AddressEmptyCode(target);\n            }\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n     * revert reason or with a default {Errors.FailedCall} error.\n     */\n    function verifyCallResult(bool success, bytes memory returndata) internal pure returns (bytes memory) {\n        if (!success) {\n            _revert(returndata);\n        } else {\n            return returndata;\n        }\n    }\n\n    /**\n     * @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}.\n     */\n    function _revert(bytes memory returndata) private pure {\n        // Look for revert reason and bubble it up if present\n        if (returndata.length > 0) {\n            // The easiest way to bubble the revert reason is using memory via assembly\n            assembly (\"memory-safe\") {\n                let returndata_size := mload(returndata)\n                revert(add(32, returndata), returndata_size)\n            }\n        } else {\n            revert Errors.FailedCall();\n        }\n    }\n}\n"
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v5.1.0) (utils/Errors.sol)\n\npragma solidity ^0.8.20;\n\n/**\n * @dev Collection of common custom errors used in multiple contracts\n *\n * IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n * It is recommended to avoid relying on the error API for critical functionality.\n *\n * _Available since v5.1._\n */\nlibrary Errors {\n    /**\n     * @dev The ETH balance of the account is not enough to perform the operation.\n     */\n    error InsufficientBalance(uint256 balance, uint256 needed);\n\n    /**\n     * @dev A call to an address target failed. The target may have reverted.\n     */\n    error FailedCall();\n\n    /**\n     * @dev The deployment failed.\n     */\n    error FailedDeployment();\n\n    /**\n     * @dev A necessary precompile is missing.\n     */\n    error MissingPrecompile(address);\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"@openzeppelin/contracts/utils/Address.sol": {
				"Address": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "AddressEmptyCode",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of functions related to the address type",
						"errors": {
							"AddressEmptyCode(address)": [
								{
									"details": "There's no code at `target` (it is not a contract)."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Address.sol\":233:6032  library Address {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 BLOBBASEFEE DUP4 PUSH10 0x6988BC629D9EEFB813A7 OR 0x2A 0xCC BLOCKHASH OR MSTORE 0xBD 0xAE PUSH5 0x952801479B 0xEC 0xE8 0xCB 0xDE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "233:5799:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC3 BLOBBASEFEE DUP4 PUSH10 0x6988BC629D9EEFB813A7 OR 0x2A 0xCC BLOCKHASH OR MSTORE 0xBD 0xAE PUSH5 0x952801479B 0xEC 0xE8 0xCB 0xDE PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "233:5799:0:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							},
							"internal": {
								"_revert(bytes memory)": "infinite",
								"functionCall(address,bytes memory)": "infinite",
								"functionCallWithValue(address,bytes memory,uint256)": "infinite",
								"functionDelegateCall(address,bytes memory)": "infinite",
								"functionStaticCall(address,bytes memory)": "infinite",
								"sendValue(address payable,uint256)": "infinite",
								"verifyCallResult(bool,bytes memory)": "infinite",
								"verifyCallResultFromTarget(address,bool,bytes memory)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 233,
									"end": 6032,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c34a83696988bc629d9eefb813a7172acc401752bdae64952801479bece8cbde64736f6c634300081a0033",
									".code": [
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 233,
											"end": 6032,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"homework/03/地址工具/Address2.sol",
								"homework/03/地址工具/MyToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of functions related to the address type\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Address.sol\":\"Address\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"Errors": {
					"abi": [
						{
							"inputs": [],
							"name": "FailedCall",
							"type": "error"
						},
						{
							"inputs": [],
							"name": "FailedDeployment",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "balance",
									"type": "uint256"
								},
								{
									"internalType": "uint256",
									"name": "needed",
									"type": "uint256"
								}
							],
							"name": "InsufficientBalance",
							"type": "error"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"name": "MissingPrecompile",
							"type": "error"
						}
					],
					"devdoc": {
						"details": "Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._",
						"errors": {
							"FailedCall()": [
								{
									"details": "A call to an address target failed. The target may have reverted."
								}
							],
							"FailedDeployment()": [
								{
									"details": "The deployment failed."
								}
							],
							"InsufficientBalance(uint256,uint256)": [
								{
									"details": "The ETH balance of the account is not enough to perform the operation."
								}
							],
							"MissingPrecompile(address)": [
								{
									"details": "A necessary precompile is missing."
								}
							]
						},
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"@openzeppelin/contracts/utils/Errors.sol\":411:895  library Errors {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6055604b600b8282823980515f1a607314603f577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
							"opcodes": "PUSH1 0x55 PUSH1 0x4B PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x3F JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xA5 0x25 DUP15 0x24 0xD3 PUSH8 0x801DD045C6C6B0E3 PUSH3 0x49FC2A 0xB2 PUSH31 0xC3E3F8E07CE95D2DBDB61D64736F6C634300081A0033000000000000000000 ",
							"sourceMap": "411:484:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040525f80fdfea264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SGT 0xA5 0x25 DUP15 0x24 0xD3 PUSH8 0x801DD045C6C6B0E3 PUSH3 0x49FC2A 0xB2 PUSH31 0xC3E3F8E07CE95D2DBDB61D64736F6C634300081A0033000000000000000000 ",
							"sourceMap": "411:484:1:-:0;;;;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "17000",
								"executionCost": "92",
								"totalCost": "17092"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH #[$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [$]",
									"source": 1,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 1,
									"value": "B"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "CODECOPY",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP1",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MLOAD",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "BYTE",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "EQ",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH [tag]",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPI",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 1,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 1,
									"value": "4"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 1,
									"value": "24"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "REVERT",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "tag",
									"source": 1,
									"value": "1"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "JUMPDEST",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "ADDRESS",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 1,
									"value": "0"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "PUSH",
									"source": 1,
									"value": "73"
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "MSTORE8",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP3",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "DUP2",
									"source": 1
								},
								{
									"begin": 411,
									"end": 895,
									"name": "RETURN",
									"source": 1
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122013a5258e24d367801dd045c6c6b0e36249fc2ab27ec3e3f8e07ce95d2dbdb61d64736f6c634300081a0033",
									".code": [
										{
											"begin": 411,
											"end": 895,
											"name": "PUSHDEPLOYADDRESS",
											"source": 1
										},
										{
											"begin": 411,
											"end": 895,
											"name": "ADDRESS",
											"source": 1
										},
										{
											"begin": 411,
											"end": 895,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 1,
											"value": "80"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 411,
											"end": 895,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 895,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 411,
											"end": 895,
											"name": "REVERT",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"homework/03/地址工具/Address2.sol",
								"homework/03/地址工具/MyToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"FailedCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedDeployment\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"balance\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"needed\",\"type\":\"uint256\"}],\"name\":\"InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"MissingPrecompile\",\"type\":\"error\"}],\"devdoc\":{\"details\":\"Collection of common custom errors used in multiple contracts IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library. It is recommended to avoid relying on the error API for critical functionality. _Available since v5.1._\",\"errors\":{\"FailedCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"FailedDeployment()\":[{\"details\":\"The deployment failed.\"}],\"InsufficientBalance(uint256,uint256)\":[{\"details\":\"The ETH balance of the account is not enough to perform the operation.\"}],\"MissingPrecompile(address)\":[{\"details\":\"A necessary precompile is missing.\"}]},\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Errors.sol\":\"Errors\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"homework/03/地址工具/Address2.sol": {
				"Address2": {
					"abi": [
						{
							"inputs": [],
							"name": "getAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "account",
									"type": "address"
								}
							],
							"name": "isContract",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"homework/03/\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe5\\xb7\\xa5\\xe5\\x85\\xb7/Address2.sol\":138:444  library Address2 {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \"homework/03/\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe5\\xb7\\xa5\\xe5\\x85\\xb7/Address2.sol\":138:444  library Address2 {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x16279055\n      eq\n      tag_2\n      jumpi\n      dup1\n      0x38cc4831\n      eq\n      tag_3\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \"homework/03/\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe5\\xb7\\xa5\\xe5\\x85\\xb7/Address2.sol\":161:349  function isContract(address account) public view returns (bool) {... */\n    tag_2:\n      tag_4\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_5\n      swap2\n      swap1\n      tag_6\n      jump\t// in\n    tag_5:\n      tag_7\n      jump\t// in\n    tag_4:\n      mload(0x40)\n      tag_8\n      swap2\n      swap1\n      tag_9\n      jump\t// in\n    tag_8:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"homework/03/\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe5\\xb7\\xa5\\xe5\\x85\\xb7/Address2.sol\":355:442  function getAddress() public view returns(address){... */\n    tag_3:\n      tag_10\n      tag_11\n      jump\t// in\n    tag_10:\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"homework/03/\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe5\\xb7\\xa5\\xe5\\x85\\xb7/Address2.sol\":161:349  function isContract(address account) public view returns (bool) {... */\n    tag_7:\n        /* \"homework/03/\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe5\\xb7\\xa5\\xe5\\x85\\xb7/Address2.sol\":219:223  bool */\n      0x00\n        /* \"homework/03/\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe5\\xb7\\xa5\\xe5\\x85\\xb7/Address2.sol\":235:247  uint256 size */\n      dup1\n        /* \"homework/03/\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe5\\xb7\\xa5\\xe5\\x85\\xb7/Address2.sol\":300:307  account */\n      dup3\n        /* \"homework/03/\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe5\\xb7\\xa5\\xe5\\x85\\xb7/Address2.sol\":288:308  extcodesize(account) */\n      extcodesize\n        /* \"homework/03/\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe5\\xb7\\xa5\\xe5\\x85\\xb7/Address2.sol\":280:308  size := extcodesize(account) */\n      swap1\n      pop\n        /* \"homework/03/\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe5\\xb7\\xa5\\xe5\\x85\\xb7/Address2.sol\":341:342  0 */\n      0x00\n        /* \"homework/03/\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe5\\xb7\\xa5\\xe5\\x85\\xb7/Address2.sol\":334:338  size */\n      dup2\n        /* \"homework/03/\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe5\\xb7\\xa5\\xe5\\x85\\xb7/Address2.sol\":334:342  size > 0 */\n      gt\n        /* \"homework/03/\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe5\\xb7\\xa5\\xe5\\x85\\xb7/Address2.sol\":327:342  return size > 0 */\n      swap2\n      pop\n      pop\n        /* \"homework/03/\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe5\\xb7\\xa5\\xe5\\x85\\xb7/Address2.sol\":161:349  function isContract(address account) public view returns (bool) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"homework/03/\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe5\\xb7\\xa5\\xe5\\x85\\xb7/Address2.sol\":355:442  function getAddress() public view returns(address){... */\n    tag_11:\n        /* \"homework/03/\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe5\\xb7\\xa5\\xe5\\x85\\xb7/Address2.sol\":397:404  address */\n      0x00\n        /* \"homework/03/\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe5\\xb7\\xa5\\xe5\\x85\\xb7/Address2.sol\":430:434  this */\n      address\n        /* \"homework/03/\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe5\\xb7\\xa5\\xe5\\x85\\xb7/Address2.sol\":415:435  return address(this) */\n      swap1\n      pop\n        /* \"homework/03/\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe5\\xb7\\xa5\\xe5\\x85\\xb7/Address2.sol\":355:442  function getAddress() public view returns(address){... */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_17:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:460   */\n    tag_19:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":411:453   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":404:409   */\n      dup3\n        /* \"#utility.yul\":400:454   */\n      and\n        /* \"#utility.yul\":389:454   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:460   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":466:562   */\n    tag_20:\n        /* \"#utility.yul\":503:510   */\n      0x00\n        /* \"#utility.yul\":532:556   */\n      tag_32\n        /* \"#utility.yul\":550:555   */\n      dup3\n        /* \"#utility.yul\":532:556   */\n      tag_19\n      jump\t// in\n    tag_32:\n        /* \"#utility.yul\":521:556   */\n      swap1\n      pop\n        /* \"#utility.yul\":466:562   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":568:690   */\n    tag_21:\n        /* \"#utility.yul\":641:665   */\n      tag_34\n        /* \"#utility.yul\":659:664   */\n      dup2\n        /* \"#utility.yul\":641:665   */\n      tag_20\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":634:639   */\n      dup2\n        /* \"#utility.yul\":631:666   */\n      eq\n        /* \"#utility.yul\":621:684   */\n      tag_35\n      jumpi\n        /* \"#utility.yul\":680:681   */\n      0x00\n        /* \"#utility.yul\":677:678   */\n      dup1\n        /* \"#utility.yul\":670:682   */\n      revert\n        /* \"#utility.yul\":621:684   */\n    tag_35:\n        /* \"#utility.yul\":568:690   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":696:835   */\n    tag_22:\n        /* \"#utility.yul\":742:747   */\n      0x00\n        /* \"#utility.yul\":780:786   */\n      dup2\n        /* \"#utility.yul\":767:787   */\n      calldataload\n        /* \"#utility.yul\":758:787   */\n      swap1\n      pop\n        /* \"#utility.yul\":796:829   */\n      tag_37\n        /* \"#utility.yul\":823:828   */\n      dup2\n        /* \"#utility.yul\":796:829   */\n      tag_21\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":696:835   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":841:1170   */\n    tag_6:\n        /* \"#utility.yul\":900:906   */\n      0x00\n        /* \"#utility.yul\":949:951   */\n      0x20\n        /* \"#utility.yul\":937:946   */\n      dup3\n        /* \"#utility.yul\":928:935   */\n      dup5\n        /* \"#utility.yul\":924:947   */\n      sub\n        /* \"#utility.yul\":920:952   */\n      slt\n        /* \"#utility.yul\":917:1036   */\n      iszero\n      tag_39\n      jumpi\n        /* \"#utility.yul\":955:1034   */\n      tag_40\n      tag_17\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":917:1036   */\n    tag_39:\n        /* \"#utility.yul\":1075:1076   */\n      0x00\n        /* \"#utility.yul\":1100:1153   */\n      tag_41\n        /* \"#utility.yul\":1145:1152   */\n      dup5\n        /* \"#utility.yul\":1136:1142   */\n      dup3\n        /* \"#utility.yul\":1125:1134   */\n      dup6\n        /* \"#utility.yul\":1121:1143   */\n      add\n        /* \"#utility.yul\":1100:1153   */\n      tag_22\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":1090:1153   */\n      swap2\n      pop\n        /* \"#utility.yul\":1046:1163   */\n      pop\n        /* \"#utility.yul\":841:1170   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1176:1266   */\n    tag_23:\n        /* \"#utility.yul\":1210:1217   */\n      0x00\n        /* \"#utility.yul\":1253:1258   */\n      dup2\n        /* \"#utility.yul\":1246:1259   */\n      iszero\n        /* \"#utility.yul\":1239:1260   */\n      iszero\n        /* \"#utility.yul\":1228:1260   */\n      swap1\n      pop\n        /* \"#utility.yul\":1176:1266   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1272:1389   */\n    tag_24:\n        /* \"#utility.yul\":1361:1382   */\n      tag_44\n        /* \"#utility.yul\":1376:1381   */\n      dup2\n        /* \"#utility.yul\":1361:1382   */\n      tag_23\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":1356:1359   */\n      dup3\n        /* \"#utility.yul\":1349:1383   */\n      mstore\n        /* \"#utility.yul\":1272:1389   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1395:1621   */\n    tag_9:\n        /* \"#utility.yul\":1490:1494   */\n      0x00\n        /* \"#utility.yul\":1528:1530   */\n      0x20\n        /* \"#utility.yul\":1517:1526   */\n      dup3\n        /* \"#utility.yul\":1513:1531   */\n      add\n        /* \"#utility.yul\":1505:1531   */\n      swap1\n      pop\n        /* \"#utility.yul\":1541:1614   */\n      tag_46\n        /* \"#utility.yul\":1611:1612   */\n      0x00\n        /* \"#utility.yul\":1600:1609   */\n      dup4\n        /* \"#utility.yul\":1596:1613   */\n      add\n        /* \"#utility.yul\":1587:1593   */\n      dup5\n        /* \"#utility.yul\":1541:1614   */\n      tag_24\n      jump\t// in\n    tag_46:\n        /* \"#utility.yul\":1395:1621   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1627:1753   */\n    tag_25:\n        /* \"#utility.yul\":1722:1746   */\n      tag_48\n        /* \"#utility.yul\":1740:1745   */\n      dup2\n        /* \"#utility.yul\":1722:1746   */\n      tag_20\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":1717:1720   */\n      dup3\n        /* \"#utility.yul\":1710:1747   */\n      mstore\n        /* \"#utility.yul\":1627:1753   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1759:1997   */\n    tag_13:\n        /* \"#utility.yul\":1860:1864   */\n      0x00\n        /* \"#utility.yul\":1898:1900   */\n      0x20\n        /* \"#utility.yul\":1887:1896   */\n      dup3\n        /* \"#utility.yul\":1883:1901   */\n      add\n        /* \"#utility.yul\":1875:1901   */\n      swap1\n      pop\n        /* \"#utility.yul\":1911:1990   */\n      tag_50\n        /* \"#utility.yul\":1987:1988   */\n      0x00\n        /* \"#utility.yul\":1976:1985   */\n      dup4\n        /* \"#utility.yul\":1972:1989   */\n      add\n        /* \"#utility.yul\":1963:1969   */\n      dup5\n        /* \"#utility.yul\":1911:1990   */\n      tag_25\n      jump\t// in\n    tag_50:\n        /* \"#utility.yul\":1759:1997   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220c2bbdc563ad50f11ad7d3ea55d5df94f1a06509fb823c1cc2034b6abdb29193c64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6101c361004d600b8282823980515f1a6073146041577f4e487b71000000000000000000000000000000000000000000000000000000005f525f60045260245ffd5b305f52607381538281f3fe730000000000000000000000000000000000000000301460806040526004361061003f575f3560e01c8063162790551461004357806338cc483114610073575b5f80fd5b61005d60048036038101906100589190610107565b610091565b60405161006a919061014c565b60405180910390f35b61007b6100a2565b6040516100889190610174565b60405180910390f35b5f80823b90505f8111915050919050565b5f30905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100d6826100ad565b9050919050565b6100e6816100cc565b81146100f0575f80fd5b50565b5f81359050610101816100dd565b92915050565b5f6020828403121561011c5761011b6100a9565b5b5f610129848285016100f3565b91505092915050565b5f8115159050919050565b61014681610132565b82525050565b5f60208201905061015f5f83018461013d565b92915050565b61016e816100cc565b82525050565b5f6020820190506101875f830184610165565b9291505056fea2646970667358221220c2bbdc563ad50f11ad7d3ea55d5df94f1a06509fb823c1cc2034b6abdb29193c64736f6c634300081a0033",
							"opcodes": "PUSH2 0x1C3 PUSH2 0x4D PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH0 BYTE PUSH1 0x73 EQ PUSH1 0x41 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH0 MSTORE PUSH0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH0 REVERT JUMPDEST ADDRESS PUSH0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x16279055 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x38CC4831 EQ PUSH2 0x73 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x107 JUMP JUMPDEST PUSH2 0x91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A SWAP2 SWAP1 PUSH2 0x14C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7B PUSH2 0xA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x88 SWAP2 SWAP1 PUSH2 0x174 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 ADDRESS SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD6 DUP3 PUSH2 0xAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE6 DUP2 PUSH2 0xCC JUMP JUMPDEST DUP2 EQ PUSH2 0xF0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x101 DUP2 PUSH2 0xDD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11C JUMPI PUSH2 0x11B PUSH2 0xA9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x129 DUP5 DUP3 DUP6 ADD PUSH2 0xF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x146 DUP2 PUSH2 0x132 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15F PUSH0 DUP4 ADD DUP5 PUSH2 0x13D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16E DUP2 PUSH2 0xCC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x187 PUSH0 DUP4 ADD DUP5 PUSH2 0x165 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 0xBB 0xDC JUMP GASPRICE 0xD5 0xF GT 0xAD PUSH30 0x3EA55D5DF94F1A06509FB823C1CC2034B6ABDB29193C64736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "138:306:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getAddress_309": {
									"entryPoint": 162,
									"id": 309,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@isContract_298": {
									"entryPoint": 145,
									"id": 298,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_address": {
									"entryPoint": 243,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 263,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack_library": {
									"entryPoint": 357,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_bool_to_t_bool_fromStack_library": {
									"entryPoint": 317,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_library_reversed": {
									"entryPoint": 372,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_library_reversed": {
									"entryPoint": 332,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 204,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 306,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 173,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 169,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 221,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2000:4",
										"nodeType": "YulBlock",
										"src": "0:2000:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:4",
													"nodeType": "YulBlock",
													"src": "47:35:4",
													"statements": [
														{
															"nativeSrc": "57:19:4",
															"nodeType": "YulAssignment",
															"src": "57:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:4",
																		"nodeType": "YulLiteral",
																		"src": "73:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:4"
																},
																"nativeSrc": "67:9:4",
																"nodeType": "YulFunctionCall",
																"src": "67:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:4",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:4",
														"nodeType": "YulTypedName",
														"src": "40:6:4",
														"type": ""
													}
												],
												"src": "7:75:4"
											},
											{
												"body": {
													"nativeSrc": "177:28:4",
													"nodeType": "YulBlock",
													"src": "177:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:4",
																		"nodeType": "YulLiteral",
																		"src": "194:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:4",
																		"nodeType": "YulLiteral",
																		"src": "197:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:4"
																},
																"nativeSrc": "187:12:4",
																"nodeType": "YulFunctionCall",
																"src": "187:12:4"
															},
															"nativeSrc": "187:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:4"
											},
											{
												"body": {
													"nativeSrc": "300:28:4",
													"nodeType": "YulBlock",
													"src": "300:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:4",
																		"nodeType": "YulLiteral",
																		"src": "317:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:4",
																		"nodeType": "YulLiteral",
																		"src": "320:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:4"
																},
																"nativeSrc": "310:12:4",
																"nodeType": "YulFunctionCall",
																"src": "310:12:4"
															},
															"nativeSrc": "310:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:4"
											},
											{
												"body": {
													"nativeSrc": "379:81:4",
													"nodeType": "YulBlock",
													"src": "379:81:4",
													"statements": [
														{
															"nativeSrc": "389:65:4",
															"nodeType": "YulAssignment",
															"src": "389:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "404:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "404:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "411:42:4",
																		"nodeType": "YulLiteral",
																		"src": "411:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "400:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "400:3:4"
																},
																"nativeSrc": "400:54:4",
																"nodeType": "YulFunctionCall",
																"src": "400:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "334:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:4",
														"nodeType": "YulTypedName",
														"src": "361:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:4",
														"nodeType": "YulTypedName",
														"src": "371:7:4",
														"type": ""
													}
												],
												"src": "334:126:4"
											},
											{
												"body": {
													"nativeSrc": "511:51:4",
													"nodeType": "YulBlock",
													"src": "511:51:4",
													"statements": [
														{
															"nativeSrc": "521:35:4",
															"nodeType": "YulAssignment",
															"src": "521:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "550:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "550:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "532:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "532:17:4"
																},
																"nativeSrc": "532:24:4",
																"nodeType": "YulFunctionCall",
																"src": "532:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "521:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "521:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "466:96:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "493:5:4",
														"nodeType": "YulTypedName",
														"src": "493:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "503:7:4",
														"nodeType": "YulTypedName",
														"src": "503:7:4",
														"type": ""
													}
												],
												"src": "466:96:4"
											},
											{
												"body": {
													"nativeSrc": "611:79:4",
													"nodeType": "YulBlock",
													"src": "611:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "668:16:4",
																"nodeType": "YulBlock",
																"src": "668:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "677:1:4",
																					"nodeType": "YulLiteral",
																					"src": "677:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "680:1:4",
																					"nodeType": "YulLiteral",
																					"src": "680:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "670:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "670:6:4"
																			},
																			"nativeSrc": "670:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "670:12:4"
																		},
																		"nativeSrc": "670:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "670:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "634:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "634:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "659:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "659:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "641:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "641:17:4"
																				},
																				"nativeSrc": "641:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "641:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "631:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "631:2:4"
																		},
																		"nativeSrc": "631:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "631:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "624:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "624:6:4"
																},
																"nativeSrc": "624:43:4",
																"nodeType": "YulFunctionCall",
																"src": "624:43:4"
															},
															"nativeSrc": "621:63:4",
															"nodeType": "YulIf",
															"src": "621:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "568:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "604:5:4",
														"nodeType": "YulTypedName",
														"src": "604:5:4",
														"type": ""
													}
												],
												"src": "568:122:4"
											},
											{
												"body": {
													"nativeSrc": "748:87:4",
													"nodeType": "YulBlock",
													"src": "748:87:4",
													"statements": [
														{
															"nativeSrc": "758:29:4",
															"nodeType": "YulAssignment",
															"src": "758:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "780:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "780:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "767:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "767:12:4"
																},
																"nativeSrc": "767:20:4",
																"nodeType": "YulFunctionCall",
																"src": "767:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "758:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "758:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "823:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "823:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "796:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "796:26:4"
																},
																"nativeSrc": "796:33:4",
																"nodeType": "YulFunctionCall",
																"src": "796:33:4"
															},
															"nativeSrc": "796:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "796:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "696:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "726:6:4",
														"nodeType": "YulTypedName",
														"src": "726:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "734:3:4",
														"nodeType": "YulTypedName",
														"src": "734:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "742:5:4",
														"nodeType": "YulTypedName",
														"src": "742:5:4",
														"type": ""
													}
												],
												"src": "696:139:4"
											},
											{
												"body": {
													"nativeSrc": "907:263:4",
													"nodeType": "YulBlock",
													"src": "907:263:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "953:83:4",
																"nodeType": "YulBlock",
																"src": "953:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "955:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "955:77:4"
																			},
																			"nativeSrc": "955:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "955:79:4"
																		},
																		"nativeSrc": "955:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "955:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "928:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "928:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "937:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "937:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "924:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "924:3:4"
																		},
																		"nativeSrc": "924:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "924:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "949:2:4",
																		"nodeType": "YulLiteral",
																		"src": "949:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "920:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "920:3:4"
																},
																"nativeSrc": "920:32:4",
																"nodeType": "YulFunctionCall",
																"src": "920:32:4"
															},
															"nativeSrc": "917:119:4",
															"nodeType": "YulIf",
															"src": "917:119:4"
														},
														{
															"nativeSrc": "1046:117:4",
															"nodeType": "YulBlock",
															"src": "1046:117:4",
															"statements": [
																{
																	"nativeSrc": "1061:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1061:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1075:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1075:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1065:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1065:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1090:63:4",
																	"nodeType": "YulAssignment",
																	"src": "1090:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1125:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1125:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1136:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1136:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1121:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1121:3:4"
																				},
																				"nativeSrc": "1121:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1121:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1145:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1145:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1100:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "1100:20:4"
																		},
																		"nativeSrc": "1100:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1100:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1090:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1090:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "841:329:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "877:9:4",
														"nodeType": "YulTypedName",
														"src": "877:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "888:7:4",
														"nodeType": "YulTypedName",
														"src": "888:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "900:6:4",
														"nodeType": "YulTypedName",
														"src": "900:6:4",
														"type": ""
													}
												],
												"src": "841:329:4"
											},
											{
												"body": {
													"nativeSrc": "1218:48:4",
													"nodeType": "YulBlock",
													"src": "1218:48:4",
													"statements": [
														{
															"nativeSrc": "1228:32:4",
															"nodeType": "YulAssignment",
															"src": "1228:32:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1253:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1253:5:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1246:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1246:6:4"
																		},
																		"nativeSrc": "1246:13:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1246:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1239:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1239:6:4"
																},
																"nativeSrc": "1239:21:4",
																"nodeType": "YulFunctionCall",
																"src": "1239:21:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1228:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "1228:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1176:90:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1200:5:4",
														"nodeType": "YulTypedName",
														"src": "1200:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1210:7:4",
														"nodeType": "YulTypedName",
														"src": "1210:7:4",
														"type": ""
													}
												],
												"src": "1176:90:4"
											},
											{
												"body": {
													"nativeSrc": "1339:50:4",
													"nodeType": "YulBlock",
													"src": "1339:50:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1356:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1356:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1376:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1376:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1361:14:4",
																			"nodeType": "YulIdentifier",
																			"src": "1361:14:4"
																		},
																		"nativeSrc": "1361:21:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1361:21:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1349:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1349:6:4"
																},
																"nativeSrc": "1349:34:4",
																"nodeType": "YulFunctionCall",
																"src": "1349:34:4"
															},
															"nativeSrc": "1349:34:4",
															"nodeType": "YulExpressionStatement",
															"src": "1349:34:4"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack_library",
												"nativeSrc": "1272:117:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1327:5:4",
														"nodeType": "YulTypedName",
														"src": "1327:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1334:3:4",
														"nodeType": "YulTypedName",
														"src": "1334:3:4",
														"type": ""
													}
												],
												"src": "1272:117:4"
											},
											{
												"body": {
													"nativeSrc": "1495:126:4",
													"nodeType": "YulBlock",
													"src": "1495:126:4",
													"statements": [
														{
															"nativeSrc": "1505:26:4",
															"nodeType": "YulAssignment",
															"src": "1505:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1517:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1517:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1528:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1528:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1513:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1513:3:4"
																},
																"nativeSrc": "1513:18:4",
																"nodeType": "YulFunctionCall",
																"src": "1513:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1505:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1505:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1587:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1587:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1600:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1600:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1611:1:4",
																				"nodeType": "YulLiteral",
																				"src": "1611:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1596:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1596:3:4"
																		},
																		"nativeSrc": "1596:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1596:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack_library",
																	"nativeSrc": "1541:45:4",
																	"nodeType": "YulIdentifier",
																	"src": "1541:45:4"
																},
																"nativeSrc": "1541:73:4",
																"nodeType": "YulFunctionCall",
																"src": "1541:73:4"
															},
															"nativeSrc": "1541:73:4",
															"nodeType": "YulExpressionStatement",
															"src": "1541:73:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_library_reversed",
												"nativeSrc": "1395:226:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1467:9:4",
														"nodeType": "YulTypedName",
														"src": "1467:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1479:6:4",
														"nodeType": "YulTypedName",
														"src": "1479:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1490:4:4",
														"nodeType": "YulTypedName",
														"src": "1490:4:4",
														"type": ""
													}
												],
												"src": "1395:226:4"
											},
											{
												"body": {
													"nativeSrc": "1700:53:4",
													"nodeType": "YulBlock",
													"src": "1700:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1717:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "1717:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1740:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1740:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "1722:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "1722:17:4"
																		},
																		"nativeSrc": "1722:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1722:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1710:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1710:6:4"
																},
																"nativeSrc": "1710:37:4",
																"nodeType": "YulFunctionCall",
																"src": "1710:37:4"
															},
															"nativeSrc": "1710:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "1710:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack_library",
												"nativeSrc": "1627:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1688:5:4",
														"nodeType": "YulTypedName",
														"src": "1688:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1695:3:4",
														"nodeType": "YulTypedName",
														"src": "1695:3:4",
														"type": ""
													}
												],
												"src": "1627:126:4"
											},
											{
												"body": {
													"nativeSrc": "1865:132:4",
													"nodeType": "YulBlock",
													"src": "1865:132:4",
													"statements": [
														{
															"nativeSrc": "1875:26:4",
															"nodeType": "YulAssignment",
															"src": "1875:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1887:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "1887:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1898:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1898:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1883:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1883:3:4"
																},
																"nativeSrc": "1883:18:4",
																"nodeType": "YulFunctionCall",
																"src": "1883:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1875:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "1875:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1963:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1963:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1976:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1976:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1987:1:4",
																				"nodeType": "YulLiteral",
																				"src": "1987:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1972:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1972:3:4"
																		},
																		"nativeSrc": "1972:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1972:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack_library",
																	"nativeSrc": "1911:51:4",
																	"nodeType": "YulIdentifier",
																	"src": "1911:51:4"
																},
																"nativeSrc": "1911:79:4",
																"nodeType": "YulFunctionCall",
																"src": "1911:79:4"
															},
															"nativeSrc": "1911:79:4",
															"nodeType": "YulExpressionStatement",
															"src": "1911:79:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_library_reversed",
												"nativeSrc": "1759:238:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1837:9:4",
														"nodeType": "YulTypedName",
														"src": "1837:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1849:6:4",
														"nodeType": "YulTypedName",
														"src": "1849:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1860:4:4",
														"nodeType": "YulTypedName",
														"src": "1860:4:4",
														"type": ""
													}
												],
												"src": "1759:238:4"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack_library(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_library_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack_library(value0,  add(headStart, 0))\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack_library(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_library_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack_library(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "730000000000000000000000000000000000000000301460806040526004361061003f575f3560e01c8063162790551461004357806338cc483114610073575b5f80fd5b61005d60048036038101906100589190610107565b610091565b60405161006a919061014c565b60405180910390f35b61007b6100a2565b6040516100889190610174565b60405180910390f35b5f80823b90505f8111915050919050565b5f30905090565b5f80fd5b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6100d6826100ad565b9050919050565b6100e6816100cc565b81146100f0575f80fd5b50565b5f81359050610101816100dd565b92915050565b5f6020828403121561011c5761011b6100a9565b5b5f610129848285016100f3565b91505092915050565b5f8115159050919050565b61014681610132565b82525050565b5f60208201905061015f5f83018461013d565b92915050565b61016e816100cc565b82525050565b5f6020820190506101875f830184610165565b9291505056fea2646970667358221220c2bbdc563ad50f11ad7d3ea55d5df94f1a06509fb823c1cc2034b6abdb29193c64736f6c634300081a0033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x3F JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x16279055 EQ PUSH2 0x43 JUMPI DUP1 PUSH4 0x38CC4831 EQ PUSH2 0x73 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x5D PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x58 SWAP2 SWAP1 PUSH2 0x107 JUMP JUMPDEST PUSH2 0x91 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x6A SWAP2 SWAP1 PUSH2 0x14C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x7B PUSH2 0xA2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x88 SWAP2 SWAP1 PUSH2 0x174 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 DUP3 EXTCODESIZE SWAP1 POP PUSH0 DUP2 GT SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 ADDRESS SWAP1 POP SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0xD6 DUP3 PUSH2 0xAD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xE6 DUP2 PUSH2 0xCC JUMP JUMPDEST DUP2 EQ PUSH2 0xF0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x101 DUP2 PUSH2 0xDD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x11C JUMPI PUSH2 0x11B PUSH2 0xA9 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x129 DUP5 DUP3 DUP6 ADD PUSH2 0xF3 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x146 DUP2 PUSH2 0x132 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x15F PUSH0 DUP4 ADD DUP5 PUSH2 0x13D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x16E DUP2 PUSH2 0xCC JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x187 PUSH0 DUP4 ADD DUP5 PUSH2 0x165 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xC2 0xBB 0xDC JUMP GASPRICE 0xD5 0xF GT 0xAD PUSH30 0x3EA55D5DF94F1A06509FB823C1CC2034B6ABDB29193C64736F6C63430008 BYTE STOP CALLER ",
							"sourceMap": "138:306:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;161:188;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;355:87;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;161:188;219:4;235:12;300:7;288:20;280:28;;341:1;334:4;:8;327:15;;;161:188;;;:::o;355:87::-;397:7;430:4;415:20;;355:87;:::o;88:117:4:-;197:1;194;187:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:329::-;900:6;949:2;937:9;928:7;924:23;920:32;917:119;;;955:79;;:::i;:::-;917:119;1075:1;1100:53;1145:7;1136:6;1125:9;1121:22;1100:53;:::i;:::-;1090:63;;1046:117;841:329;;;;:::o;1176:90::-;1210:7;1253:5;1246:13;1239:21;1228:32;;1176:90;;;:::o;1272:117::-;1361:21;1376:5;1361:21;:::i;:::-;1356:3;1349:34;1272:117;;:::o;1395:226::-;1490:4;1528:2;1517:9;1513:18;1505:26;;1541:73;1611:1;1600:9;1596:17;1587:6;1541:73;:::i;:::-;1395:226;;;;:::o;1627:126::-;1722:24;1740:5;1722:24;:::i;:::-;1717:3;1710:37;1627:126;;:::o;1759:238::-;1860:4;1898:2;1887:9;1883:18;1875:26;;1911:79;1987:1;1976:9;1972:17;1963:6;1911:79;:::i;:::-;1759:238;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "90200",
								"executionCost": "164",
								"totalCost": "90364"
							},
							"external": {
								"getAddress()": "363",
								"isContract(address)": "3227"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 138,
									"end": 444,
									"name": "PUSH #[$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 138,
									"end": 444,
									"name": "PUSH [$]",
									"source": 2,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 138,
									"end": 444,
									"name": "PUSH",
									"source": 2,
									"value": "B"
								},
								{
									"begin": 138,
									"end": 444,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 138,
									"end": 444,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 138,
									"end": 444,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 138,
									"end": 444,
									"name": "CODECOPY",
									"source": 2
								},
								{
									"begin": 138,
									"end": 444,
									"name": "DUP1",
									"source": 2
								},
								{
									"begin": 138,
									"end": 444,
									"name": "MLOAD",
									"source": 2
								},
								{
									"begin": 138,
									"end": 444,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 138,
									"end": 444,
									"name": "BYTE",
									"source": 2
								},
								{
									"begin": 138,
									"end": 444,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 138,
									"end": 444,
									"name": "EQ",
									"source": 2
								},
								{
									"begin": 138,
									"end": 444,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 138,
									"end": 444,
									"name": "JUMPI",
									"source": 2
								},
								{
									"begin": 138,
									"end": 444,
									"name": "PUSH",
									"source": 2,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 138,
									"end": 444,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 138,
									"end": 444,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 138,
									"end": 444,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 138,
									"end": 444,
									"name": "PUSH",
									"source": 2,
									"value": "4"
								},
								{
									"begin": 138,
									"end": 444,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 138,
									"end": 444,
									"name": "PUSH",
									"source": 2,
									"value": "24"
								},
								{
									"begin": 138,
									"end": 444,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 138,
									"end": 444,
									"name": "REVERT",
									"source": 2
								},
								{
									"begin": 138,
									"end": 444,
									"name": "tag",
									"source": 2,
									"value": "1"
								},
								{
									"begin": 138,
									"end": 444,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 138,
									"end": 444,
									"name": "ADDRESS",
									"source": 2
								},
								{
									"begin": 138,
									"end": 444,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 138,
									"end": 444,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 138,
									"end": 444,
									"name": "PUSH",
									"source": 2,
									"value": "73"
								},
								{
									"begin": 138,
									"end": 444,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 138,
									"end": 444,
									"name": "MSTORE8",
									"source": 2
								},
								{
									"begin": 138,
									"end": 444,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 138,
									"end": 444,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 138,
									"end": 444,
									"name": "RETURN",
									"source": 2
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220c2bbdc563ad50f11ad7d3ea55d5df94f1a06509fb823c1cc2034b6abdb29193c64736f6c634300081a0033",
									".code": [
										{
											"begin": 138,
											"end": 444,
											"name": "PUSHDEPLOYADDRESS",
											"source": 2
										},
										{
											"begin": 138,
											"end": 444,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 138,
											"end": 444,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 138,
											"end": 444,
											"name": "PUSH",
											"source": 2,
											"value": "80"
										},
										{
											"begin": 138,
											"end": 444,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 138,
											"end": 444,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 138,
											"end": 444,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 138,
											"end": 444,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 138,
											"end": 444,
											"name": "LT",
											"source": 2
										},
										{
											"begin": 138,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 138,
											"end": 444,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 138,
											"end": 444,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 444,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 138,
											"end": 444,
											"name": "PUSH",
											"source": 2,
											"value": "E0"
										},
										{
											"begin": 138,
											"end": 444,
											"name": "SHR",
											"source": 2
										},
										{
											"begin": 138,
											"end": 444,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 138,
											"end": 444,
											"name": "PUSH",
											"source": 2,
											"value": "16279055"
										},
										{
											"begin": 138,
											"end": 444,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 138,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 138,
											"end": 444,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 138,
											"end": 444,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 138,
											"end": 444,
											"name": "PUSH",
											"source": 2,
											"value": "38CC4831"
										},
										{
											"begin": 138,
											"end": 444,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 138,
											"end": 444,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 138,
											"end": 444,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 138,
											"end": 444,
											"name": "tag",
											"source": 2,
											"value": "1"
										},
										{
											"begin": 138,
											"end": 444,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 138,
											"end": 444,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 138,
											"end": 444,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 138,
											"end": 444,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 161,
											"end": 349,
											"name": "tag",
											"source": 2,
											"value": "2"
										},
										{
											"begin": 161,
											"end": 349,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 161,
											"end": 349,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 161,
											"end": 349,
											"name": "PUSH",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 161,
											"end": 349,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 161,
											"end": 349,
											"name": "CALLDATASIZE",
											"source": 2
										},
										{
											"begin": 161,
											"end": 349,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 161,
											"end": 349,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 161,
											"end": 349,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 161,
											"end": 349,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 161,
											"end": 349,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 161,
											"end": 349,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 161,
											"end": 349,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 161,
											"end": 349,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "6"
										},
										{
											"begin": 161,
											"end": 349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 161,
											"end": 349,
											"name": "tag",
											"source": 2,
											"value": "5"
										},
										{
											"begin": 161,
											"end": 349,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 161,
											"end": 349,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 161,
											"end": 349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 161,
											"end": 349,
											"name": "tag",
											"source": 2,
											"value": "4"
										},
										{
											"begin": 161,
											"end": 349,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 161,
											"end": 349,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 161,
											"end": 349,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 161,
											"end": 349,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 161,
											"end": 349,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 161,
											"end": 349,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 161,
											"end": 349,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "9"
										},
										{
											"begin": 161,
											"end": 349,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 161,
											"end": 349,
											"name": "tag",
											"source": 2,
											"value": "8"
										},
										{
											"begin": 161,
											"end": 349,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 161,
											"end": 349,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 161,
											"end": 349,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 161,
											"end": 349,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 161,
											"end": 349,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 161,
											"end": 349,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 161,
											"end": 349,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 161,
											"end": 349,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 355,
											"end": 442,
											"name": "tag",
											"source": 2,
											"value": "3"
										},
										{
											"begin": 355,
											"end": 442,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 355,
											"end": 442,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 355,
											"end": 442,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 355,
											"end": 442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 355,
											"end": 442,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 355,
											"end": 442,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 355,
											"end": 442,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 355,
											"end": 442,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 355,
											"end": 442,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 355,
											"end": 442,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 355,
											"end": 442,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 355,
											"end": 442,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "13"
										},
										{
											"begin": 355,
											"end": 442,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 355,
											"end": 442,
											"name": "tag",
											"source": 2,
											"value": "12"
										},
										{
											"begin": 355,
											"end": 442,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 355,
											"end": 442,
											"name": "PUSH",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 355,
											"end": 442,
											"name": "MLOAD",
											"source": 2
										},
										{
											"begin": 355,
											"end": 442,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 355,
											"end": 442,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 355,
											"end": 442,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 355,
											"end": 442,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 355,
											"end": 442,
											"name": "RETURN",
											"source": 2
										},
										{
											"begin": 161,
											"end": 349,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 161,
											"end": 349,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 219,
											"end": 223,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 235,
											"end": 247,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 300,
											"end": 307,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 288,
											"end": 308,
											"name": "EXTCODESIZE",
											"source": 2
										},
										{
											"begin": 280,
											"end": 308,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 280,
											"end": 308,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 341,
											"end": 342,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 334,
											"end": 338,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 334,
											"end": 342,
											"name": "GT",
											"source": 2
										},
										{
											"begin": 327,
											"end": 342,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 327,
											"end": 342,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 327,
											"end": 342,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 161,
											"end": 349,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 161,
											"end": 349,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 161,
											"end": 349,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 161,
											"end": 349,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 355,
											"end": 442,
											"name": "tag",
											"source": 2,
											"value": "11"
										},
										{
											"begin": 355,
											"end": 442,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 397,
											"end": 404,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 430,
											"end": 434,
											"name": "ADDRESS",
											"source": 2
										},
										{
											"begin": 415,
											"end": 435,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 415,
											"end": 435,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 355,
											"end": 442,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 355,
											"end": 442,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "tag",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 334,
											"end": 460,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 453,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 404,
											"end": 409,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 400,
											"end": 454,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 389,
											"end": 454,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 389,
											"end": 454,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 334,
											"end": 460,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 466,
											"end": 562,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 503,
											"end": 510,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 550,
											"end": 555,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 532,
											"end": 556,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "19"
										},
										{
											"begin": 532,
											"end": 556,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 532,
											"end": 556,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 532,
											"end": 556,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 521,
											"end": 556,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 521,
											"end": 556,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 466,
											"end": 562,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"name": "tag",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 568,
											"end": 690,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 659,
											"end": 664,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 641,
											"end": 665,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 641,
											"end": 665,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 641,
											"end": 665,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 634,
											"end": 639,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 631,
											"end": 666,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 621,
											"end": 684,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 680,
											"end": 681,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 677,
											"end": 678,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 670,
											"end": 682,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 621,
											"end": 684,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 621,
											"end": 684,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 568,
											"end": 690,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 696,
											"end": 835,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 742,
											"end": 747,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 786,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 767,
											"end": 787,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 758,
											"end": 787,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 758,
											"end": 787,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 823,
											"end": 828,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "21"
										},
										{
											"begin": 796,
											"end": 829,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 796,
											"end": 829,
											"name": "tag",
											"source": 4,
											"value": "37"
										},
										{
											"begin": 796,
											"end": 829,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 696,
											"end": 835,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "tag",
											"source": 4,
											"value": "6"
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 900,
											"end": 906,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 949,
											"end": 951,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 937,
											"end": 946,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 928,
											"end": 935,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 924,
											"end": 947,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 920,
											"end": 952,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "17"
										},
										{
											"begin": 955,
											"end": 1034,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 955,
											"end": 1034,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "tag",
											"source": 4,
											"value": "39"
										},
										{
											"begin": 917,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1075,
											"end": 1076,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 1145,
											"end": 1152,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1136,
											"end": 1142,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1125,
											"end": 1134,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1121,
											"end": 1143,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 1100,
											"end": 1153,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "tag",
											"source": 4,
											"value": "41"
										},
										{
											"begin": 1100,
											"end": 1153,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1090,
											"end": 1153,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1046,
											"end": 1163,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 841,
											"end": 1170,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1210,
											"end": 1217,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1253,
											"end": 1258,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1246,
											"end": 1259,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1239,
											"end": 1260,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1228,
											"end": 1260,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1266,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1176,
											"end": 1266,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1272,
											"end": 1389,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1272,
											"end": 1389,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1361,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1376,
											"end": 1381,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1361,
											"end": 1382,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 1361,
											"end": 1382,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1361,
											"end": 1382,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 1361,
											"end": 1382,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1356,
											"end": 1359,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1349,
											"end": 1383,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1272,
											"end": 1389,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1272,
											"end": 1389,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1272,
											"end": 1389,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1395,
											"end": 1621,
											"name": "tag",
											"source": 4,
											"value": "9"
										},
										{
											"begin": 1395,
											"end": 1621,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1490,
											"end": 1494,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1528,
											"end": 1530,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1517,
											"end": 1526,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1513,
											"end": 1531,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1531,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1505,
											"end": 1531,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1541,
											"end": 1614,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1611,
											"end": 1612,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1600,
											"end": 1609,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1596,
											"end": 1613,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1587,
											"end": 1593,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1541,
											"end": 1614,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 1541,
											"end": 1614,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1541,
											"end": 1614,
											"name": "tag",
											"source": 4,
											"value": "46"
										},
										{
											"begin": 1541,
											"end": 1614,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1395,
											"end": 1621,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1395,
											"end": 1621,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1395,
											"end": 1621,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1395,
											"end": 1621,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1395,
											"end": 1621,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1627,
											"end": 1753,
											"name": "tag",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1627,
											"end": 1753,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1722,
											"end": 1746,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1740,
											"end": 1745,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1722,
											"end": 1746,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1722,
											"end": 1746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1722,
											"end": 1746,
											"name": "tag",
											"source": 4,
											"value": "48"
										},
										{
											"begin": 1722,
											"end": 1746,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1717,
											"end": 1720,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1710,
											"end": 1747,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 1627,
											"end": 1753,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1627,
											"end": 1753,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1627,
											"end": 1753,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1997,
											"name": "tag",
											"source": 4,
											"value": "13"
										},
										{
											"begin": 1759,
											"end": 1997,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1860,
											"end": 1864,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1898,
											"end": 1900,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1887,
											"end": 1896,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1883,
											"end": 1901,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1875,
											"end": 1901,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1875,
											"end": 1901,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1911,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1987,
											"end": 1988,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1976,
											"end": 1985,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1972,
											"end": 1989,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1963,
											"end": 1969,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 1911,
											"end": 1990,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "25"
										},
										{
											"begin": 1911,
											"end": 1990,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1911,
											"end": 1990,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 1911,
											"end": 1990,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1997,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1997,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1997,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1997,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1759,
											"end": 1997,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"homework/03/地址工具/Address2.sol",
								"homework/03/地址工具/MyToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getAddress()": "38cc4831",
							"isContract(address)": "16279055"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"isContract\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"homework/03/\\u5730\\u5740\\u5de5\\u5177/Address2.sol\":\"Address2\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"homework/03/\\u5730\\u5740\\u5de5\\u5177/Address2.sol\":{\"keccak256\":\"0x40313125d0d8323f317ceca9c510ef8f59a7f36aaefacadeed97cc5a1a7395a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a02b35f698388a9c1beba7e42d5542ff5744302e122f4068d4c97af9edd2ccc\",\"dweb:/ipfs/QmUztFjFpFw4298v3W4Fcq9wzH7mwy8qDumrBWUYyropEu\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"homework/03/地址工具/MyToken.sol": {
				"MyToken": {
					"abi": [
						{
							"inputs": [],
							"name": "getAddress",
							"outputs": [
								{
									"internalType": "address",
									"name": "",
									"type": "address"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "recipient",
									"type": "address"
								},
								{
									"internalType": "uint256",
									"name": "amount",
									"type": "uint256"
								}
							],
							"name": "send",
							"outputs": [],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"homework/03/\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe5\\xb7\\xa5\\xe5\\x85\\xb7/MyToken.sol\":216:672  contract   MyToken {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"homework/03/\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe5\\xb7\\xa5\\xe5\\x85\\xb7/MyToken.sol\":216:672  contract   MyToken {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x38cc4831\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xd0679d34\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"homework/03/\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe5\\xb7\\xa5\\xe5\\x85\\xb7/MyToken.sol\":426:670  function getAddress() public view returns(address){... */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"homework/03/\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe5\\xb7\\xa5\\xe5\\x85\\xb7/MyToken.sol\":274:420  function send(address recipient, uint256 amount) external view {... */\n    tag_4:\n      tag_9\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n      tag_12\n      jump\t// in\n    tag_9:\n      stop\n        /* \"homework/03/\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe5\\xb7\\xa5\\xe5\\x85\\xb7/MyToken.sol\":426:670  function getAddress() public view returns(address){... */\n    tag_6:\n        /* \"homework/03/\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe5\\xb7\\xa5\\xe5\\x85\\xb7/MyToken.sol\":468:475  address */\n      0x00\n        /* \"homework/03/\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe5\\xb7\\xa5\\xe5\\x85\\xb7/MyToken.sol\":485:497  address addr */\n      dup1\n        /* \"homework/03/\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe5\\xb7\\xa5\\xe5\\x85\\xb7/MyToken.sol\":500:542  0x690B9A9E9aa1C9dB991C7721a92d351Db4FaC990 */\n      0x690b9a9e9aa1c9db991c7721a92d351db4fac990\n        /* \"homework/03/\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe5\\xb7\\xa5\\xe5\\x85\\xb7/MyToken.sol\":485:542  address addr = 0x690B9A9E9aa1C9dB991C7721a92d351Db4FaC990 */\n      swap1\n      pop\n        /* \"homework/03/\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe5\\xb7\\xa5\\xe5\\x85\\xb7/MyToken.sol\":556:580  address payable addr_pay */\n      0x00\n        /* \"homework/03/\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe5\\xb7\\xa5\\xe5\\x85\\xb7/MyToken.sol\":591:633  0x8306300ffd616049FD7e4b0354a64Da835c1A81C */\n      0x8306300ffd616049fd7e4b0354a64da835c1a81c\n        /* \"homework/03/\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe5\\xb7\\xa5\\xe5\\x85\\xb7/MyToken.sol\":556:634  address payable addr_pay = payable(0x8306300ffd616049FD7e4b0354a64Da835c1A81C) */\n      swap1\n      pop\n        /* \"homework/03/\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe5\\xb7\\xa5\\xe5\\x85\\xb7/MyToken.sol\":655:663  addr_pay */\n      dup1\n        /* \"homework/03/\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe5\\xb7\\xa5\\xe5\\x85\\xb7/MyToken.sol\":648:663  return addr_pay */\n      swap3\n      pop\n      pop\n      pop\n        /* \"homework/03/\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe5\\xb7\\xa5\\xe5\\x85\\xb7/MyToken.sol\":426:670  function getAddress() public view returns(address){... */\n      swap1\n      jump\t// out\n        /* \"homework/03/\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe5\\xb7\\xa5\\xe5\\x85\\xb7/MyToken.sol\":274:420  function send(address recipient, uint256 amount) external view {... */\n    tag_12:\n        /* \"homework/03/\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe5\\xb7\\xa5\\xe5\\x85\\xb7/MyToken.sol\":351:360  recipient */\n      dup2\n        /* \"homework/03/\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe5\\xb7\\xa5\\xe5\\x85\\xb7/MyToken.sol\":351:371  recipient.isContract */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      linkerSymbol(\"599282a5196c97bcb60ebd484ef6e451211602b50354f495dc2ea248d385be8d\")\n      0x16279055\n      swap1\n      swap2\n        /* \"homework/03/\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe5\\xb7\\xa5\\xe5\\x85\\xb7/MyToken.sol\":351:373  recipient.isContract() */\n      mload(0x40)\n      dup3\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      tag_15\n      swap2\n      swap1\n      tag_16\n      jump\t// in\n    tag_15:\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      delegatecall\n      iszero\n      dup1\n      iszero\n      tag_18\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_18:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_19\n      swap2\n      swap1\n      tag_20\n      jump\t// in\n    tag_19:\n        /* \"homework/03/\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe5\\xb7\\xa5\\xe5\\x85\\xb7/MyToken.sol\":347:414  if (recipient.isContract()) {... */\n      pop\n        /* \"homework/03/\\xe5\\x9c\\xb0\\xe5\\x9d\\x80\\xe5\\xb7\\xa5\\xe5\\x85\\xb7/MyToken.sol\":274:420  function send(address recipient, uint256 amount) external view {... */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:133   */\n    tag_22:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":84:126   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":77:82   */\n      dup3\n        /* \"#utility.yul\":73:127   */\n      and\n        /* \"#utility.yul\":62:127   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:133   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":139:235   */\n    tag_23:\n        /* \"#utility.yul\":176:183   */\n      0x00\n        /* \"#utility.yul\":205:229   */\n      tag_40\n        /* \"#utility.yul\":223:228   */\n      dup3\n        /* \"#utility.yul\":205:229   */\n      tag_22\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":194:229   */\n      swap1\n      pop\n        /* \"#utility.yul\":139:235   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":241:359   */\n    tag_24:\n        /* \"#utility.yul\":328:352   */\n      tag_42\n        /* \"#utility.yul\":346:351   */\n      dup2\n        /* \"#utility.yul\":328:352   */\n      tag_23\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":323:326   */\n      dup3\n        /* \"#utility.yul\":316:353   */\n      mstore\n        /* \"#utility.yul\":241:359   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":365:587   */\n    tag_8:\n        /* \"#utility.yul\":458:462   */\n      0x00\n        /* \"#utility.yul\":496:498   */\n      0x20\n        /* \"#utility.yul\":485:494   */\n      dup3\n        /* \"#utility.yul\":481:499   */\n      add\n        /* \"#utility.yul\":473:499   */\n      swap1\n      pop\n        /* \"#utility.yul\":509:580   */\n      tag_44\n        /* \"#utility.yul\":577:578   */\n      0x00\n        /* \"#utility.yul\":566:575   */\n      dup4\n        /* \"#utility.yul\":562:579   */\n      add\n        /* \"#utility.yul\":553:559   */\n      dup5\n        /* \"#utility.yul\":509:580   */\n      tag_24\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":365:587   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":674:791   */\n    tag_26:\n        /* \"#utility.yul\":783:784   */\n      0x00\n        /* \"#utility.yul\":780:781   */\n      dup1\n        /* \"#utility.yul\":773:785   */\n      revert\n        /* \"#utility.yul\":920:1042   */\n    tag_28:\n        /* \"#utility.yul\":993:1017   */\n      tag_49\n        /* \"#utility.yul\":1011:1016   */\n      dup2\n        /* \"#utility.yul\":993:1017   */\n      tag_23\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":986:991   */\n      dup2\n        /* \"#utility.yul\":983:1018   */\n      eq\n        /* \"#utility.yul\":973:1036   */\n      tag_50\n      jumpi\n        /* \"#utility.yul\":1032:1033   */\n      0x00\n        /* \"#utility.yul\":1029:1030   */\n      dup1\n        /* \"#utility.yul\":1022:1034   */\n      revert\n        /* \"#utility.yul\":973:1036   */\n    tag_50:\n        /* \"#utility.yul\":920:1042   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1048:1187   */\n    tag_29:\n        /* \"#utility.yul\":1094:1099   */\n      0x00\n        /* \"#utility.yul\":1132:1138   */\n      dup2\n        /* \"#utility.yul\":1119:1139   */\n      calldataload\n        /* \"#utility.yul\":1110:1139   */\n      swap1\n      pop\n        /* \"#utility.yul\":1148:1181   */\n      tag_52\n        /* \"#utility.yul\":1175:1180   */\n      dup2\n        /* \"#utility.yul\":1148:1181   */\n      tag_28\n      jump\t// in\n    tag_52:\n        /* \"#utility.yul\":1048:1187   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1193:1270   */\n    tag_30:\n        /* \"#utility.yul\":1230:1237   */\n      0x00\n        /* \"#utility.yul\":1259:1264   */\n      dup2\n        /* \"#utility.yul\":1248:1264   */\n      swap1\n      pop\n        /* \"#utility.yul\":1193:1270   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1276:1398   */\n    tag_31:\n        /* \"#utility.yul\":1349:1373   */\n      tag_55\n        /* \"#utility.yul\":1367:1372   */\n      dup2\n        /* \"#utility.yul\":1349:1373   */\n      tag_30\n      jump\t// in\n    tag_55:\n        /* \"#utility.yul\":1342:1347   */\n      dup2\n        /* \"#utility.yul\":1339:1374   */\n      eq\n        /* \"#utility.yul\":1329:1392   */\n      tag_56\n      jumpi\n        /* \"#utility.yul\":1388:1389   */\n      0x00\n        /* \"#utility.yul\":1385:1386   */\n      dup1\n        /* \"#utility.yul\":1378:1390   */\n      revert\n        /* \"#utility.yul\":1329:1392   */\n    tag_56:\n        /* \"#utility.yul\":1276:1398   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1404:1543   */\n    tag_32:\n        /* \"#utility.yul\":1450:1455   */\n      0x00\n        /* \"#utility.yul\":1488:1494   */\n      dup2\n        /* \"#utility.yul\":1475:1495   */\n      calldataload\n        /* \"#utility.yul\":1466:1495   */\n      swap1\n      pop\n        /* \"#utility.yul\":1504:1537   */\n      tag_58\n        /* \"#utility.yul\":1531:1536   */\n      dup2\n        /* \"#utility.yul\":1504:1537   */\n      tag_31\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":1404:1543   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1549:2023   */\n    tag_11:\n        /* \"#utility.yul\":1617:1623   */\n      0x00\n        /* \"#utility.yul\":1625:1631   */\n      dup1\n        /* \"#utility.yul\":1674:1676   */\n      0x40\n        /* \"#utility.yul\":1662:1671   */\n      dup4\n        /* \"#utility.yul\":1653:1660   */\n      dup6\n        /* \"#utility.yul\":1649:1672   */\n      sub\n        /* \"#utility.yul\":1645:1677   */\n      slt\n        /* \"#utility.yul\":1642:1761   */\n      iszero\n      tag_60\n      jumpi\n        /* \"#utility.yul\":1680:1759   */\n      tag_61\n      tag_26\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":1642:1761   */\n    tag_60:\n        /* \"#utility.yul\":1800:1801   */\n      0x00\n        /* \"#utility.yul\":1825:1878   */\n      tag_62\n        /* \"#utility.yul\":1870:1877   */\n      dup6\n        /* \"#utility.yul\":1861:1867   */\n      dup3\n        /* \"#utility.yul\":1850:1859   */\n      dup7\n        /* \"#utility.yul\":1846:1868   */\n      add\n        /* \"#utility.yul\":1825:1878   */\n      tag_29\n      jump\t// in\n    tag_62:\n        /* \"#utility.yul\":1815:1878   */\n      swap3\n      pop\n        /* \"#utility.yul\":1771:1888   */\n      pop\n        /* \"#utility.yul\":1927:1929   */\n      0x20\n        /* \"#utility.yul\":1953:2006   */\n      tag_63\n        /* \"#utility.yul\":1998:2005   */\n      dup6\n        /* \"#utility.yul\":1989:1995   */\n      dup3\n        /* \"#utility.yul\":1978:1987   */\n      dup7\n        /* \"#utility.yul\":1974:1996   */\n      add\n        /* \"#utility.yul\":1953:2006   */\n      tag_32\n      jump\t// in\n    tag_63:\n        /* \"#utility.yul\":1943:2006   */\n      swap2\n      pop\n        /* \"#utility.yul\":1898:2016   */\n      pop\n        /* \"#utility.yul\":1549:2023   */\n      swap3\n      pop\n      swap3\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2029:2155   */\n    tag_33:\n        /* \"#utility.yul\":2124:2148   */\n      tag_65\n        /* \"#utility.yul\":2142:2147   */\n      dup2\n        /* \"#utility.yul\":2124:2148   */\n      tag_23\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":2119:2122   */\n      dup3\n        /* \"#utility.yul\":2112:2149   */\n      mstore\n        /* \"#utility.yul\":2029:2155   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2161:2399   */\n    tag_16:\n        /* \"#utility.yul\":2262:2266   */\n      0x00\n        /* \"#utility.yul\":2300:2302   */\n      0x20\n        /* \"#utility.yul\":2289:2298   */\n      dup3\n        /* \"#utility.yul\":2285:2303   */\n      add\n        /* \"#utility.yul\":2277:2303   */\n      swap1\n      pop\n        /* \"#utility.yul\":2313:2392   */\n      tag_67\n        /* \"#utility.yul\":2389:2390   */\n      0x00\n        /* \"#utility.yul\":2378:2387   */\n      dup4\n        /* \"#utility.yul\":2374:2391   */\n      add\n        /* \"#utility.yul\":2365:2371   */\n      dup5\n        /* \"#utility.yul\":2313:2392   */\n      tag_33\n      jump\t// in\n    tag_67:\n        /* \"#utility.yul\":2161:2399   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2405:2495   */\n    tag_34:\n        /* \"#utility.yul\":2439:2446   */\n      0x00\n        /* \"#utility.yul\":2482:2487   */\n      dup2\n        /* \"#utility.yul\":2475:2488   */\n      iszero\n        /* \"#utility.yul\":2468:2489   */\n      iszero\n        /* \"#utility.yul\":2457:2489   */\n      swap1\n      pop\n        /* \"#utility.yul\":2405:2495   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2501:2617   */\n    tag_35:\n        /* \"#utility.yul\":2571:2592   */\n      tag_70\n        /* \"#utility.yul\":2586:2591   */\n      dup2\n        /* \"#utility.yul\":2571:2592   */\n      tag_34\n      jump\t// in\n    tag_70:\n        /* \"#utility.yul\":2564:2569   */\n      dup2\n        /* \"#utility.yul\":2561:2593   */\n      eq\n        /* \"#utility.yul\":2551:2611   */\n      tag_71\n      jumpi\n        /* \"#utility.yul\":2607:2608   */\n      0x00\n        /* \"#utility.yul\":2604:2605   */\n      dup1\n        /* \"#utility.yul\":2597:2609   */\n      revert\n        /* \"#utility.yul\":2551:2611   */\n    tag_71:\n        /* \"#utility.yul\":2501:2617   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2623:2760   */\n    tag_36:\n        /* \"#utility.yul\":2677:2682   */\n      0x00\n        /* \"#utility.yul\":2708:2714   */\n      dup2\n        /* \"#utility.yul\":2702:2715   */\n      mload\n        /* \"#utility.yul\":2693:2715   */\n      swap1\n      pop\n        /* \"#utility.yul\":2724:2754   */\n      tag_73\n        /* \"#utility.yul\":2748:2753   */\n      dup2\n        /* \"#utility.yul\":2724:2754   */\n      tag_35\n      jump\t// in\n    tag_73:\n        /* \"#utility.yul\":2623:2760   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":2766:3111   */\n    tag_20:\n        /* \"#utility.yul\":2833:2839   */\n      0x00\n        /* \"#utility.yul\":2882:2884   */\n      0x20\n        /* \"#utility.yul\":2870:2879   */\n      dup3\n        /* \"#utility.yul\":2861:2868   */\n      dup5\n        /* \"#utility.yul\":2857:2880   */\n      sub\n        /* \"#utility.yul\":2853:2885   */\n      slt\n        /* \"#utility.yul\":2850:2969   */\n      iszero\n      tag_75\n      jumpi\n        /* \"#utility.yul\":2888:2967   */\n      tag_76\n      tag_26\n      jump\t// in\n    tag_76:\n        /* \"#utility.yul\":2850:2969   */\n    tag_75:\n        /* \"#utility.yul\":3008:3009   */\n      0x00\n        /* \"#utility.yul\":3033:3094   */\n      tag_77\n        /* \"#utility.yul\":3086:3093   */\n      dup5\n        /* \"#utility.yul\":3077:3083   */\n      dup3\n        /* \"#utility.yul\":3066:3075   */\n      dup6\n        /* \"#utility.yul\":3062:3084   */\n      add\n        /* \"#utility.yul\":3033:3094   */\n      tag_36\n      jump\t// in\n    tag_77:\n        /* \"#utility.yul\":3023:3094   */\n      swap2\n      pop\n        /* \"#utility.yul\":2979:3104   */\n      pop\n        /* \"#utility.yul\":2766:3111   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122074aa8255b8ff131b15d44715e2656b4f19e49569fd71050d7c565cc6f06cc1e164736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {
								"homework/03/地址工具/Address2.sol": {
									"Address2": [
										{
											"length": 20,
											"start": 224
										}
									]
								}
							},
							"object": "6080604052348015600e575f80fd5b506102f38061001c5f395ff3fe608060405234801561000f575f80fd5b5060043610610034575f3560e01c806338cc483114610038578063d0679d3414610056575b5f80fd5b610040610072565b60405161004d919061017d565b60405180910390f35b610070600480360381019061006b91906101f7565b6100ab565b005b5f8073690b9a9e9aa1c9db991c7721a92d351db4fac99090505f738306300ffd616049fd7e4b0354a64da835c1a81c9050809250505090565b8173ffffffffffffffffffffffffffffffffffffffff1673__$599282a5196c97bcb60ebd484ef6e45121$__631627905590916040518263ffffffff1660e01b81526004016100fa9190610244565b602060405180830381865af4158015610115573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101399190610292565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101678261013e565b9050919050565b6101778161015d565b82525050565b5f6020820190506101905f83018461016e565b92915050565b5f80fd5b6101a38161015d565b81146101ad575f80fd5b50565b5f813590506101be8161019a565b92915050565b5f819050919050565b6101d6816101c4565b81146101e0575f80fd5b50565b5f813590506101f1816101cd565b92915050565b5f806040838503121561020d5761020c610196565b5b5f61021a858286016101b0565b925050602061022b858286016101e3565b9150509250929050565b61023e8161015d565b82525050565b5f6020820190506102575f830184610235565b92915050565b5f8115159050919050565b6102718161025d565b811461027b575f80fd5b50565b5f8151905061028c81610268565b92915050565b5f602082840312156102a7576102a6610196565b5b5f6102b48482850161027e565b9150509291505056fea264697066735822122074aa8255b8ff131b15d44715e2656b4f19e49569fd71050d7c565cc6f06cc1e164736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x2F3 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x38CC4831 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0xD0679D34 EQ PUSH2 0x56 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x40 PUSH2 0x72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x17D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x70 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6B SWAP2 SWAP1 PUSH2 0x1F7 JUMP JUMPDEST PUSH2 0xAB JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH20 0x690B9A9E9AA1C9DB991C7721A92D351DB4FAC990 SWAP1 POP PUSH0 PUSH20 0x8306300FFD616049FD7E4B0354A64DA835C1A81C SWAP1 POP DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0x0 PUSH4 0x16279055 SWAP1 SWAP2 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x244 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x115 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x139 SWAP2 SWAP1 PUSH2 0x292 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x167 DUP3 PUSH2 0x13E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x177 DUP2 PUSH2 0x15D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x190 PUSH0 DUP4 ADD DUP5 PUSH2 0x16E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1A3 DUP2 PUSH2 0x15D JUMP JUMPDEST DUP2 EQ PUSH2 0x1AD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BE DUP2 PUSH2 0x19A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D6 DUP2 PUSH2 0x1C4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F1 DUP2 PUSH2 0x1CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20D JUMPI PUSH2 0x20C PUSH2 0x196 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21A DUP6 DUP3 DUP7 ADD PUSH2 0x1B0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x22B DUP6 DUP3 DUP7 ADD PUSH2 0x1E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x23E DUP2 PUSH2 0x15D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x257 PUSH0 DUP4 ADD DUP5 PUSH2 0x235 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x271 DUP2 PUSH2 0x25D JUMP JUMPDEST DUP2 EQ PUSH2 0x27B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x28C DUP2 PUSH2 0x268 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A7 JUMPI PUSH2 0x2A6 PUSH2 0x196 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B4 DUP5 DUP3 DUP6 ADD PUSH2 0x27E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0xAA8255B8FF131B15D44715E2656B4F19E49569FD71 SDIV 0xD PUSH29 0x565CC6F06CC1E164736F6C634300081A00330000000000000000000000 ",
							"sourceMap": "216:456:3:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@getAddress_349": {
									"entryPoint": 114,
									"id": 349,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"@send_330": {
									"entryPoint": 171,
									"id": 330,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 432,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_bool_fromMemory": {
									"entryPoint": 638,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 483,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_addresst_uint256": {
									"entryPoint": 503,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 2
								},
								"abi_decode_tuple_t_bool_fromMemory": {
									"entryPoint": 658,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_address_to_t_address_fromStack": {
									"entryPoint": 366,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_t_address_to_t_address_fromStack_library": {
									"entryPoint": 565,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_library_reversed": {
									"entryPoint": 580,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_address__to_t_address__fromStack_reversed": {
									"entryPoint": 381,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 349,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 605,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 318,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 452,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 406,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 410,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_bool": {
									"entryPoint": 616,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 461,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:3114:4",
										"nodeType": "YulBlock",
										"src": "0:3114:4",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:81:4",
													"nodeType": "YulBlock",
													"src": "52:81:4",
													"statements": [
														{
															"nativeSrc": "62:65:4",
															"nodeType": "YulAssignment",
															"src": "62:65:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "77:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "77:5:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "84:42:4",
																		"nodeType": "YulLiteral",
																		"src": "84:42:4",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "73:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "73:3:4"
																},
																"nativeSrc": "73:54:4",
																"nodeType": "YulFunctionCall",
																"src": "73:54:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "7:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:4",
														"nodeType": "YulTypedName",
														"src": "34:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:4",
														"nodeType": "YulTypedName",
														"src": "44:7:4",
														"type": ""
													}
												],
												"src": "7:126:4"
											},
											{
												"body": {
													"nativeSrc": "184:51:4",
													"nodeType": "YulBlock",
													"src": "184:51:4",
													"statements": [
														{
															"nativeSrc": "194:35:4",
															"nodeType": "YulAssignment",
															"src": "194:35:4",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "223:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "223:5:4"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "205:17:4",
																	"nodeType": "YulIdentifier",
																	"src": "205:17:4"
																},
																"nativeSrc": "205:24:4",
																"nodeType": "YulFunctionCall",
																"src": "205:24:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "194:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "194:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "139:96:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "166:5:4",
														"nodeType": "YulTypedName",
														"src": "166:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "176:7:4",
														"nodeType": "YulTypedName",
														"src": "176:7:4",
														"type": ""
													}
												],
												"src": "139:96:4"
											},
											{
												"body": {
													"nativeSrc": "306:53:4",
													"nodeType": "YulBlock",
													"src": "306:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "323:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "323:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "346:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "346:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "328:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "328:17:4"
																		},
																		"nativeSrc": "328:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "328:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "316:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "316:6:4"
																},
																"nativeSrc": "316:37:4",
																"nodeType": "YulFunctionCall",
																"src": "316:37:4"
															},
															"nativeSrc": "316:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "316:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack",
												"nativeSrc": "241:118:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "294:5:4",
														"nodeType": "YulTypedName",
														"src": "294:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "301:3:4",
														"nodeType": "YulTypedName",
														"src": "301:3:4",
														"type": ""
													}
												],
												"src": "241:118:4"
											},
											{
												"body": {
													"nativeSrc": "463:124:4",
													"nodeType": "YulBlock",
													"src": "463:124:4",
													"statements": [
														{
															"nativeSrc": "473:26:4",
															"nodeType": "YulAssignment",
															"src": "473:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "485:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "485:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "496:2:4",
																		"nodeType": "YulLiteral",
																		"src": "496:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "481:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "481:3:4"
																},
																"nativeSrc": "481:18:4",
																"nodeType": "YulFunctionCall",
																"src": "481:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "473:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "473:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "553:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "553:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "566:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "566:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "577:1:4",
																				"nodeType": "YulLiteral",
																				"src": "577:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "562:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "562:3:4"
																		},
																		"nativeSrc": "562:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "562:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack",
																	"nativeSrc": "509:43:4",
																	"nodeType": "YulIdentifier",
																	"src": "509:43:4"
																},
																"nativeSrc": "509:71:4",
																"nodeType": "YulFunctionCall",
																"src": "509:71:4"
															},
															"nativeSrc": "509:71:4",
															"nodeType": "YulExpressionStatement",
															"src": "509:71:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
												"nativeSrc": "365:222:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "435:9:4",
														"nodeType": "YulTypedName",
														"src": "435:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "447:6:4",
														"nodeType": "YulTypedName",
														"src": "447:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "458:4:4",
														"nodeType": "YulTypedName",
														"src": "458:4:4",
														"type": ""
													}
												],
												"src": "365:222:4"
											},
											{
												"body": {
													"nativeSrc": "633:35:4",
													"nodeType": "YulBlock",
													"src": "633:35:4",
													"statements": [
														{
															"nativeSrc": "643:19:4",
															"nodeType": "YulAssignment",
															"src": "643:19:4",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "659:2:4",
																		"nodeType": "YulLiteral",
																		"src": "659:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "653:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "653:5:4"
																},
																"nativeSrc": "653:9:4",
																"nodeType": "YulFunctionCall",
																"src": "653:9:4"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "643:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "643:6:4"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "593:75:4",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "626:6:4",
														"nodeType": "YulTypedName",
														"src": "626:6:4",
														"type": ""
													}
												],
												"src": "593:75:4"
											},
											{
												"body": {
													"nativeSrc": "763:28:4",
													"nodeType": "YulBlock",
													"src": "763:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "780:1:4",
																		"nodeType": "YulLiteral",
																		"src": "780:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "783:1:4",
																		"nodeType": "YulLiteral",
																		"src": "783:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "773:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "773:6:4"
																},
																"nativeSrc": "773:12:4",
																"nodeType": "YulFunctionCall",
																"src": "773:12:4"
															},
															"nativeSrc": "773:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "773:12:4"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "674:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "674:117:4"
											},
											{
												"body": {
													"nativeSrc": "886:28:4",
													"nodeType": "YulBlock",
													"src": "886:28:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "903:1:4",
																		"nodeType": "YulLiteral",
																		"src": "903:1:4",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "906:1:4",
																		"nodeType": "YulLiteral",
																		"src": "906:1:4",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "896:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "896:6:4"
																},
																"nativeSrc": "896:12:4",
																"nodeType": "YulFunctionCall",
																"src": "896:12:4"
															},
															"nativeSrc": "896:12:4",
															"nodeType": "YulExpressionStatement",
															"src": "896:12:4"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "797:117:4",
												"nodeType": "YulFunctionDefinition",
												"src": "797:117:4"
											},
											{
												"body": {
													"nativeSrc": "963:79:4",
													"nodeType": "YulBlock",
													"src": "963:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1020:16:4",
																"nodeType": "YulBlock",
																"src": "1020:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1029:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1029:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1032:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1032:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1022:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1022:6:4"
																			},
																			"nativeSrc": "1022:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1022:12:4"
																		},
																		"nativeSrc": "1022:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1022:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "986:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "986:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1011:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "1011:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "993:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "993:17:4"
																				},
																				"nativeSrc": "993:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "993:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "983:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "983:2:4"
																		},
																		"nativeSrc": "983:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "983:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "976:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "976:6:4"
																},
																"nativeSrc": "976:43:4",
																"nodeType": "YulFunctionCall",
																"src": "976:43:4"
															},
															"nativeSrc": "973:63:4",
															"nodeType": "YulIf",
															"src": "973:63:4"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "920:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "956:5:4",
														"nodeType": "YulTypedName",
														"src": "956:5:4",
														"type": ""
													}
												],
												"src": "920:122:4"
											},
											{
												"body": {
													"nativeSrc": "1100:87:4",
													"nodeType": "YulBlock",
													"src": "1100:87:4",
													"statements": [
														{
															"nativeSrc": "1110:29:4",
															"nodeType": "YulAssignment",
															"src": "1110:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1132:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1132:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1119:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "1119:12:4"
																},
																"nativeSrc": "1119:20:4",
																"nodeType": "YulFunctionCall",
																"src": "1119:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1110:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "1110:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1175:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "1175:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1148:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "1148:26:4"
																},
																"nativeSrc": "1148:33:4",
																"nodeType": "YulFunctionCall",
																"src": "1148:33:4"
															},
															"nativeSrc": "1148:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "1148:33:4"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1048:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1078:6:4",
														"nodeType": "YulTypedName",
														"src": "1078:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1086:3:4",
														"nodeType": "YulTypedName",
														"src": "1086:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1094:5:4",
														"nodeType": "YulTypedName",
														"src": "1094:5:4",
														"type": ""
													}
												],
												"src": "1048:139:4"
											},
											{
												"body": {
													"nativeSrc": "1238:32:4",
													"nodeType": "YulBlock",
													"src": "1238:32:4",
													"statements": [
														{
															"nativeSrc": "1248:16:4",
															"nodeType": "YulAssignment",
															"src": "1248:16:4",
															"value": {
																"name": "value",
																"nativeSrc": "1259:5:4",
																"nodeType": "YulIdentifier",
																"src": "1259:5:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1248:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "1248:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "1193:77:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1220:5:4",
														"nodeType": "YulTypedName",
														"src": "1220:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1230:7:4",
														"nodeType": "YulTypedName",
														"src": "1230:7:4",
														"type": ""
													}
												],
												"src": "1193:77:4"
											},
											{
												"body": {
													"nativeSrc": "1319:79:4",
													"nodeType": "YulBlock",
													"src": "1319:79:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1376:16:4",
																"nodeType": "YulBlock",
																"src": "1376:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1385:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1385:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1388:1:4",
																					"nodeType": "YulLiteral",
																					"src": "1388:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1378:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "1378:6:4"
																			},
																			"nativeSrc": "1378:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1378:12:4"
																		},
																		"nativeSrc": "1378:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1378:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1342:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "1342:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1367:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "1367:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "1349:17:4",
																					"nodeType": "YulIdentifier",
																					"src": "1349:17:4"
																				},
																				"nativeSrc": "1349:24:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1349:24:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1339:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "1339:2:4"
																		},
																		"nativeSrc": "1339:35:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1339:35:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1332:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "1332:6:4"
																},
																"nativeSrc": "1332:43:4",
																"nodeType": "YulFunctionCall",
																"src": "1332:43:4"
															},
															"nativeSrc": "1329:63:4",
															"nodeType": "YulIf",
															"src": "1329:63:4"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "1276:122:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1312:5:4",
														"nodeType": "YulTypedName",
														"src": "1312:5:4",
														"type": ""
													}
												],
												"src": "1276:122:4"
											},
											{
												"body": {
													"nativeSrc": "1456:87:4",
													"nodeType": "YulBlock",
													"src": "1456:87:4",
													"statements": [
														{
															"nativeSrc": "1466:29:4",
															"nodeType": "YulAssignment",
															"src": "1466:29:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1488:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "1488:6:4"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1475:12:4",
																	"nodeType": "YulIdentifier",
																	"src": "1475:12:4"
																},
																"nativeSrc": "1475:20:4",
																"nodeType": "YulFunctionCall",
																"src": "1475:20:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1466:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "1466:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1531:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "1531:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "1504:26:4",
																	"nodeType": "YulIdentifier",
																	"src": "1504:26:4"
																},
																"nativeSrc": "1504:33:4",
																"nodeType": "YulFunctionCall",
																"src": "1504:33:4"
															},
															"nativeSrc": "1504:33:4",
															"nodeType": "YulExpressionStatement",
															"src": "1504:33:4"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nativeSrc": "1404:139:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1434:6:4",
														"nodeType": "YulTypedName",
														"src": "1434:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1442:3:4",
														"nodeType": "YulTypedName",
														"src": "1442:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1450:5:4",
														"nodeType": "YulTypedName",
														"src": "1450:5:4",
														"type": ""
													}
												],
												"src": "1404:139:4"
											},
											{
												"body": {
													"nativeSrc": "1632:391:4",
													"nodeType": "YulBlock",
													"src": "1632:391:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "1678:83:4",
																"nodeType": "YulBlock",
																"src": "1678:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "1680:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "1680:77:4"
																			},
																			"nativeSrc": "1680:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "1680:79:4"
																		},
																		"nativeSrc": "1680:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "1680:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1653:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1653:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "1662:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "1662:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1649:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "1649:3:4"
																		},
																		"nativeSrc": "1649:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1649:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1674:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1674:2:4",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1645:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "1645:3:4"
																},
																"nativeSrc": "1645:32:4",
																"nodeType": "YulFunctionCall",
																"src": "1645:32:4"
															},
															"nativeSrc": "1642:119:4",
															"nodeType": "YulIf",
															"src": "1642:119:4"
														},
														{
															"nativeSrc": "1771:117:4",
															"nodeType": "YulBlock",
															"src": "1771:117:4",
															"statements": [
																{
																	"nativeSrc": "1786:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1786:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1800:1:4",
																		"nodeType": "YulLiteral",
																		"src": "1800:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1790:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1790:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1815:63:4",
																	"nodeType": "YulAssignment",
																	"src": "1815:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1850:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1850:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1861:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1861:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1846:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1846:3:4"
																				},
																				"nativeSrc": "1846:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1846:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1870:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1870:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "1825:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "1825:20:4"
																		},
																		"nativeSrc": "1825:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1825:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1815:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1815:6:4"
																		}
																	]
																}
															]
														},
														{
															"nativeSrc": "1898:118:4",
															"nodeType": "YulBlock",
															"src": "1898:118:4",
															"statements": [
																{
																	"nativeSrc": "1913:16:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "1913:16:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "1927:2:4",
																		"nodeType": "YulLiteral",
																		"src": "1927:2:4",
																		"type": "",
																		"value": "32"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "1917:6:4",
																			"nodeType": "YulTypedName",
																			"src": "1917:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1943:63:4",
																	"nodeType": "YulAssignment",
																	"src": "1943:63:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1978:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "1978:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1989:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "1989:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1974:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "1974:3:4"
																				},
																				"nativeSrc": "1974:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "1974:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1998:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "1998:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nativeSrc": "1953:20:4",
																			"nodeType": "YulIdentifier",
																			"src": "1953:20:4"
																		},
																		"nativeSrc": "1953:53:4",
																		"nodeType": "YulFunctionCall",
																		"src": "1953:53:4"
																	},
																	"variableNames": [
																		{
																			"name": "value1",
																			"nativeSrc": "1943:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "1943:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_addresst_uint256",
												"nativeSrc": "1549:474:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1594:9:4",
														"nodeType": "YulTypedName",
														"src": "1594:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1605:7:4",
														"nodeType": "YulTypedName",
														"src": "1605:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1617:6:4",
														"nodeType": "YulTypedName",
														"src": "1617:6:4",
														"type": ""
													},
													{
														"name": "value1",
														"nativeSrc": "1625:6:4",
														"nodeType": "YulTypedName",
														"src": "1625:6:4",
														"type": ""
													}
												],
												"src": "1549:474:4"
											},
											{
												"body": {
													"nativeSrc": "2102:53:4",
													"nodeType": "YulBlock",
													"src": "2102:53:4",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "2119:3:4",
																		"nodeType": "YulIdentifier",
																		"src": "2119:3:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2142:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "2142:5:4"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_address",
																			"nativeSrc": "2124:17:4",
																			"nodeType": "YulIdentifier",
																			"src": "2124:17:4"
																		},
																		"nativeSrc": "2124:24:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2124:24:4"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "2112:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2112:6:4"
																},
																"nativeSrc": "2112:37:4",
																"nodeType": "YulFunctionCall",
																"src": "2112:37:4"
															},
															"nativeSrc": "2112:37:4",
															"nodeType": "YulExpressionStatement",
															"src": "2112:37:4"
														}
													]
												},
												"name": "abi_encode_t_address_to_t_address_fromStack_library",
												"nativeSrc": "2029:126:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2090:5:4",
														"nodeType": "YulTypedName",
														"src": "2090:5:4",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "2097:3:4",
														"nodeType": "YulTypedName",
														"src": "2097:3:4",
														"type": ""
													}
												],
												"src": "2029:126:4"
											},
											{
												"body": {
													"nativeSrc": "2267:132:4",
													"nodeType": "YulBlock",
													"src": "2267:132:4",
													"statements": [
														{
															"nativeSrc": "2277:26:4",
															"nodeType": "YulAssignment",
															"src": "2277:26:4",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "2289:9:4",
																		"nodeType": "YulIdentifier",
																		"src": "2289:9:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2300:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2300:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "2285:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2285:3:4"
																},
																"nativeSrc": "2285:18:4",
																"nodeType": "YulFunctionCall",
																"src": "2285:18:4"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "2277:4:4",
																	"nodeType": "YulIdentifier",
																	"src": "2277:4:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "2365:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2365:6:4"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "2378:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2378:9:4"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "2389:1:4",
																				"nodeType": "YulLiteral",
																				"src": "2389:1:4",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "2374:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2374:3:4"
																		},
																		"nativeSrc": "2374:17:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2374:17:4"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_address_to_t_address_fromStack_library",
																	"nativeSrc": "2313:51:4",
																	"nodeType": "YulIdentifier",
																	"src": "2313:51:4"
																},
																"nativeSrc": "2313:79:4",
																"nodeType": "YulFunctionCall",
																"src": "2313:79:4"
															},
															"nativeSrc": "2313:79:4",
															"nodeType": "YulExpressionStatement",
															"src": "2313:79:4"
														}
													]
												},
												"name": "abi_encode_tuple_t_address__to_t_address__fromStack_library_reversed",
												"nativeSrc": "2161:238:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2239:9:4",
														"nodeType": "YulTypedName",
														"src": "2239:9:4",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "2251:6:4",
														"nodeType": "YulTypedName",
														"src": "2251:6:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "2262:4:4",
														"nodeType": "YulTypedName",
														"src": "2262:4:4",
														"type": ""
													}
												],
												"src": "2161:238:4"
											},
											{
												"body": {
													"nativeSrc": "2447:48:4",
													"nodeType": "YulBlock",
													"src": "2447:48:4",
													"statements": [
														{
															"nativeSrc": "2457:32:4",
															"nodeType": "YulAssignment",
															"src": "2457:32:4",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2482:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "2482:5:4"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "2475:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "2475:6:4"
																		},
																		"nativeSrc": "2475:13:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2475:13:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2468:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2468:6:4"
																},
																"nativeSrc": "2468:21:4",
																"nodeType": "YulFunctionCall",
																"src": "2468:21:4"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "2457:7:4",
																	"nodeType": "YulIdentifier",
																	"src": "2457:7:4"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "2405:90:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2429:5:4",
														"nodeType": "YulTypedName",
														"src": "2429:5:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "2439:7:4",
														"nodeType": "YulTypedName",
														"src": "2439:7:4",
														"type": ""
													}
												],
												"src": "2405:90:4"
											},
											{
												"body": {
													"nativeSrc": "2541:76:4",
													"nodeType": "YulBlock",
													"src": "2541:76:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "2595:16:4",
																"nodeType": "YulBlock",
																"src": "2595:16:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "2604:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2604:1:4",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "2607:1:4",
																					"nodeType": "YulLiteral",
																					"src": "2607:1:4",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "2597:6:4",
																				"nodeType": "YulIdentifier",
																				"src": "2597:6:4"
																			},
																			"nativeSrc": "2597:12:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2597:12:4"
																		},
																		"nativeSrc": "2597:12:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2597:12:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "2564:5:4",
																				"nodeType": "YulIdentifier",
																				"src": "2564:5:4"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "2586:5:4",
																						"nodeType": "YulIdentifier",
																						"src": "2586:5:4"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bool",
																					"nativeSrc": "2571:14:4",
																					"nodeType": "YulIdentifier",
																					"src": "2571:14:4"
																				},
																				"nativeSrc": "2571:21:4",
																				"nodeType": "YulFunctionCall",
																				"src": "2571:21:4"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "2561:2:4",
																			"nodeType": "YulIdentifier",
																			"src": "2561:2:4"
																		},
																		"nativeSrc": "2561:32:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2561:32:4"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "2554:6:4",
																	"nodeType": "YulIdentifier",
																	"src": "2554:6:4"
																},
																"nativeSrc": "2554:40:4",
																"nodeType": "YulFunctionCall",
																"src": "2554:40:4"
															},
															"nativeSrc": "2551:60:4",
															"nodeType": "YulIf",
															"src": "2551:60:4"
														}
													]
												},
												"name": "validator_revert_t_bool",
												"nativeSrc": "2501:116:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "2534:5:4",
														"nodeType": "YulTypedName",
														"src": "2534:5:4",
														"type": ""
													}
												],
												"src": "2501:116:4"
											},
											{
												"body": {
													"nativeSrc": "2683:77:4",
													"nodeType": "YulBlock",
													"src": "2683:77:4",
													"statements": [
														{
															"nativeSrc": "2693:22:4",
															"nodeType": "YulAssignment",
															"src": "2693:22:4",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "2708:6:4",
																		"nodeType": "YulIdentifier",
																		"src": "2708:6:4"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "2702:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "2702:5:4"
																},
																"nativeSrc": "2702:13:4",
																"nodeType": "YulFunctionCall",
																"src": "2702:13:4"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "2693:5:4",
																	"nodeType": "YulIdentifier",
																	"src": "2693:5:4"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "2748:5:4",
																		"nodeType": "YulIdentifier",
																		"src": "2748:5:4"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bool",
																	"nativeSrc": "2724:23:4",
																	"nodeType": "YulIdentifier",
																	"src": "2724:23:4"
																},
																"nativeSrc": "2724:30:4",
																"nodeType": "YulFunctionCall",
																"src": "2724:30:4"
															},
															"nativeSrc": "2724:30:4",
															"nodeType": "YulExpressionStatement",
															"src": "2724:30:4"
														}
													]
												},
												"name": "abi_decode_t_bool_fromMemory",
												"nativeSrc": "2623:137:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "2661:6:4",
														"nodeType": "YulTypedName",
														"src": "2661:6:4",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "2669:3:4",
														"nodeType": "YulTypedName",
														"src": "2669:3:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "2677:5:4",
														"nodeType": "YulTypedName",
														"src": "2677:5:4",
														"type": ""
													}
												],
												"src": "2623:137:4"
											},
											{
												"body": {
													"nativeSrc": "2840:271:4",
													"nodeType": "YulBlock",
													"src": "2840:271:4",
													"statements": [
														{
															"body": {
																"nativeSrc": "2886:83:4",
																"nodeType": "YulBlock",
																"src": "2886:83:4",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2888:77:4",
																				"nodeType": "YulIdentifier",
																				"src": "2888:77:4"
																			},
																			"nativeSrc": "2888:79:4",
																			"nodeType": "YulFunctionCall",
																			"src": "2888:79:4"
																		},
																		"nativeSrc": "2888:79:4",
																		"nodeType": "YulExpressionStatement",
																		"src": "2888:79:4"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2861:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "2861:7:4"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2870:9:4",
																				"nodeType": "YulIdentifier",
																				"src": "2870:9:4"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "2857:3:4",
																			"nodeType": "YulIdentifier",
																			"src": "2857:3:4"
																		},
																		"nativeSrc": "2857:23:4",
																		"nodeType": "YulFunctionCall",
																		"src": "2857:23:4"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2882:2:4",
																		"nodeType": "YulLiteral",
																		"src": "2882:2:4",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "2853:3:4",
																	"nodeType": "YulIdentifier",
																	"src": "2853:3:4"
																},
																"nativeSrc": "2853:32:4",
																"nodeType": "YulFunctionCall",
																"src": "2853:32:4"
															},
															"nativeSrc": "2850:119:4",
															"nodeType": "YulIf",
															"src": "2850:119:4"
														},
														{
															"nativeSrc": "2979:125:4",
															"nodeType": "YulBlock",
															"src": "2979:125:4",
															"statements": [
																{
																	"nativeSrc": "2994:15:4",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2994:15:4",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "3008:1:4",
																		"nodeType": "YulLiteral",
																		"src": "3008:1:4",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2998:6:4",
																			"nodeType": "YulTypedName",
																			"src": "2998:6:4",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "3023:71:4",
																	"nodeType": "YulAssignment",
																	"src": "3023:71:4",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "3066:9:4",
																						"nodeType": "YulIdentifier",
																						"src": "3066:9:4"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "3077:6:4",
																						"nodeType": "YulIdentifier",
																						"src": "3077:6:4"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "3062:3:4",
																					"nodeType": "YulIdentifier",
																					"src": "3062:3:4"
																				},
																				"nativeSrc": "3062:22:4",
																				"nodeType": "YulFunctionCall",
																				"src": "3062:22:4"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "3086:7:4",
																				"nodeType": "YulIdentifier",
																				"src": "3086:7:4"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bool_fromMemory",
																			"nativeSrc": "3033:28:4",
																			"nodeType": "YulIdentifier",
																			"src": "3033:28:4"
																		},
																		"nativeSrc": "3033:61:4",
																		"nodeType": "YulFunctionCall",
																		"src": "3033:61:4"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "3023:6:4",
																			"nodeType": "YulIdentifier",
																			"src": "3023:6:4"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bool_fromMemory",
												"nativeSrc": "2766:345:4",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "2810:9:4",
														"nodeType": "YulTypedName",
														"src": "2810:9:4",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "2821:7:4",
														"nodeType": "YulTypedName",
														"src": "2821:7:4",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "2833:6:4",
														"nodeType": "YulTypedName",
														"src": "2833:6:4",
														"type": ""
													}
												],
												"src": "2766:345:4"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack_library(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_library_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack_library(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bool_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 4,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {
								"homework/03/地址工具/Address2.sol": {
									"Address2": [
										{
											"length": 20,
											"start": 196
										}
									]
								}
							},
							"object": "608060405234801561000f575f80fd5b5060043610610034575f3560e01c806338cc483114610038578063d0679d3414610056575b5f80fd5b610040610072565b60405161004d919061017d565b60405180910390f35b610070600480360381019061006b91906101f7565b6100ab565b005b5f8073690b9a9e9aa1c9db991c7721a92d351db4fac99090505f738306300ffd616049fd7e4b0354a64da835c1a81c9050809250505090565b8173ffffffffffffffffffffffffffffffffffffffff1673__$599282a5196c97bcb60ebd484ef6e45121$__631627905590916040518263ffffffff1660e01b81526004016100fa9190610244565b602060405180830381865af4158015610115573d5f803e3d5ffd5b505050506040513d601f19601f820116820180604052508101906101399190610292565b505050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f6101678261013e565b9050919050565b6101778161015d565b82525050565b5f6020820190506101905f83018461016e565b92915050565b5f80fd5b6101a38161015d565b81146101ad575f80fd5b50565b5f813590506101be8161019a565b92915050565b5f819050919050565b6101d6816101c4565b81146101e0575f80fd5b50565b5f813590506101f1816101cd565b92915050565b5f806040838503121561020d5761020c610196565b5b5f61021a858286016101b0565b925050602061022b858286016101e3565b9150509250929050565b61023e8161015d565b82525050565b5f6020820190506102575f830184610235565b92915050565b5f8115159050919050565b6102718161025d565b811461027b575f80fd5b50565b5f8151905061028c81610268565b92915050565b5f602082840312156102a7576102a6610196565b5b5f6102b48482850161027e565b9150509291505056fea264697066735822122074aa8255b8ff131b15d44715e2656b4f19e49569fd71050d7c565cc6f06cc1e164736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x38CC4831 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0xD0679D34 EQ PUSH2 0x56 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x40 PUSH2 0x72 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x17D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x70 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x6B SWAP2 SWAP1 PUSH2 0x1F7 JUMP JUMPDEST PUSH2 0xAB JUMP JUMPDEST STOP JUMPDEST PUSH0 DUP1 PUSH20 0x690B9A9E9AA1C9DB991C7721A92D351DB4FAC990 SWAP1 POP PUSH0 PUSH20 0x8306300FFD616049FD7E4B0354A64DA835C1A81C SWAP1 POP DUP1 SWAP3 POP POP POP SWAP1 JUMP JUMPDEST DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0x0 PUSH4 0x16279055 SWAP1 SWAP2 PUSH1 0x40 MLOAD DUP3 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFA SWAP2 SWAP1 PUSH2 0x244 JUMP JUMPDEST PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS DELEGATECALL ISZERO DUP1 ISZERO PUSH2 0x115 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x139 SWAP2 SWAP1 PUSH2 0x292 JUMP JUMPDEST POP POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x167 DUP3 PUSH2 0x13E JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x177 DUP2 PUSH2 0x15D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x190 PUSH0 DUP4 ADD DUP5 PUSH2 0x16E JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x1A3 DUP2 PUSH2 0x15D JUMP JUMPDEST DUP2 EQ PUSH2 0x1AD JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1BE DUP2 PUSH2 0x19A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1D6 DUP2 PUSH2 0x1C4 JUMP JUMPDEST DUP2 EQ PUSH2 0x1E0 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x1F1 DUP2 PUSH2 0x1CD JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x20D JUMPI PUSH2 0x20C PUSH2 0x196 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x21A DUP6 DUP3 DUP7 ADD PUSH2 0x1B0 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x22B DUP6 DUP3 DUP7 ADD PUSH2 0x1E3 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x23E DUP2 PUSH2 0x15D JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x257 PUSH0 DUP4 ADD DUP5 PUSH2 0x235 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x271 DUP2 PUSH2 0x25D JUMP JUMPDEST DUP2 EQ PUSH2 0x27B JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x28C DUP2 PUSH2 0x268 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2A7 JUMPI PUSH2 0x2A6 PUSH2 0x196 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x2B4 DUP5 DUP3 DUP6 ADD PUSH2 0x27E JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH21 0xAA8255B8FF131B15D44715E2656B4F19E49569FD71 SDIV 0xD PUSH29 0x565CC6F06CC1E164736F6C634300081A00330000000000000000000000 ",
							"sourceMap": "216:456:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;426:244;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;274:146;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;426:244;468:7;485:12;500:42;485:57;;556:24;591:42;556:78;;655:8;648:15;;;;426:244;:::o;274:146::-;351:9;:20;;;;;;:22;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;347:67;274:146;;:::o;7:126:4:-;44:7;84:42;77:5;73:54;62:65;;7:126;;;:::o;139:96::-;176:7;205:24;223:5;205:24;:::i;:::-;194:35;;139:96;;;:::o;241:118::-;328:24;346:5;328:24;:::i;:::-;323:3;316:37;241:118;;:::o;365:222::-;458:4;496:2;485:9;481:18;473:26;;509:71;577:1;566:9;562:17;553:6;509:71;:::i;:::-;365:222;;;;:::o;674:117::-;783:1;780;773:12;920:122;993:24;1011:5;993:24;:::i;:::-;986:5;983:35;973:63;;1032:1;1029;1022:12;973:63;920:122;:::o;1048:139::-;1094:5;1132:6;1119:20;1110:29;;1148:33;1175:5;1148:33;:::i;:::-;1048:139;;;;:::o;1193:77::-;1230:7;1259:5;1248:16;;1193:77;;;:::o;1276:122::-;1349:24;1367:5;1349:24;:::i;:::-;1342:5;1339:35;1329:63;;1388:1;1385;1378:12;1329:63;1276:122;:::o;1404:139::-;1450:5;1488:6;1475:20;1466:29;;1504:33;1531:5;1504:33;:::i;:::-;1404:139;;;;:::o;1549:474::-;1617:6;1625;1674:2;1662:9;1653:7;1649:23;1645:32;1642:119;;;1680:79;;:::i;:::-;1642:119;1800:1;1825:53;1870:7;1861:6;1850:9;1846:22;1825:53;:::i;:::-;1815:63;;1771:117;1927:2;1953:53;1998:7;1989:6;1978:9;1974:22;1953:53;:::i;:::-;1943:63;;1898:118;1549:474;;;;;:::o;2029:126::-;2124:24;2142:5;2124:24;:::i;:::-;2119:3;2112:37;2029:126;;:::o;2161:238::-;2262:4;2300:2;2289:9;2285:18;2277:26;;2313:79;2389:1;2378:9;2374:17;2365:6;2313:79;:::i;:::-;2161:238;;;;:::o;2405:90::-;2439:7;2482:5;2475:13;2468:21;2457:32;;2405:90;;;:::o;2501:116::-;2571:21;2586:5;2571:21;:::i;:::-;2564:5;2561:32;2551:60;;2607:1;2604;2597:12;2551:60;2501:116;:::o;2623:137::-;2677:5;2708:6;2702:13;2693:22;;2724:30;2748:5;2724:30;:::i;:::-;2623:137;;;;:::o;2766:345::-;2833:6;2882:2;2870:9;2861:7;2857:23;2853:32;2850:119;;;2888:79;;:::i;:::-;2850:119;3008:1;3033:61;3086:7;3077:6;3066:9;3062:22;3033:61;:::i;:::-;3023:71;;2979:125;2766:345;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "151000",
								"executionCost": "194",
								"totalCost": "151194"
							},
							"external": {
								"getAddress()": "383",
								"send(address,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 216,
									"end": 672,
									"name": "PUSH",
									"source": 3,
									"value": "80"
								},
								{
									"begin": 216,
									"end": 672,
									"name": "PUSH",
									"source": 3,
									"value": "40"
								},
								{
									"begin": 216,
									"end": 672,
									"name": "MSTORE",
									"source": 3
								},
								{
									"begin": 216,
									"end": 672,
									"name": "CALLVALUE",
									"source": 3
								},
								{
									"begin": 216,
									"end": 672,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 216,
									"end": 672,
									"name": "ISZERO",
									"source": 3
								},
								{
									"begin": 216,
									"end": 672,
									"name": "PUSH [tag]",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 672,
									"name": "JUMPI",
									"source": 3
								},
								{
									"begin": 216,
									"end": 672,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 672,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 216,
									"end": 672,
									"name": "REVERT",
									"source": 3
								},
								{
									"begin": 216,
									"end": 672,
									"name": "tag",
									"source": 3,
									"value": "1"
								},
								{
									"begin": 216,
									"end": 672,
									"name": "JUMPDEST",
									"source": 3
								},
								{
									"begin": 216,
									"end": 672,
									"name": "POP",
									"source": 3
								},
								{
									"begin": 216,
									"end": 672,
									"name": "PUSH #[$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 672,
									"name": "DUP1",
									"source": 3
								},
								{
									"begin": 216,
									"end": 672,
									"name": "PUSH [$]",
									"source": 3,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 216,
									"end": 672,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 672,
									"name": "CODECOPY",
									"source": 3
								},
								{
									"begin": 216,
									"end": 672,
									"name": "PUSH",
									"source": 3,
									"value": "0"
								},
								{
									"begin": 216,
									"end": 672,
									"name": "RETURN",
									"source": 3
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122074aa8255b8ff131b15d44715e2656b4f19e49569fd71050d7c565cc6f06cc1e164736f6c634300081a0033",
									".code": [
										{
											"begin": 216,
											"end": 672,
											"name": "PUSH",
											"source": 3,
											"value": "80"
										},
										{
											"begin": 216,
											"end": 672,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 216,
											"end": 672,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 216,
											"end": 672,
											"name": "CALLVALUE",
											"source": 3
										},
										{
											"begin": 216,
											"end": 672,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 216,
											"end": 672,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 216,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 216,
											"end": 672,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 216,
											"end": 672,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 672,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 216,
											"end": 672,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 216,
											"end": 672,
											"name": "tag",
											"source": 3,
											"value": "1"
										},
										{
											"begin": 216,
											"end": 672,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 216,
											"end": 672,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 216,
											"end": 672,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 216,
											"end": 672,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 216,
											"end": 672,
											"name": "LT",
											"source": 3
										},
										{
											"begin": 216,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 216,
											"end": 672,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 216,
											"end": 672,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 672,
											"name": "CALLDATALOAD",
											"source": 3
										},
										{
											"begin": 216,
											"end": 672,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 216,
											"end": 672,
											"name": "SHR",
											"source": 3
										},
										{
											"begin": 216,
											"end": 672,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 216,
											"end": 672,
											"name": "PUSH",
											"source": 3,
											"value": "38CC4831"
										},
										{
											"begin": 216,
											"end": 672,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 216,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 216,
											"end": 672,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 216,
											"end": 672,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 216,
											"end": 672,
											"name": "PUSH",
											"source": 3,
											"value": "D0679D34"
										},
										{
											"begin": 216,
											"end": 672,
											"name": "EQ",
											"source": 3
										},
										{
											"begin": 216,
											"end": 672,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 216,
											"end": 672,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 216,
											"end": 672,
											"name": "tag",
											"source": 3,
											"value": "2"
										},
										{
											"begin": 216,
											"end": 672,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 216,
											"end": 672,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 216,
											"end": 672,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 216,
											"end": 672,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 426,
											"end": 670,
											"name": "tag",
											"source": 3,
											"value": "3"
										},
										{
											"begin": 426,
											"end": 670,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 426,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 426,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 426,
											"end": 670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 426,
											"end": 670,
											"name": "tag",
											"source": 3,
											"value": "5"
										},
										{
											"begin": 426,
											"end": 670,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 426,
											"end": 670,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 426,
											"end": 670,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 426,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 426,
											"end": 670,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 426,
											"end": 670,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 426,
											"end": 670,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "8"
										},
										{
											"begin": 426,
											"end": 670,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 426,
											"end": 670,
											"name": "tag",
											"source": 3,
											"value": "7"
										},
										{
											"begin": 426,
											"end": 670,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 426,
											"end": 670,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 426,
											"end": 670,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 426,
											"end": 670,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 426,
											"end": 670,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 426,
											"end": 670,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 426,
											"end": 670,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 426,
											"end": 670,
											"name": "RETURN",
											"source": 3
										},
										{
											"begin": 274,
											"end": 420,
											"name": "tag",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 274,
											"end": 420,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 274,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 274,
											"end": 420,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 274,
											"end": 420,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 274,
											"end": 420,
											"name": "CALLDATASIZE",
											"source": 3
										},
										{
											"begin": 274,
											"end": 420,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 274,
											"end": 420,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 274,
											"end": 420,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 274,
											"end": 420,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 274,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 274,
											"end": 420,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 274,
											"end": 420,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 274,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "11"
										},
										{
											"begin": 274,
											"end": 420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 274,
											"end": 420,
											"name": "tag",
											"source": 3,
											"value": "10"
										},
										{
											"begin": 274,
											"end": 420,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 274,
											"end": 420,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 274,
											"end": 420,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 274,
											"end": 420,
											"name": "tag",
											"source": 3,
											"value": "9"
										},
										{
											"begin": 274,
											"end": 420,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 274,
											"end": 420,
											"name": "STOP",
											"source": 3
										},
										{
											"begin": 426,
											"end": 670,
											"name": "tag",
											"source": 3,
											"value": "6"
										},
										{
											"begin": 426,
											"end": 670,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 468,
											"end": 475,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 485,
											"end": 497,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 500,
											"end": 542,
											"name": "PUSH",
											"source": 3,
											"value": "690B9A9E9AA1C9DB991C7721A92D351DB4FAC990"
										},
										{
											"begin": 485,
											"end": 542,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 485,
											"end": 542,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 556,
											"end": 580,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 591,
											"end": 633,
											"name": "PUSH",
											"source": 3,
											"value": "8306300FFD616049FD7E4B0354A64DA835C1A81C"
										},
										{
											"begin": 556,
											"end": 634,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 556,
											"end": 634,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 655,
											"end": 663,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 648,
											"end": 663,
											"name": "SWAP3",
											"source": 3
										},
										{
											"begin": 648,
											"end": 663,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 648,
											"end": 663,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 648,
											"end": 663,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 426,
											"end": 670,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 426,
											"end": 670,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 274,
											"end": 420,
											"name": "tag",
											"source": 3,
											"value": "12"
										},
										{
											"begin": 274,
											"end": 420,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 351,
											"end": 360,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 351,
											"end": 371,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 351,
											"end": 371,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 351,
											"end": 371,
											"name": "PUSHLIB",
											"source": 3,
											"value": "homework/03/地址工具/Address2.sol:Address2"
										},
										{
											"begin": 351,
											"end": 371,
											"name": "PUSH",
											"source": 3,
											"value": "16279055"
										},
										{
											"begin": 351,
											"end": 371,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 351,
											"end": 371,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 351,
											"end": 373,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 351,
											"end": 373,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 351,
											"end": 373,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 351,
											"end": 373,
											"name": "PUSH",
											"source": 3,
											"value": "FFFFFFFF"
										},
										{
											"begin": 351,
											"end": 373,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 351,
											"end": 373,
											"name": "PUSH",
											"source": 3,
											"value": "E0"
										},
										{
											"begin": 351,
											"end": 373,
											"name": "SHL",
											"source": 3
										},
										{
											"begin": 351,
											"end": 373,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 351,
											"end": 373,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 351,
											"end": 373,
											"name": "PUSH",
											"source": 3,
											"value": "4"
										},
										{
											"begin": 351,
											"end": 373,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 351,
											"end": 373,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 351,
											"end": 373,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 351,
											"end": 373,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 351,
											"end": 373,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "16"
										},
										{
											"begin": 351,
											"end": 373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 351,
											"end": 373,
											"name": "tag",
											"source": 3,
											"value": "15"
										},
										{
											"begin": 351,
											"end": 373,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 351,
											"end": 373,
											"name": "PUSH",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 351,
											"end": 373,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 351,
											"end": 373,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 351,
											"end": 373,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 351,
											"end": 373,
											"name": "DUP4",
											"source": 3
										},
										{
											"begin": 351,
											"end": 373,
											"name": "SUB",
											"source": 3
										},
										{
											"begin": 351,
											"end": 373,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 351,
											"end": 373,
											"name": "DUP7",
											"source": 3
										},
										{
											"begin": 351,
											"end": 373,
											"name": "GAS",
											"source": 3
										},
										{
											"begin": 351,
											"end": 373,
											"name": "DELEGATECALL",
											"source": 3
										},
										{
											"begin": 351,
											"end": 373,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 351,
											"end": 373,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 351,
											"end": 373,
											"name": "ISZERO",
											"source": 3
										},
										{
											"begin": 351,
											"end": 373,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 351,
											"end": 373,
											"name": "JUMPI",
											"source": 3
										},
										{
											"begin": 351,
											"end": 373,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 351,
											"end": 373,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 351,
											"end": 373,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 351,
											"end": 373,
											"name": "RETURNDATACOPY",
											"source": 3
										},
										{
											"begin": 351,
											"end": 373,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 351,
											"end": 373,
											"name": "PUSH",
											"source": 3,
											"value": "0"
										},
										{
											"begin": 351,
											"end": 373,
											"name": "REVERT",
											"source": 3
										},
										{
											"begin": 351,
											"end": 373,
											"name": "tag",
											"source": 3,
											"value": "18"
										},
										{
											"begin": 351,
											"end": 373,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 351,
											"end": 373,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 351,
											"end": 373,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 351,
											"end": 373,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 351,
											"end": 373,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 351,
											"end": 373,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 351,
											"end": 373,
											"name": "MLOAD",
											"source": 3
										},
										{
											"begin": 351,
											"end": 373,
											"name": "RETURNDATASIZE",
											"source": 3
										},
										{
											"begin": 351,
											"end": 373,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 351,
											"end": 373,
											"name": "NOT",
											"source": 3
										},
										{
											"begin": 351,
											"end": 373,
											"name": "PUSH",
											"source": 3,
											"value": "1F"
										},
										{
											"begin": 351,
											"end": 373,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 351,
											"end": 373,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 351,
											"end": 373,
											"name": "AND",
											"source": 3
										},
										{
											"begin": 351,
											"end": 373,
											"name": "DUP3",
											"source": 3
										},
										{
											"begin": 351,
											"end": 373,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 351,
											"end": 373,
											"name": "DUP1",
											"source": 3
										},
										{
											"begin": 351,
											"end": 373,
											"name": "PUSH",
											"source": 3,
											"value": "40"
										},
										{
											"begin": 351,
											"end": 373,
											"name": "MSTORE",
											"source": 3
										},
										{
											"begin": 351,
											"end": 373,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 351,
											"end": 373,
											"name": "DUP2",
											"source": 3
										},
										{
											"begin": 351,
											"end": 373,
											"name": "ADD",
											"source": 3
										},
										{
											"begin": 351,
											"end": 373,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 351,
											"end": 373,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 351,
											"end": 373,
											"name": "SWAP2",
											"source": 3
										},
										{
											"begin": 351,
											"end": 373,
											"name": "SWAP1",
											"source": 3
										},
										{
											"begin": 351,
											"end": 373,
											"name": "PUSH [tag]",
											"source": 3,
											"value": "20"
										},
										{
											"begin": 351,
											"end": 373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 351,
											"end": 373,
											"name": "tag",
											"source": 3,
											"value": "19"
										},
										{
											"begin": 351,
											"end": 373,
											"name": "JUMPDEST",
											"source": 3
										},
										{
											"begin": 347,
											"end": 414,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 274,
											"end": 420,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 274,
											"end": 420,
											"name": "POP",
											"source": 3
										},
										{
											"begin": 274,
											"end": 420,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 3
										},
										{
											"begin": 7,
											"end": 133,
											"name": "tag",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 7,
											"end": 133,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 84,
											"end": 126,
											"name": "PUSH",
											"source": 4,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 77,
											"end": 82,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 73,
											"end": 127,
											"name": "AND",
											"source": 4
										},
										{
											"begin": 62,
											"end": 127,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 62,
											"end": 127,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 7,
											"end": 133,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 7,
											"end": 133,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 7,
											"end": 133,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 139,
											"end": 235,
											"name": "tag",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 139,
											"end": 235,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 176,
											"end": 183,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 223,
											"end": 228,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 205,
											"end": 229,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "22"
										},
										{
											"begin": 205,
											"end": 229,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 205,
											"end": 229,
											"name": "tag",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 205,
											"end": 229,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 194,
											"end": 229,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 194,
											"end": 229,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 139,
											"end": 235,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 139,
											"end": 235,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 139,
											"end": 235,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 241,
											"end": 359,
											"name": "tag",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 241,
											"end": 359,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 346,
											"end": 351,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 328,
											"end": 352,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 328,
											"end": 352,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 328,
											"end": 352,
											"name": "tag",
											"source": 4,
											"value": "42"
										},
										{
											"begin": 328,
											"end": 352,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 323,
											"end": 326,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 316,
											"end": 353,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 241,
											"end": 359,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 241,
											"end": 359,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 365,
											"end": 587,
											"name": "tag",
											"source": 4,
											"value": "8"
										},
										{
											"begin": 365,
											"end": 587,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 458,
											"end": 462,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 496,
											"end": 498,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 485,
											"end": 494,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 481,
											"end": 499,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 473,
											"end": 499,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 473,
											"end": 499,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 577,
											"end": 578,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 566,
											"end": 575,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 562,
											"end": 579,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 553,
											"end": 559,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 509,
											"end": 580,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "24"
										},
										{
											"begin": 509,
											"end": 580,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 509,
											"end": 580,
											"name": "tag",
											"source": 4,
											"value": "44"
										},
										{
											"begin": 509,
											"end": 580,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 365,
											"end": 587,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 365,
											"end": 587,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 365,
											"end": 587,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 674,
											"end": 791,
											"name": "tag",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 674,
											"end": 791,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 783,
											"end": 784,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 780,
											"end": 781,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 773,
											"end": 785,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "tag",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 1011,
											"end": 1016,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 993,
											"end": 1017,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "tag",
											"source": 4,
											"value": "49"
										},
										{
											"begin": 993,
											"end": 1017,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 986,
											"end": 991,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 983,
											"end": 1018,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1032,
											"end": 1033,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1029,
											"end": 1030,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1022,
											"end": 1034,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "tag",
											"source": 4,
											"value": "50"
										},
										{
											"begin": 973,
											"end": 1036,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 920,
											"end": 1042,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 920,
											"end": 1042,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "tag",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1094,
											"end": 1099,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1132,
											"end": 1138,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1119,
											"end": 1139,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1110,
											"end": 1139,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1175,
											"end": 1180,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "28"
										},
										{
											"begin": 1148,
											"end": 1181,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "tag",
											"source": 4,
											"value": "52"
										},
										{
											"begin": 1148,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1048,
											"end": 1187,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1048,
											"end": 1187,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1193,
											"end": 1270,
											"name": "tag",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1193,
											"end": 1270,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1230,
											"end": 1237,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1259,
											"end": 1264,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1264,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1248,
											"end": 1264,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1193,
											"end": 1270,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1193,
											"end": 1270,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1193,
											"end": 1270,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1193,
											"end": 1270,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1276,
											"end": 1398,
											"name": "tag",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1276,
											"end": 1398,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1367,
											"end": 1372,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "30"
										},
										{
											"begin": 1349,
											"end": 1373,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "tag",
											"source": 4,
											"value": "55"
										},
										{
											"begin": 1349,
											"end": 1373,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1342,
											"end": 1347,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1339,
											"end": 1374,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1388,
											"end": 1389,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1385,
											"end": 1386,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1378,
											"end": 1390,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "tag",
											"source": 4,
											"value": "56"
										},
										{
											"begin": 1329,
											"end": 1392,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1276,
											"end": 1398,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1276,
											"end": 1398,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "tag",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1450,
											"end": 1455,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1488,
											"end": 1494,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1475,
											"end": 1495,
											"name": "CALLDATALOAD",
											"source": 4
										},
										{
											"begin": 1466,
											"end": 1495,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1466,
											"end": 1495,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 1531,
											"end": 1536,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "31"
										},
										{
											"begin": 1504,
											"end": 1537,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "tag",
											"source": 4,
											"value": "58"
										},
										{
											"begin": 1504,
											"end": 1537,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1404,
											"end": 1543,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1404,
											"end": 1543,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "tag",
											"source": 4,
											"value": "11"
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1617,
											"end": 1623,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1625,
											"end": 1631,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 1674,
											"end": 1676,
											"name": "PUSH",
											"source": 4,
											"value": "40"
										},
										{
											"begin": 1662,
											"end": 1671,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 1653,
											"end": 1660,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1649,
											"end": 1672,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 1645,
											"end": 1677,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 1642,
											"end": 1761,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 1642,
											"end": 1761,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1642,
											"end": 1761,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1680,
											"end": 1759,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 1680,
											"end": 1759,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1680,
											"end": 1759,
											"name": "tag",
											"source": 4,
											"value": "61"
										},
										{
											"begin": 1680,
											"end": 1759,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1642,
											"end": 1761,
											"name": "tag",
											"source": 4,
											"value": "60"
										},
										{
											"begin": 1642,
											"end": 1761,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1800,
											"end": 1801,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 1825,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1870,
											"end": 1877,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1861,
											"end": 1867,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1850,
											"end": 1859,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1846,
											"end": 1868,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1825,
											"end": 1878,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "29"
										},
										{
											"begin": 1825,
											"end": 1878,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1825,
											"end": 1878,
											"name": "tag",
											"source": 4,
											"value": "62"
										},
										{
											"begin": 1825,
											"end": 1878,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1815,
											"end": 1878,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1815,
											"end": 1878,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1771,
											"end": 1888,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1927,
											"end": 1929,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1998,
											"end": 2005,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 1989,
											"end": 1995,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 1978,
											"end": 1987,
											"name": "DUP7",
											"source": 4
										},
										{
											"begin": 1974,
											"end": 1996,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "32"
										},
										{
											"begin": 1953,
											"end": 2006,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "tag",
											"source": 4,
											"value": "63"
										},
										{
											"begin": 1953,
											"end": 2006,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 1943,
											"end": 2006,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 1943,
											"end": 2006,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1898,
											"end": 2016,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 1549,
											"end": 2023,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 1549,
											"end": 2023,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2029,
											"end": 2155,
											"name": "tag",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2029,
											"end": 2155,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2124,
											"end": 2148,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2142,
											"end": 2147,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2124,
											"end": 2148,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "23"
										},
										{
											"begin": 2124,
											"end": 2148,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2124,
											"end": 2148,
											"name": "tag",
											"source": 4,
											"value": "65"
										},
										{
											"begin": 2124,
											"end": 2148,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2119,
											"end": 2122,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2112,
											"end": 2149,
											"name": "MSTORE",
											"source": 4
										},
										{
											"begin": 2029,
											"end": 2155,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2029,
											"end": 2155,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2029,
											"end": 2155,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2161,
											"end": 2399,
											"name": "tag",
											"source": 4,
											"value": "16"
										},
										{
											"begin": 2161,
											"end": 2399,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2262,
											"end": 2266,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2300,
											"end": 2302,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2289,
											"end": 2298,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2285,
											"end": 2303,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2277,
											"end": 2303,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2277,
											"end": 2303,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2313,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2389,
											"end": 2390,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2378,
											"end": 2387,
											"name": "DUP4",
											"source": 4
										},
										{
											"begin": 2374,
											"end": 2391,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 2365,
											"end": 2371,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2313,
											"end": 2392,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "33"
										},
										{
											"begin": 2313,
											"end": 2392,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2313,
											"end": 2392,
											"name": "tag",
											"source": 4,
											"value": "67"
										},
										{
											"begin": 2313,
											"end": 2392,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2161,
											"end": 2399,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2161,
											"end": 2399,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2161,
											"end": 2399,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2161,
											"end": 2399,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2161,
											"end": 2399,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2495,
											"name": "tag",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2405,
											"end": 2495,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2439,
											"end": 2446,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2482,
											"end": 2487,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2475,
											"end": 2488,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2468,
											"end": 2489,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2457,
											"end": 2489,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2457,
											"end": 2489,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2495,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2495,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2495,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2405,
											"end": 2495,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2501,
											"end": 2617,
											"name": "tag",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2501,
											"end": 2617,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2571,
											"end": 2592,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 2586,
											"end": 2591,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2571,
											"end": 2592,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "34"
										},
										{
											"begin": 2571,
											"end": 2592,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2571,
											"end": 2592,
											"name": "tag",
											"source": 4,
											"value": "70"
										},
										{
											"begin": 2571,
											"end": 2592,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2564,
											"end": 2569,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2561,
											"end": 2593,
											"name": "EQ",
											"source": 4
										},
										{
											"begin": 2551,
											"end": 2611,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2551,
											"end": 2611,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2607,
											"end": 2608,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2604,
											"end": 2605,
											"name": "DUP1",
											"source": 4
										},
										{
											"begin": 2597,
											"end": 2609,
											"name": "REVERT",
											"source": 4
										},
										{
											"begin": 2551,
											"end": 2611,
											"name": "tag",
											"source": 4,
											"value": "71"
										},
										{
											"begin": 2551,
											"end": 2611,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2501,
											"end": 2617,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2501,
											"end": 2617,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2760,
											"name": "tag",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 2623,
											"end": 2760,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2677,
											"end": 2682,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2708,
											"end": 2714,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2702,
											"end": 2715,
											"name": "MLOAD",
											"source": 4
										},
										{
											"begin": 2693,
											"end": 2715,
											"name": "SWAP1",
											"source": 4
										},
										{
											"begin": 2693,
											"end": 2715,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2724,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 2748,
											"end": 2753,
											"name": "DUP2",
											"source": 4
										},
										{
											"begin": 2724,
											"end": 2754,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "35"
										},
										{
											"begin": 2724,
											"end": 2754,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2724,
											"end": 2754,
											"name": "tag",
											"source": 4,
											"value": "73"
										},
										{
											"begin": 2724,
											"end": 2754,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2760,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2760,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2760,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2760,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2623,
											"end": 2760,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 3111,
											"name": "tag",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2766,
											"end": 3111,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2833,
											"end": 2839,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 2882,
											"end": 2884,
											"name": "PUSH",
											"source": 4,
											"value": "20"
										},
										{
											"begin": 2870,
											"end": 2879,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 2861,
											"end": 2868,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 2857,
											"end": 2880,
											"name": "SUB",
											"source": 4
										},
										{
											"begin": 2853,
											"end": 2885,
											"name": "SLT",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2969,
											"name": "ISZERO",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2969,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 2850,
											"end": 2969,
											"name": "JUMPI",
											"source": 4
										},
										{
											"begin": 2888,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2888,
											"end": 2967,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "26"
										},
										{
											"begin": 2888,
											"end": 2967,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 2888,
											"end": 2967,
											"name": "tag",
											"source": 4,
											"value": "76"
										},
										{
											"begin": 2888,
											"end": 2967,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 2850,
											"end": 2969,
											"name": "tag",
											"source": 4,
											"value": "75"
										},
										{
											"begin": 2850,
											"end": 2969,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3008,
											"end": 3009,
											"name": "PUSH",
											"source": 4,
											"value": "0"
										},
										{
											"begin": 3033,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 3086,
											"end": 3093,
											"name": "DUP5",
											"source": 4
										},
										{
											"begin": 3077,
											"end": 3083,
											"name": "DUP3",
											"source": 4
										},
										{
											"begin": 3066,
											"end": 3075,
											"name": "DUP6",
											"source": 4
										},
										{
											"begin": 3062,
											"end": 3084,
											"name": "ADD",
											"source": 4
										},
										{
											"begin": 3033,
											"end": 3094,
											"name": "PUSH [tag]",
											"source": 4,
											"value": "36"
										},
										{
											"begin": 3033,
											"end": 3094,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 4
										},
										{
											"begin": 3033,
											"end": 3094,
											"name": "tag",
											"source": 4,
											"value": "77"
										},
										{
											"begin": 3033,
											"end": 3094,
											"name": "JUMPDEST",
											"source": 4
										},
										{
											"begin": 3023,
											"end": 3094,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 3023,
											"end": 3094,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2979,
											"end": 3104,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 3111,
											"name": "SWAP3",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 3111,
											"name": "SWAP2",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 3111,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 3111,
											"name": "POP",
											"source": 4
										},
										{
											"begin": 2766,
											"end": 3111,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 4
										}
									]
								}
							},
							"sourceList": [
								"@openzeppelin/contracts/utils/Address.sol",
								"@openzeppelin/contracts/utils/Errors.sol",
								"homework/03/地址工具/Address2.sol",
								"homework/03/地址工具/MyToken.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"getAddress()": "38cc4831",
							"send(address,uint256)": "d0679d34"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"getAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"send\",\"outputs\":[],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"homework/03/\\u5730\\u5740\\u5de5\\u5177/MyToken.sol\":\"MyToken\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Address.sol\":{\"keccak256\":\"0x9d8da059267bac779a2dbbb9a26c2acf00ca83085e105d62d5d4ef96054a47f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c78e2aa4313323cecd1ef12a8d6265b96beee1a199923abf55d9a2a9e291ad23\",\"dweb:/ipfs/QmUTs2KStXucZezzFo3EYeqYu47utu56qrF7jj1Gue65vb\"]},\"@openzeppelin/contracts/utils/Errors.sol\":{\"keccak256\":\"0x6afa713bfd42cf0f7656efa91201007ac465e42049d7de1d50753a373648c123\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ba1d02f4847670a1b83dec9f7d37f0b0418d6043447b69f3a29a5f9efc547fcf\",\"dweb:/ipfs/QmQ7iH2keLNUKgq2xSWcRmuBE5eZ3F5whYAkAGzCNNoEWB\"]},\"homework/03/\\u5730\\u5740\\u5de5\\u5177/Address2.sol\":{\"keccak256\":\"0x40313125d0d8323f317ceca9c510ef8f59a7f36aaefacadeed97cc5a1a7395a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a02b35f698388a9c1beba7e42d5542ff5744302e122f4068d4c97af9edd2ccc\",\"dweb:/ipfs/QmUztFjFpFw4298v3W4Fcq9wzH7mwy8qDumrBWUYyropEu\"]},\"homework/03/\\u5730\\u5740\\u5de5\\u5177/MyToken.sol\":{\"keccak256\":\"0xa4e5999b2d2a735f4dc2732463056122932b32689dc914eb5050098d4dc822ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1b067d7d4105b560b55a3a653116841d227062d483851d241179f14ec2d19440\",\"dweb:/ipfs/QmYJqkNdGUfE3bcQupwQrScJF1FMFu1CVgVsDWgXPTjVKH\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5667",
				"formattedMessage": "Warning: Unused function parameter. Remove or comment out the variable name to silence this warning.\n  --> homework/03/地址工具/MyToken.sol:10:38:\n   |\n10 |     function send(address recipient, uint256 amount) external view {\n   |                                      ^^^^^^^^^^^^^^\n\n",
				"message": "Unused function parameter. Remove or comment out the variable name to silence this warning.",
				"severity": "warning",
				"sourceLocation": {
					"end": 321,
					"file": "homework/03/地址工具/MyToken.sol",
					"start": 307
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2072",
				"formattedMessage": "Warning: Unused local variable.\n  --> homework/03/地址工具/MyToken.sol:17:8:\n   |\n17 |        address addr = 0x690B9A9E9aa1C9dB991C7721a92d351Db4FaC990;\n   |        ^^^^^^^^^^^^\n\n",
				"message": "Unused local variable.",
				"severity": "warning",
				"sourceLocation": {
					"end": 497,
					"file": "homework/03/地址工具/MyToken.sol",
					"start": 485
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2018",
				"formattedMessage": "Warning: Function state mutability can be restricted to pure\n  --> homework/03/地址工具/MyToken.sol:16:5:\n   |\n16 |     function getAddress() public view returns(address){\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "Function state mutability can be restricted to pure",
				"severity": "warning",
				"sourceLocation": {
					"end": 670,
					"file": "homework/03/地址工具/MyToken.sol",
					"start": 426
				},
				"type": "Warning"
			}
		],
		"sources": {
			"@openzeppelin/contracts/utils/Address.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
					"exportedSymbols": {
						"Address": [
							258
						],
						"Errors": [
							280
						]
					},
					"id": 259,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "101:24:0"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
							"file": "./Errors.sol",
							"id": 3,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 259,
							"sourceUnit": 281,
							"src": "127:36:0",
							"symbolAliases": [
								{
									"foreign": {
										"id": 2,
										"name": "Errors",
										"nodeType": "Identifier",
										"overloadedDeclarations": [],
										"referencedDeclaration": 280,
										"src": "135:6:0",
										"typeDescriptions": {}
									},
									"nameLocation": "-1:-1:-1"
								}
							],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 4,
								"nodeType": "StructuredDocumentation",
								"src": "165:67:0",
								"text": " @dev Collection of functions related to the address type"
							},
							"fullyImplemented": true,
							"id": 258,
							"linearizedBaseContracts": [
								258
							],
							"name": "Address",
							"nameLocation": "241:7:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 5,
										"nodeType": "StructuredDocumentation",
										"src": "255:75:0",
										"text": " @dev There's no code at `target` (it is not a contract)."
									},
									"errorSelector": "9996b315",
									"id": 9,
									"name": "AddressEmptyCode",
									"nameLocation": "341:16:0",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "366:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 9,
												"src": "358:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 6,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "358:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "357:16:0"
									},
									"src": "335:39:0"
								},
								{
									"body": {
										"id": 55,
										"nodeType": "Block",
										"src": "1361:278:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 23,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 19,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "1383:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$258",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$258",
																		"typeString": "library Address"
																	}
																],
																"id": 18,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "1375:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 17,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "1375:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "1375:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 21,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1389:7:0",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "1375:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 22,
														"name": "amount",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 14,
														"src": "1399:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1375:30:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 36,
												"nodeType": "IfStatement",
												"src": "1371:125:0",
												"trueBody": {
													"id": 35,
													"nodeType": "Block",
													"src": "1407:89:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 29,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "1463:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$258",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$258",
																						"typeString": "library Address"
																					}
																				],
																				"id": 28,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "1455:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 27,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "1455:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 30,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "1455:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 31,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "1469:7:0",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "1455:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 32,
																		"name": "amount",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 14,
																		"src": "1478:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 24,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 280,
																		"src": "1428:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$280_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 26,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1435:19:0",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 268,
																	"src": "1428:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 33,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1428:57:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 34,
															"nodeType": "RevertStatement",
															"src": "1421:64:0"
														}
													]
												}
											},
											{
												"assignments": [
													38,
													null
												],
												"declarations": [
													{
														"constant": false,
														"id": 38,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "1512:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 55,
														"src": "1507:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 37,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "1507:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													null
												],
												"id": 45,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "",
															"id": 43,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "1555:2:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															},
															"value": ""
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																"typeString": "literal_string \"\""
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
																	"typeString": "literal_string \"\""
																}
															],
															"expression": {
																"id": 39,
																"name": "recipient",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 12,
																"src": "1525:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address_payable",
																	"typeString": "address payable"
																}
															},
															"id": 40,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1535:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "1525:14:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 42,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 41,
																"name": "amount",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 14,
																"src": "1547:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "1525:29:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 44,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1525:33:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1506:52:0"
											},
											{
												"condition": {
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "1572:8:0",
													"subExpression": {
														"id": 46,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 38,
														"src": "1573:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 54,
												"nodeType": "IfStatement",
												"src": "1568:65:0",
												"trueBody": {
													"id": 53,
													"nodeType": "Block",
													"src": "1582:51:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 48,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 280,
																		"src": "1603:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$280_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 50,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "1610:10:0",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 271,
																	"src": "1603:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 51,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "1603:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 52,
															"nodeType": "RevertStatement",
															"src": "1596:26:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 10,
										"nodeType": "StructuredDocumentation",
										"src": "380:905:0",
										"text": " @dev Replacement for Solidity's `transfer`: sends `amount` wei to\n `recipient`, forwarding all available gas and reverting on errors.\n https://eips.ethereum.org/EIPS/eip-1884[EIP1884] increases the gas cost\n of certain opcodes, possibly making contracts go over the 2300 gas limit\n imposed by `transfer`, making them unable to receive funds via\n `transfer`. {sendValue} removes this limitation.\n https://consensys.net/diligence/blog/2019/09/stop-using-soliditys-transfer-now/[Learn more].\n IMPORTANT: because control is transferred to `recipient`, care must be\n taken to not create reentrancy vulnerabilities. Consider using\n {ReentrancyGuard} or the\n https://solidity.readthedocs.io/en/v0.8.20/security-considerations.html#use-the-checks-effects-interactions-pattern[checks-effects-interactions pattern]."
									},
									"id": 56,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sendValue",
									"nameLocation": "1299:9:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 15,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 12,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "1325:9:0",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "1309:25:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address_payable",
													"typeString": "address payable"
												},
												"typeName": {
													"id": 11,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "1309:15:0",
													"stateMutability": "payable",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 14,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "1344:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "1336:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 13,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1336:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1308:43:0"
									},
									"returnParameters": {
										"id": 16,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1361:0:0"
									},
									"scope": 258,
									"src": "1290:349:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 72,
										"nodeType": "Block",
										"src": "2573:62:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 67,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 59,
															"src": "2612:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 68,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 61,
															"src": "2620:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														{
															"hexValue": "30",
															"id": 69,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "2626:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															},
															"value": "0"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															},
															{
																"typeIdentifier": "t_rational_0_by_1",
																"typeString": "int_const 0"
															}
														],
														"id": 66,
														"name": "functionCallWithValue",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 123,
														"src": "2590:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bytes memory,uint256) returns (bytes memory)"
														}
													},
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "2590:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 65,
												"id": 71,
												"nodeType": "Return",
												"src": "2583:45:0"
											}
										]
									},
									"documentation": {
										"id": 57,
										"nodeType": "StructuredDocumentation",
										"src": "1645:834:0",
										"text": " @dev Performs a Solidity function call using a low level `call`. A\n plain `call` is an unsafe replacement for a function call: use this\n function instead.\n If `target` reverts with a revert reason or custom error, it is bubbled\n up by this function (like regular Solidity function calls). However, if\n the call reverted with no returned reason, this function reverts with a\n {Errors.FailedCall} error.\n Returns the raw returned data. To convert to the expected return value,\n use https://solidity.readthedocs.io/en/latest/units-and-global-variables.html?highlight=abi.decode#abi-encoding-and-decoding-functions[`abi.decode`].\n Requirements:\n - `target` must be a contract.\n - calling `target` with `data` must not revert."
									},
									"id": 73,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCall",
									"nameLocation": "2493:12:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 62,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2514:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "2506:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 58,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2506:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 61,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "2535:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "2522:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 60,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2522:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2505:35:0"
									},
									"returnParameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 73,
												"src": "2559:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 63,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "2559:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2558:14:0"
									},
									"scope": 258,
									"src": "2484:151:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 122,
										"nodeType": "Block",
										"src": "3072:294:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 91,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"arguments": [
																{
																	"id": 87,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "3094:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_Address_$258",
																		"typeString": "library Address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_contract$_Address_$258",
																		"typeString": "library Address"
																	}
																],
																"id": 86,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"lValueRequested": false,
																"nodeType": "ElementaryTypeNameExpression",
																"src": "3086:7:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_address_$",
																	"typeString": "type(address)"
																},
																"typeName": {
																	"id": 85,
																	"name": "address",
																	"nodeType": "ElementaryTypeName",
																	"src": "3086:7:0",
																	"typeDescriptions": {}
																}
															},
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "3086:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 89,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3100:7:0",
														"memberName": "balance",
														"nodeType": "MemberAccess",
														"src": "3086:21:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 90,
														"name": "value",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 80,
														"src": "3110:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "3086:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 104,
												"nodeType": "IfStatement",
												"src": "3082:123:0",
												"trueBody": {
													"id": 103,
													"nodeType": "Block",
													"src": "3117:88:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"id": 97,
																					"name": "this",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 4294967268,
																					"src": "3173:4:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_contract$_Address_$258",
																						"typeString": "library Address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_contract$_Address_$258",
																						"typeString": "library Address"
																					}
																				],
																				"id": 96,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": true,
																				"lValueRequested": false,
																				"nodeType": "ElementaryTypeNameExpression",
																				"src": "3165:7:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_type$_t_address_$",
																					"typeString": "type(address)"
																				},
																				"typeName": {
																					"id": 95,
																					"name": "address",
																					"nodeType": "ElementaryTypeName",
																					"src": "3165:7:0",
																					"typeDescriptions": {}
																				}
																			},
																			"id": 98,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "typeConversion",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "3165:13:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_address",
																				"typeString": "address"
																			}
																		},
																		"id": 99,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "3179:7:0",
																		"memberName": "balance",
																		"nodeType": "MemberAccess",
																		"src": "3165:21:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	{
																		"id": 100,
																		"name": "value",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 80,
																		"src": "3188:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		{
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	],
																	"expression": {
																		"id": 92,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 280,
																		"src": "3138:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$280_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 94,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "3145:19:0",
																	"memberName": "InsufficientBalance",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 268,
																	"src": "3138:26:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$_t_uint256_$_t_uint256_$returns$_t_error_$",
																		"typeString": "function (uint256,uint256) pure returns (error)"
																	}
																},
																"id": 101,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "3138:56:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 102,
															"nodeType": "RevertStatement",
															"src": "3131:63:0"
														}
													]
												}
											},
											{
												"assignments": [
													106,
													108
												],
												"declarations": [
													{
														"constant": false,
														"id": 106,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3220:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 122,
														"src": "3215:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 105,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3215:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 108,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3242:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 122,
														"src": "3229:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 107,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3229:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 115,
												"initialValue": {
													"arguments": [
														{
															"id": 113,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 78,
															"src": "3282:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"argumentTypes": [
																{
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															],
															"expression": {
																"id": 109,
																"name": "target",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 76,
																"src": "3256:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_address",
																	"typeString": "address"
																}
															},
															"id": 110,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "3263:4:0",
															"memberName": "call",
															"nodeType": "MemberAccess",
															"src": "3256:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
																"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
															}
														},
														"id": 112,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"names": [
															"value"
														],
														"nodeType": "FunctionCallOptions",
														"options": [
															{
																"id": 111,
																"name": "value",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 80,
																"src": "3275:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"src": "3256:25:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 114,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3256:31:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3214:73:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 117,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 76,
															"src": "3331:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 118,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 106,
															"src": "3339:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 119,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 108,
															"src": "3348:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 116,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 215,
														"src": "3304:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 120,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3304:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 84,
												"id": 121,
												"nodeType": "Return",
												"src": "3297:62:0"
											}
										]
									},
									"documentation": {
										"id": 74,
										"nodeType": "StructuredDocumentation",
										"src": "2641:313:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but also transferring `value` wei to `target`.\n Requirements:\n - the calling contract must have an ETH balance of at least `value`.\n - the called Solidity function must be `payable`."
									},
									"id": 123,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionCallWithValue",
									"nameLocation": "2968:21:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 81,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 76,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "2998:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "2990:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 75,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "2990:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 78,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3019:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3006:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 77,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3006:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 80,
												"mutability": "mutable",
												"name": "value",
												"nameLocation": "3033:5:0",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3025:13:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 79,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "3025:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "2989:50:0"
									},
									"returnParameters": {
										"id": 84,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 83,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 123,
												"src": "3058:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 82,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3058:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3057:14:0"
									},
									"scope": 258,
									"src": "2959:407:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 148,
										"nodeType": "Block",
										"src": "3605:154:0",
										"statements": [
											{
												"assignments": [
													134,
													136
												],
												"declarations": [
													{
														"constant": false,
														"id": 134,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "3621:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 148,
														"src": "3616:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 133,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "3616:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 136,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "3643:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 148,
														"src": "3630:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 135,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "3630:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 141,
												"initialValue": {
													"arguments": [
														{
															"id": 139,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 128,
															"src": "3675:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 137,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "3657:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 138,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "3664:10:0",
														"memberName": "staticcall",
														"nodeType": "MemberAccess",
														"src": "3657:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barestaticcall_view$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) view returns (bool,bytes memory)"
														}
													},
													"id": 140,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3657:23:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "3615:65:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 143,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 126,
															"src": "3724:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 144,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 134,
															"src": "3732:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 145,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 136,
															"src": "3741:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 142,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 215,
														"src": "3697:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 146,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "3697:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 132,
												"id": 147,
												"nodeType": "Return",
												"src": "3690:62:0"
											}
										]
									},
									"documentation": {
										"id": 124,
										"nodeType": "StructuredDocumentation",
										"src": "3372:128:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a static call."
									},
									"id": 149,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionStaticCall",
									"nameLocation": "3514:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 129,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 126,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3541:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "3533:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 125,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3533:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 128,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3562:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "3549:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 127,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3549:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3532:35:0"
									},
									"returnParameters": {
										"id": 132,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 131,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 149,
												"src": "3591:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 130,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3591:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3590:14:0"
									},
									"scope": 258,
									"src": "3505:254:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 174,
										"nodeType": "Block",
										"src": "3997:156:0",
										"statements": [
											{
												"assignments": [
													160,
													162
												],
												"declarations": [
													{
														"constant": false,
														"id": 160,
														"mutability": "mutable",
														"name": "success",
														"nameLocation": "4013:7:0",
														"nodeType": "VariableDeclaration",
														"scope": 174,
														"src": "4008:12:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"typeName": {
															"id": 159,
															"name": "bool",
															"nodeType": "ElementaryTypeName",
															"src": "4008:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														"visibility": "internal"
													},
													{
														"constant": false,
														"id": 162,
														"mutability": "mutable",
														"name": "returndata",
														"nameLocation": "4035:10:0",
														"nodeType": "VariableDeclaration",
														"scope": 174,
														"src": "4022:23:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 161,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "4022:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 167,
												"initialValue": {
													"arguments": [
														{
															"id": 165,
															"name": "data",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 154,
															"src": "4069:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"id": 163,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4049:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 164,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "4056:12:0",
														"memberName": "delegatecall",
														"nodeType": "MemberAccess",
														"src": "4049:19:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) returns (bool,bytes memory)"
														}
													},
													"id": 166,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4049:25:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "4007:67:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 169,
															"name": "target",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 152,
															"src": "4118:6:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														{
															"id": 170,
															"name": "success",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 160,
															"src": "4126:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"id": 171,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 162,
															"src": "4135:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"id": 168,
														"name": "verifyCallResultFromTarget",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 215,
														"src": "4091:26:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_view$_t_address_$_t_bool_$_t_bytes_memory_ptr_$returns$_t_bytes_memory_ptr_$",
															"typeString": "function (address,bool,bytes memory) view returns (bytes memory)"
														}
													},
													"id": 172,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "4091:55:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_memory_ptr",
														"typeString": "bytes memory"
													}
												},
												"functionReturnParameters": 158,
												"id": 173,
												"nodeType": "Return",
												"src": "4084:62:0"
											}
										]
									},
									"documentation": {
										"id": 150,
										"nodeType": "StructuredDocumentation",
										"src": "3765:130:0",
										"text": " @dev Same as {xref-Address-functionCall-address-bytes-}[`functionCall`],\n but performing a delegate call."
									},
									"id": 175,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "functionDelegateCall",
									"nameLocation": "3909:20:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 155,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 152,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "3938:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "3930:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 151,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "3930:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 154,
												"mutability": "mutable",
												"name": "data",
												"nameLocation": "3959:4:0",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "3946:17:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 153,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3946:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3929:35:0"
									},
									"returnParameters": {
										"id": 158,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 157,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 175,
												"src": "3983:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 156,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "3983:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "3982:14:0"
									},
									"scope": 258,
									"src": "3900:253:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 214,
										"nodeType": "Block",
										"src": "4579:424:0",
										"statements": [
											{
												"condition": {
													"id": 188,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "4593:8:0",
													"subExpression": {
														"id": 187,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 180,
														"src": "4594:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 212,
													"nodeType": "Block",
													"src": "4653:344:0",
													"statements": [
														{
															"condition": {
																"commonType": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																},
																"id": 203,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 197,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"id": 194,
																			"name": "returndata",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 182,
																			"src": "4841:10:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 195,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4852:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4841:17:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 196,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4862:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4841:22:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&&",
																"rightExpression": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 202,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"expression": {
																			"expression": {
																				"id": 198,
																				"name": "target",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 178,
																				"src": "4867:6:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_address",
																					"typeString": "address"
																				}
																			},
																			"id": 199,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"lValueRequested": false,
																			"memberLocation": "4874:4:0",
																			"memberName": "code",
																			"nodeType": "MemberAccess",
																			"src": "4867:11:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_bytes_memory_ptr",
																				"typeString": "bytes memory"
																			}
																		},
																		"id": 200,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "4879:6:0",
																		"memberName": "length",
																		"nodeType": "MemberAccess",
																		"src": "4867:18:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 201,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "4889:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "4867:23:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"src": "4841:49:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"id": 209,
															"nodeType": "IfStatement",
															"src": "4837:119:0",
															"trueBody": {
																"id": 208,
																"nodeType": "Block",
																"src": "4892:64:0",
																"statements": [
																	{
																		"errorCall": {
																			"arguments": [
																				{
																					"id": 205,
																					"name": "target",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 178,
																					"src": "4934:6:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				}
																			],
																			"expression": {
																				"argumentTypes": [
																					{
																						"typeIdentifier": "t_address",
																						"typeString": "address"
																					}
																				],
																				"id": 204,
																				"name": "AddressEmptyCode",
																				"nodeType": "Identifier",
																				"overloadedDeclarations": [],
																				"referencedDeclaration": 9,
																				"src": "4917:16:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_function_error_pure$_t_address_$returns$_t_error_$",
																					"typeString": "function (address) pure returns (error)"
																				}
																			},
																			"id": 206,
																			"isConstant": false,
																			"isLValue": false,
																			"isPure": false,
																			"kind": "functionCall",
																			"lValueRequested": false,
																			"nameLocations": [],
																			"names": [],
																			"nodeType": "FunctionCall",
																			"src": "4917:24:0",
																			"tryCall": false,
																			"typeDescriptions": {
																				"typeIdentifier": "t_error",
																				"typeString": "error"
																			}
																		},
																		"id": 207,
																		"nodeType": "RevertStatement",
																		"src": "4910:31:0"
																	}
																]
															}
														},
														{
															"expression": {
																"id": 210,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 182,
																"src": "4976:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 186,
															"id": 211,
															"nodeType": "Return",
															"src": "4969:17:0"
														}
													]
												},
												"id": 213,
												"nodeType": "IfStatement",
												"src": "4589:408:0",
												"trueBody": {
													"id": 193,
													"nodeType": "Block",
													"src": "4603:44:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 190,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 182,
																		"src": "4625:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 189,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 257,
																	"src": "4617:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 191,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "4617:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 192,
															"nodeType": "ExpressionStatement",
															"src": "4617:19:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 176,
										"nodeType": "StructuredDocumentation",
										"src": "4159:257:0",
										"text": " @dev Tool to verify that a low level call to smart-contract was successful, and reverts if the target\n was not a contract or bubbling up the revert reason (falling back to {Errors.FailedCall}) in case\n of an unsuccessful call."
									},
									"id": 215,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResultFromTarget",
									"nameLocation": "4430:26:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 183,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 178,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "4474:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "4466:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 177,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "4466:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 180,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "4495:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "4490:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 179,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "4490:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 182,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "4525:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "4512:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 181,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4512:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4456:85:0"
									},
									"returnParameters": {
										"id": 186,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 185,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 215,
												"src": "4565:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 184,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "4565:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "4564:14:0"
									},
									"scope": 258,
									"src": "4421:582:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 236,
										"nodeType": "Block",
										"src": "5307:122:0",
										"statements": [
											{
												"condition": {
													"id": 226,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "UnaryOperation",
													"operator": "!",
													"prefix": true,
													"src": "5321:8:0",
													"subExpression": {
														"id": 225,
														"name": "success",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 218,
														"src": "5322:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 234,
													"nodeType": "Block",
													"src": "5381:42:0",
													"statements": [
														{
															"expression": {
																"id": 232,
																"name": "returndata",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 220,
																"src": "5402:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes_memory_ptr",
																	"typeString": "bytes memory"
																}
															},
															"functionReturnParameters": 224,
															"id": 233,
															"nodeType": "Return",
															"src": "5395:17:0"
														}
													]
												},
												"id": 235,
												"nodeType": "IfStatement",
												"src": "5317:106:0",
												"trueBody": {
													"id": 231,
													"nodeType": "Block",
													"src": "5331:44:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"id": 228,
																		"name": "returndata",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 220,
																		"src": "5353:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_bytes_memory_ptr",
																			"typeString": "bytes memory"
																		}
																	],
																	"id": 227,
																	"name": "_revert",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 257,
																	"src": "5345:7:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$__$",
																		"typeString": "function (bytes memory) pure"
																	}
																},
																"id": 229,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5345:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_tuple$__$",
																	"typeString": "tuple()"
																}
															},
															"id": 230,
															"nodeType": "ExpressionStatement",
															"src": "5345:19:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 216,
										"nodeType": "StructuredDocumentation",
										"src": "5009:191:0",
										"text": " @dev Tool to verify that a low level call was successful, and reverts if it wasn't, either by bubbling the\n revert reason or with a default {Errors.FailedCall} error."
									},
									"id": 237,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "verifyCallResult",
									"nameLocation": "5214:16:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 221,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 218,
												"mutability": "mutable",
												"name": "success",
												"nameLocation": "5236:7:0",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "5231:12:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 217,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "5231:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 220,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5258:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "5245:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 219,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5245:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5230:39:0"
									},
									"returnParameters": {
										"id": 224,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 223,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 237,
												"src": "5293:12:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 222,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5293:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5292:14:0"
									},
									"scope": 258,
									"src": "5205:224:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 256,
										"nodeType": "Block",
										"src": "5598:432:0",
										"statements": [
											{
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 246,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"expression": {
															"id": 243,
															"name": "returndata",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 240,
															"src": "5674:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														},
														"id": 244,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "5685:6:0",
														"memberName": "length",
														"nodeType": "MemberAccess",
														"src": "5674:17:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 245,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "5694:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "5674:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"falseBody": {
													"id": 254,
													"nodeType": "Block",
													"src": "5973:51:0",
													"statements": [
														{
															"errorCall": {
																"arguments": [],
																"expression": {
																	"argumentTypes": [],
																	"expression": {
																		"id": 249,
																		"name": "Errors",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 280,
																		"src": "5994:6:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_type$_t_contract$_Errors_$280_$",
																			"typeString": "type(library Errors)"
																		}
																	},
																	"id": 251,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"memberLocation": "6001:10:0",
																	"memberName": "FailedCall",
																	"nodeType": "MemberAccess",
																	"referencedDeclaration": 271,
																	"src": "5994:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_function_error_pure$__$returns$_t_error_$",
																		"typeString": "function () pure returns (error)"
																	}
																},
																"id": 252,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "functionCall",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "5994:19:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_error",
																	"typeString": "error"
																}
															},
															"id": 253,
															"nodeType": "RevertStatement",
															"src": "5987:26:0"
														}
													]
												},
												"id": 255,
												"nodeType": "IfStatement",
												"src": "5670:354:0",
												"trueBody": {
													"id": 248,
													"nodeType": "Block",
													"src": "5697:270:0",
													"statements": [
														{
															"AST": {
																"nativeSrc": "5824:133:0",
																"nodeType": "YulBlock",
																"src": "5824:133:0",
																"statements": [
																	{
																		"nativeSrc": "5842:40:0",
																		"nodeType": "YulVariableDeclaration",
																		"src": "5842:40:0",
																		"value": {
																			"arguments": [
																				{
																					"name": "returndata",
																					"nativeSrc": "5871:10:0",
																					"nodeType": "YulIdentifier",
																					"src": "5871:10:0"
																				}
																			],
																			"functionName": {
																				"name": "mload",
																				"nativeSrc": "5865:5:0",
																				"nodeType": "YulIdentifier",
																				"src": "5865:5:0"
																			},
																			"nativeSrc": "5865:17:0",
																			"nodeType": "YulFunctionCall",
																			"src": "5865:17:0"
																		},
																		"variables": [
																			{
																				"name": "returndata_size",
																				"nativeSrc": "5846:15:0",
																				"nodeType": "YulTypedName",
																				"src": "5846:15:0",
																				"type": ""
																			}
																		]
																	},
																	{
																		"expression": {
																			"arguments": [
																				{
																					"arguments": [
																						{
																							"kind": "number",
																							"nativeSrc": "5910:2:0",
																							"nodeType": "YulLiteral",
																							"src": "5910:2:0",
																							"type": "",
																							"value": "32"
																						},
																						{
																							"name": "returndata",
																							"nativeSrc": "5914:10:0",
																							"nodeType": "YulIdentifier",
																							"src": "5914:10:0"
																						}
																					],
																					"functionName": {
																						"name": "add",
																						"nativeSrc": "5906:3:0",
																						"nodeType": "YulIdentifier",
																						"src": "5906:3:0"
																					},
																					"nativeSrc": "5906:19:0",
																					"nodeType": "YulFunctionCall",
																					"src": "5906:19:0"
																				},
																				{
																					"name": "returndata_size",
																					"nativeSrc": "5927:15:0",
																					"nodeType": "YulIdentifier",
																					"src": "5927:15:0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "5899:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "5899:6:0"
																			},
																			"nativeSrc": "5899:44:0",
																			"nodeType": "YulFunctionCall",
																			"src": "5899:44:0"
																		},
																		"nativeSrc": "5899:44:0",
																		"nodeType": "YulExpressionStatement",
																		"src": "5899:44:0"
																	}
																]
															},
															"evmVersion": "cancun",
															"externalReferences": [
																{
																	"declaration": 240,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5871:10:0",
																	"valueSize": 1
																},
																{
																	"declaration": 240,
																	"isOffset": false,
																	"isSlot": false,
																	"src": "5914:10:0",
																	"valueSize": 1
																}
															],
															"flags": [
																"memory-safe"
															],
															"id": 247,
															"nodeType": "InlineAssembly",
															"src": "5799:158:0"
														}
													]
												}
											}
										]
									},
									"documentation": {
										"id": 238,
										"nodeType": "StructuredDocumentation",
										"src": "5435:103:0",
										"text": " @dev Reverts with returndata if present. Otherwise reverts with {Errors.FailedCall}."
									},
									"id": 257,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_revert",
									"nameLocation": "5552:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 241,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 240,
												"mutability": "mutable",
												"name": "returndata",
												"nameLocation": "5573:10:0",
												"nodeType": "VariableDeclaration",
												"scope": 257,
												"src": "5560:23:0",
												"stateVariable": false,
												"storageLocation": "memory",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes_memory_ptr",
													"typeString": "bytes"
												},
												"typeName": {
													"id": 239,
													"name": "bytes",
													"nodeType": "ElementaryTypeName",
													"src": "5560:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes_storage_ptr",
														"typeString": "bytes"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "5559:25:0"
									},
									"returnParameters": {
										"id": 242,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "5598:0:0"
									},
									"scope": 258,
									"src": "5543:487:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "private"
								}
							],
							"scope": 259,
							"src": "233:5799:0",
							"usedErrors": [
								9
							],
							"usedEvents": []
						}
					],
					"src": "101:5932:0"
				},
				"id": 0
			},
			"@openzeppelin/contracts/utils/Errors.sol": {
				"ast": {
					"absolutePath": "@openzeppelin/contracts/utils/Errors.sol",
					"exportedSymbols": {
						"Errors": [
							280
						]
					},
					"id": 281,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 260,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".20"
							],
							"nodeType": "PragmaDirective",
							"src": "100:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Errors",
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 261,
								"nodeType": "StructuredDocumentation",
								"src": "126:284:1",
								"text": " @dev Collection of common custom errors used in multiple contracts\n IMPORTANT: Backwards compatibility is not guaranteed in future versions of the library.\n It is recommended to avoid relying on the error API for critical functionality.\n _Available since v5.1._"
							},
							"fullyImplemented": true,
							"id": 280,
							"linearizedBaseContracts": [
								280
							],
							"name": "Errors",
							"nameLocation": "419:6:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"documentation": {
										"id": 262,
										"nodeType": "StructuredDocumentation",
										"src": "432:94:1",
										"text": " @dev The ETH balance of the account is not enough to perform the operation."
									},
									"errorSelector": "cf479181",
									"id": 268,
									"name": "InsufficientBalance",
									"nameLocation": "537:19:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 267,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 264,
												"mutability": "mutable",
												"name": "balance",
												"nameLocation": "565:7:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "557:15:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 263,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "557:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 266,
												"mutability": "mutable",
												"name": "needed",
												"nameLocation": "582:6:1",
												"nodeType": "VariableDeclaration",
												"scope": 268,
												"src": "574:14:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 265,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "574:7:1",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "556:33:1"
									},
									"src": "531:59:1"
								},
								{
									"documentation": {
										"id": 269,
										"nodeType": "StructuredDocumentation",
										"src": "596:89:1",
										"text": " @dev A call to an address target failed. The target may have reverted."
									},
									"errorSelector": "d6bda275",
									"id": 271,
									"name": "FailedCall",
									"nameLocation": "696:10:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 270,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "706:2:1"
									},
									"src": "690:19:1"
								},
								{
									"documentation": {
										"id": 272,
										"nodeType": "StructuredDocumentation",
										"src": "715:46:1",
										"text": " @dev The deployment failed."
									},
									"errorSelector": "b06ebf3d",
									"id": 274,
									"name": "FailedDeployment",
									"nameLocation": "772:16:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 273,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "788:2:1"
									},
									"src": "766:25:1"
								},
								{
									"documentation": {
										"id": 275,
										"nodeType": "StructuredDocumentation",
										"src": "797:58:1",
										"text": " @dev A necessary precompile is missing."
									},
									"errorSelector": "42b01bce",
									"id": 279,
									"name": "MissingPrecompile",
									"nameLocation": "866:17:1",
									"nodeType": "ErrorDefinition",
									"parameters": {
										"id": 278,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 277,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 279,
												"src": "884:7:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 276,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "884:7:1",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "883:9:1"
									},
									"src": "860:33:1"
								}
							],
							"scope": 281,
							"src": "411:484:1",
							"usedErrors": [
								268,
								271,
								274,
								279
							],
							"usedEvents": []
						}
					],
					"src": "100:796:1"
				},
				"id": 1
			},
			"homework/03/地址工具/Address2.sol": {
				"ast": {
					"absolutePath": "homework/03/地址工具/Address2.sol",
					"exportedSymbols": {
						"Address2": [
							310
						]
					},
					"id": 311,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 282,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:2"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Address2",
							"contractDependencies": [],
							"contractKind": "library",
							"fullyImplemented": true,
							"id": 310,
							"linearizedBaseContracts": [
								310
							],
							"name": "Address2",
							"nameLocation": "146:8:2",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 297,
										"nodeType": "Block",
										"src": "225:124:2",
										"statements": [
											{
												"assignments": [
													290
												],
												"declarations": [
													{
														"constant": false,
														"id": 290,
														"mutability": "mutable",
														"name": "size",
														"nameLocation": "243:4:2",
														"nodeType": "VariableDeclaration",
														"scope": 297,
														"src": "235:12:2",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 289,
															"name": "uint256",
															"nodeType": "ElementaryTypeName",
															"src": "235:7:2",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 291,
												"nodeType": "VariableDeclarationStatement",
												"src": "235:12:2"
											},
											{
												"AST": {
													"nativeSrc": "266:52:2",
													"nodeType": "YulBlock",
													"src": "266:52:2",
													"statements": [
														{
															"nativeSrc": "280:28:2",
															"nodeType": "YulAssignment",
															"src": "280:28:2",
															"value": {
																"arguments": [
																	{
																		"name": "account",
																		"nativeSrc": "300:7:2",
																		"nodeType": "YulIdentifier",
																		"src": "300:7:2"
																	}
																],
																"functionName": {
																	"name": "extcodesize",
																	"nativeSrc": "288:11:2",
																	"nodeType": "YulIdentifier",
																	"src": "288:11:2"
																},
																"nativeSrc": "288:20:2",
																"nodeType": "YulFunctionCall",
																"src": "288:20:2"
															},
															"variableNames": [
																{
																	"name": "size",
																	"nativeSrc": "280:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "280:4:2"
																}
															]
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 284,
														"isOffset": false,
														"isSlot": false,
														"src": "300:7:2",
														"valueSize": 1
													},
													{
														"declaration": 290,
														"isOffset": false,
														"isSlot": false,
														"src": "280:4:2",
														"valueSize": 1
													}
												],
												"id": 292,
												"nodeType": "InlineAssembly",
												"src": "257:61:2"
											},
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 295,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 293,
														"name": "size",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 290,
														"src": "334:4:2",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": ">",
													"rightExpression": {
														"hexValue": "30",
														"id": 294,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "341:1:2",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_0_by_1",
															"typeString": "int_const 0"
														},
														"value": "0"
													},
													"src": "334:8:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 288,
												"id": 296,
												"nodeType": "Return",
												"src": "327:15:2"
											}
										]
									},
									"functionSelector": "16279055",
									"id": 298,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "isContract",
									"nameLocation": "170:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 285,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 284,
												"mutability": "mutable",
												"name": "account",
												"nameLocation": "189:7:2",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "181:15:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 283,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "181:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "180:17:2"
									},
									"returnParameters": {
										"id": 288,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 287,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 298,
												"src": "219:4:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 286,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "219:4:2",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "218:6:2"
									},
									"scope": 310,
									"src": "161:188:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								},
								{
									"body": {
										"id": 308,
										"nodeType": "Block",
										"src": "405:37:2",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 305,
															"name": "this",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 4294967268,
															"src": "430:4:2",
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_Address2_$310",
																"typeString": "library Address2"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_contract$_Address2_$310",
																"typeString": "library Address2"
															}
														],
														"id": 304,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "422:7:2",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_$",
															"typeString": "type(address)"
														},
														"typeName": {
															"id": 303,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "422:7:2",
															"typeDescriptions": {}
														}
													},
													"id": 306,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "422:13:2",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"functionReturnParameters": 302,
												"id": 307,
												"nodeType": "Return",
												"src": "415:20:2"
											}
										]
									},
									"functionSelector": "38cc4831",
									"id": 309,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddress",
									"nameLocation": "364:10:2",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 299,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "374:2:2"
									},
									"returnParameters": {
										"id": 302,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 301,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 309,
												"src": "397:7:2",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 300,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "397:7:2",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "396:9:2"
									},
									"scope": 310,
									"src": "355:87:2",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 311,
							"src": "138:306:2",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:333:2"
				},
				"id": 2
			},
			"homework/03/地址工具/MyToken.sol": {
				"ast": {
					"absolutePath": "homework/03/地址工具/MyToken.sol",
					"exportedSymbols": {
						"Address": [
							258
						],
						"Address2": [
							310
						],
						"Errors": [
							280
						],
						"MyToken": [
							350
						]
					},
					"id": 351,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 312,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:3"
						},
						{
							"absolutePath": "@openzeppelin/contracts/utils/Address.sol",
							"file": "@openzeppelin/contracts/utils/Address.sol",
							"id": 313,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 351,
							"sourceUnit": 259,
							"src": "138:51:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"absolutePath": "homework/03/地址工具/Address2.sol",
							"file": "./Address2.sol",
							"id": 314,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 351,
							"sourceUnit": 311,
							"src": "190:24:3",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "MyToken",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 350,
							"linearizedBaseContracts": [
								350
							],
							"name": "MyToken",
							"nameLocation": "227:7:3",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"global": false,
									"id": 317,
									"libraryName": {
										"id": 315,
										"name": "Address2",
										"nameLocations": [
											"247:8:3"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 310,
										"src": "247:8:3"
									},
									"nodeType": "UsingForDirective",
									"src": "241:27:3",
									"typeName": {
										"id": 316,
										"name": "address",
										"nodeType": "ElementaryTypeName",
										"src": "260:7:3",
										"stateMutability": "nonpayable",
										"typeDescriptions": {
											"typeIdentifier": "t_address",
											"typeString": "address"
										}
									}
								},
								{
									"body": {
										"id": 329,
										"nodeType": "Block",
										"src": "337:83:3",
										"statements": [
											{
												"condition": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"id": 324,
															"name": "recipient",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 319,
															"src": "351:9:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 325,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "361:10:3",
														"memberName": "isContract",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 298,
														"src": "351:20:3",
														"typeDescriptions": {
															"typeIdentifier": "t_function_delegatecall_view$_t_address_$returns$_t_bool_$attached_to$_t_address_$",
															"typeString": "function (address) view returns (bool)"
														}
													},
													"id": 326,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "351:22:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 328,
												"nodeType": "IfStatement",
												"src": "347:67:3",
												"trueBody": {
													"id": 327,
													"nodeType": "Block",
													"src": "375:39:3",
													"statements": []
												}
											}
										]
									},
									"functionSelector": "d0679d34",
									"id": 330,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "send",
									"nameLocation": "283:4:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 322,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 319,
												"mutability": "mutable",
												"name": "recipient",
												"nameLocation": "296:9:3",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "288:17:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 318,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "288:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 321,
												"mutability": "mutable",
												"name": "amount",
												"nameLocation": "315:6:3",
												"nodeType": "VariableDeclaration",
												"scope": 330,
												"src": "307:14:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 320,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "307:7:3",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "287:35:3"
									},
									"returnParameters": {
										"id": 323,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "337:0:3"
									},
									"scope": 350,
									"src": "274:146:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 348,
										"nodeType": "Block",
										"src": "476:194:3",
										"statements": [
											{
												"assignments": [
													336
												],
												"declarations": [
													{
														"constant": false,
														"id": 336,
														"mutability": "mutable",
														"name": "addr",
														"nameLocation": "493:4:3",
														"nodeType": "VariableDeclaration",
														"scope": 348,
														"src": "485:12:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address",
															"typeString": "address"
														},
														"typeName": {
															"id": 335,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "485:7:3",
															"stateMutability": "nonpayable",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 338,
												"initialValue": {
													"hexValue": "307836393042394139453961613143396442393931433737323161393264333531446234466143393930",
													"id": 337,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "number",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "500:42:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													},
													"value": "0x690B9A9E9aa1C9dB991C7721a92d351Db4FaC990"
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "485:57:3"
											},
											{
												"assignments": [
													340
												],
												"declarations": [
													{
														"constant": false,
														"id": 340,
														"mutability": "mutable",
														"name": "addr_pay",
														"nameLocation": "572:8:3",
														"nodeType": "VariableDeclaration",
														"scope": 348,
														"src": "556:24:3",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_address_payable",
															"typeString": "address payable"
														},
														"typeName": {
															"id": 339,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "556:15:3",
															"stateMutability": "payable",
															"typeDescriptions": {
																"typeIdentifier": "t_address_payable",
																"typeString": "address payable"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 345,
												"initialValue": {
													"arguments": [
														{
															"hexValue": "307838333036333030666664363136303439464437653462303335346136344461383335633141383143",
															"id": 343,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "591:42:3",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															},
															"value": "0x8306300ffd616049FD7e4b0354a64Da835c1A81C"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														],
														"id": 342,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"lValueRequested": false,
														"nodeType": "ElementaryTypeNameExpression",
														"src": "583:8:3",
														"typeDescriptions": {
															"typeIdentifier": "t_type$_t_address_payable_$",
															"typeString": "type(address payable)"
														},
														"typeName": {
															"id": 341,
															"name": "address",
															"nodeType": "ElementaryTypeName",
															"src": "583:8:3",
															"stateMutability": "payable",
															"typeDescriptions": {}
														}
													},
													"id": 344,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "typeConversion",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "583:51:3",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "556:78:3"
											},
											{
												"expression": {
													"id": 346,
													"name": "addr_pay",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 340,
													"src": "655:8:3",
													"typeDescriptions": {
														"typeIdentifier": "t_address_payable",
														"typeString": "address payable"
													}
												},
												"functionReturnParameters": 334,
												"id": 347,
												"nodeType": "Return",
												"src": "648:15:3"
											}
										]
									},
									"functionSelector": "38cc4831",
									"id": 349,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "getAddress",
									"nameLocation": "435:10:3",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 331,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "445:2:3"
									},
									"returnParameters": {
										"id": 334,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 333,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 349,
												"src": "468:7:3",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 332,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "468:7:3",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "467:9:3"
									},
									"scope": 350,
									"src": "426:244:3",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 351,
							"src": "216:456:3",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:561:3"
				},
				"id": 3
			}
		}
	}
}