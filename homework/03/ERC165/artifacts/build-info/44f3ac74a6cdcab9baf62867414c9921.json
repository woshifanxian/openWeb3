{
	"id": "44f3ac74a6cdcab9baf62867414c9921",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"homework/03/ERC165/ERC165Reg.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// compiler version must be greater than or equal to 0.8.24 and less than 0.9.0\npragma solidity ^0.8.24;\nimport \"./IERC165.sol\";\n\ncontract ERC165Reg is IERC165 {\n    /*\n     * bytes4(keccak256('supportsInterface(bytes4)')) == 0x01ffc9a7\n     */\n    bytes4 private constant _INTERFACE_ID_ERC165 = 0x01ffc9a7;\n    mapping(bytes4 => bool) private _supportedInterfaces;\n\n    constructor(){\n        _registerInterface(_INTERFACE_ID_ERC165);\n        _registerInterface(this.test.selector); // 注册合约对外接口\n    }\n\n    function supportsInterface(bytes4 interfaceId) external view returns (bool)\n    {\n        return _supportedInterfaces[interfaceId];\n    }\n\n    function _registerInterface(bytes4 interfaceId) internal {\n        require(interfaceId != 0xffffffff, \"ERC165: invalid interfaceid\");\n        _supportedInterfaces[interfaceId] = true;\n    }\n\n    function test() external returns (bool) {}\n}\n"
			},
			"homework/03/ERC165/IERC165.sol": {
				"content": "// SPDX-License-Identifier: MIT\r\n// compiler version must be greater than or equal to 0.8.24 and less than 0.9.0\r\npragma solidity ^0.8.24;\r\ninterface IERC165 {\r\n    // @param interfaceID 参数：接口 ID\r\n    function supportsInterface(bytes4 interfaceID) external view returns(bool);\r\n}\r\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"homework/03/ERC165/ERC165Reg.sol": {
				"ERC165Reg": {
					"abi": [
						{
							"inputs": [],
							"stateMutability": "nonpayable",
							"type": "constructor"
						},
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceId",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "test",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"homework/03/ERC165/ERC165Reg.sol\":162:937  contract ERC165Reg is IERC165 {... */\n  mstore(0x40, 0x80)\n    /* \"homework/03/ERC165/ERC165Reg.sol\":403:549  constructor(){... */\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n    /* \"homework/03/ERC165/ERC165Reg.sol\":426:466  _registerInterface(_INTERFACE_ID_ERC165) */\n  tag_4\n    /* \"homework/03/ERC165/ERC165Reg.sol\":328:338  0x01ffc9a7 */\n  0x01ffc9a7\n    /* \"homework/03/ERC165/ERC165Reg.sol\":445:465  _INTERFACE_ID_ERC165 */\n  0xe0\n  shl\n    /* \"homework/03/ERC165/ERC165Reg.sol\":426:444  _registerInterface */\n  shl(0x20, tag_5)\n    /* \"homework/03/ERC165/ERC165Reg.sol\":426:466  _registerInterface(_INTERFACE_ID_ERC165) */\n  0x20\n  shr\n  jump\t// in\ntag_4:\n    /* \"homework/03/ERC165/ERC165Reg.sol\":476:514  _registerInterface(this.test.selector) */\n  tag_6\n    /* \"homework/03/ERC165/ERC165Reg.sol\":495:513  this.test.selector */\n  shl(0xe0, 0xf8a8fd6d)\n    /* \"homework/03/ERC165/ERC165Reg.sol\":476:494  _registerInterface */\n  shl(0x20, tag_5)\n    /* \"homework/03/ERC165/ERC165Reg.sol\":476:514  _registerInterface(this.test.selector) */\n  0x20\n  shr\n  jump\t// in\ntag_6:\n    /* \"homework/03/ERC165/ERC165Reg.sol\":162:937  contract ERC165Reg is IERC165 {... */\n  jump(tag_7)\n    /* \"homework/03/ERC165/ERC165Reg.sol\":698:887  function _registerInterface(bytes4 interfaceId) internal {... */\ntag_5:\n    /* \"homework/03/ERC165/ERC165Reg.sol\":788:798  0xffffffff */\n  0xffffffff\n    /* \"homework/03/ERC165/ERC165Reg.sol\":773:798  interfaceId != 0xffffffff */\n  0xe0\n  shl\n    /* \"homework/03/ERC165/ERC165Reg.sol\":773:784  interfaceId */\n  dup2\n    /* \"homework/03/ERC165/ERC165Reg.sol\":773:798  interfaceId != 0xffffffff */\n  not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n  and\n  sub\n    /* \"homework/03/ERC165/ERC165Reg.sol\":765:830  require(interfaceId != 0xffffffff, \"ERC165: invalid interfaceid\") */\n  tag_9\n  jumpi\n  mload(0x40)\n  0x08c379a000000000000000000000000000000000000000000000000000000000\n  dup2\n  mstore\n  0x04\n  add\n  tag_10\n  swap1\n  tag_11\n  jump\t// in\ntag_10:\n  mload(0x40)\n  dup1\n  swap2\n  sub\n  swap1\n  revert\ntag_9:\n    /* \"homework/03/ERC165/ERC165Reg.sol\":876:880  true */\n  0x01\n    /* \"homework/03/ERC165/ERC165Reg.sol\":840:860  _supportedInterfaces */\n  0x00\n    /* \"homework/03/ERC165/ERC165Reg.sol\":840:873  _supportedInterfaces[interfaceId] */\n  dup1\n    /* \"homework/03/ERC165/ERC165Reg.sol\":861:872  interfaceId */\n  dup4\n    /* \"homework/03/ERC165/ERC165Reg.sol\":840:873  _supportedInterfaces[interfaceId] */\n  not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n  and\n  not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n  and\n  dup2\n  mstore\n  0x20\n  add\n  swap1\n  dup2\n  mstore\n  0x20\n  add\n  0x00\n  keccak256\n  0x00\n    /* \"homework/03/ERC165/ERC165Reg.sol\":840:880  _supportedInterfaces[interfaceId] = true */\n  0x0100\n  exp\n  dup2\n  sload\n  dup2\n  0xff\n  mul\n  not\n  and\n  swap1\n  dup4\n  iszero\n  iszero\n  mul\n  or\n  swap1\n  sstore\n  pop\n    /* \"homework/03/ERC165/ERC165Reg.sol\":698:887  function _registerInterface(bytes4 interfaceId) internal {... */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":7:176   */\ntag_12:\n    /* \"#utility.yul\":91:102   */\n  0x00\n    /* \"#utility.yul\":125:131   */\n  dup3\n    /* \"#utility.yul\":120:123   */\n  dup3\n    /* \"#utility.yul\":113:132   */\n  mstore\n    /* \"#utility.yul\":165:169   */\n  0x20\n    /* \"#utility.yul\":160:163   */\n  dup3\n    /* \"#utility.yul\":156:170   */\n  add\n    /* \"#utility.yul\":141:170   */\n  swap1\n  pop\n    /* \"#utility.yul\":7:176   */\n  swap3\n  swap2\n  pop\n  pop\n  jump\t// out\n    /* \"#utility.yul\":182:359   */\ntag_13:\n    /* \"#utility.yul\":322:351   */\n  0x4552433136353a20696e76616c696420696e7465726661636569640000000000\n    /* \"#utility.yul\":318:319   */\n  0x00\n    /* \"#utility.yul\":310:316   */\n  dup3\n    /* \"#utility.yul\":306:320   */\n  add\n    /* \"#utility.yul\":299:352   */\n  mstore\n    /* \"#utility.yul\":182:359   */\n  pop\n  jump\t// out\n    /* \"#utility.yul\":365:731   */\ntag_14:\n    /* \"#utility.yul\":507:510   */\n  0x00\n    /* \"#utility.yul\":528:595   */\n  tag_19\n    /* \"#utility.yul\":592:594   */\n  0x1b\n    /* \"#utility.yul\":587:590   */\n  dup4\n    /* \"#utility.yul\":528:595   */\n  tag_12\n  jump\t// in\ntag_19:\n    /* \"#utility.yul\":521:595   */\n  swap2\n  pop\n    /* \"#utility.yul\":604:697   */\n  tag_20\n    /* \"#utility.yul\":693:696   */\n  dup3\n    /* \"#utility.yul\":604:697   */\n  tag_13\n  jump\t// in\ntag_20:\n    /* \"#utility.yul\":722:724   */\n  0x20\n    /* \"#utility.yul\":717:720   */\n  dup3\n    /* \"#utility.yul\":713:725   */\n  add\n    /* \"#utility.yul\":706:725   */\n  swap1\n  pop\n    /* \"#utility.yul\":365:731   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"#utility.yul\":737:1156   */\ntag_11:\n    /* \"#utility.yul\":903:907   */\n  0x00\n    /* \"#utility.yul\":941:943   */\n  0x20\n    /* \"#utility.yul\":930:939   */\n  dup3\n    /* \"#utility.yul\":926:944   */\n  add\n    /* \"#utility.yul\":918:944   */\n  swap1\n  pop\n    /* \"#utility.yul\":990:999   */\n  dup2\n    /* \"#utility.yul\":984:988   */\n  dup2\n    /* \"#utility.yul\":980:1000   */\n  sub\n    /* \"#utility.yul\":976:977   */\n  0x00\n    /* \"#utility.yul\":965:974   */\n  dup4\n    /* \"#utility.yul\":961:978   */\n  add\n    /* \"#utility.yul\":954:1001   */\n  mstore\n    /* \"#utility.yul\":1018:1149   */\n  tag_22\n    /* \"#utility.yul\":1144:1148   */\n  dup2\n    /* \"#utility.yul\":1018:1149   */\n  tag_14\n  jump\t// in\ntag_22:\n    /* \"#utility.yul\":1010:1149   */\n  swap1\n  pop\n    /* \"#utility.yul\":737:1156   */\n  swap2\n  swap1\n  pop\n  jump\t// out\n    /* \"homework/03/ERC165/ERC165Reg.sol\":162:937  contract ERC165Reg is IERC165 {... */\ntag_7:\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"homework/03/ERC165/ERC165Reg.sol\":162:937  contract ERC165Reg is IERC165 {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x01ffc9a7\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xf8a8fd6d\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"homework/03/ERC165/ERC165Reg.sol\":555:692  function supportsInterface(bytes4 interfaceId) external view returns (bool)... */\n    tag_3:\n      tag_5\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_6\n      swap2\n      swap1\n      tag_7\n      jump\t// in\n    tag_6:\n      tag_8\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"homework/03/ERC165/ERC165Reg.sol\":893:935  function test() external returns (bool) {} */\n    tag_4:\n      tag_11\n      tag_12\n      jump\t// in\n    tag_11:\n      mload(0x40)\n      tag_13\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_13:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"homework/03/ERC165/ERC165Reg.sol\":555:692  function supportsInterface(bytes4 interfaceId) external view returns (bool)... */\n    tag_8:\n        /* \"homework/03/ERC165/ERC165Reg.sol\":625:629  bool */\n      0x00\n        /* \"homework/03/ERC165/ERC165Reg.sol\":652:672  _supportedInterfaces */\n      dup1\n        /* \"homework/03/ERC165/ERC165Reg.sol\":652:685  _supportedInterfaces[interfaceId] */\n      0x00\n        /* \"homework/03/ERC165/ERC165Reg.sol\":673:684  interfaceId */\n      dup4\n        /* \"homework/03/ERC165/ERC165Reg.sol\":652:685  _supportedInterfaces[interfaceId] */\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      not(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n      and\n      dup2\n      mstore\n      0x20\n      add\n      swap1\n      dup2\n      mstore\n      0x20\n      add\n      0x00\n      keccak256\n      0x00\n      swap1\n      sload\n      swap1\n      0x0100\n      exp\n      swap1\n      div\n      0xff\n      and\n        /* \"homework/03/ERC165/ERC165Reg.sol\":645:685  return _supportedInterfaces[interfaceId] */\n      swap1\n      pop\n        /* \"homework/03/ERC165/ERC165Reg.sol\":555:692  function supportsInterface(bytes4 interfaceId) external view returns (bool)... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"homework/03/ERC165/ERC165Reg.sol\":893:935  function test() external returns (bool) {} */\n    tag_12:\n        /* \"homework/03/ERC165/ERC165Reg.sol\":927:931  bool */\n      0x00\n        /* \"homework/03/ERC165/ERC165Reg.sol\":893:935  function test() external returns (bool) {} */\n      swap1\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_17:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:483   */\n    tag_19:\n        /* \"#utility.yul\":370:377   */\n      0x00\n        /* \"#utility.yul\":410:476   */\n      0xffffffff00000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":403:408   */\n      dup3\n        /* \"#utility.yul\":399:477   */\n      and\n        /* \"#utility.yul\":388:477   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:483   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":489:609   */\n    tag_20:\n        /* \"#utility.yul\":561:584   */\n      tag_30\n        /* \"#utility.yul\":578:583   */\n      dup2\n        /* \"#utility.yul\":561:584   */\n      tag_19\n      jump\t// in\n    tag_30:\n        /* \"#utility.yul\":554:559   */\n      dup2\n        /* \"#utility.yul\":551:585   */\n      eq\n        /* \"#utility.yul\":541:603   */\n      tag_31\n      jumpi\n        /* \"#utility.yul\":599:600   */\n      0x00\n        /* \"#utility.yul\":596:597   */\n      dup1\n        /* \"#utility.yul\":589:601   */\n      revert\n        /* \"#utility.yul\":541:603   */\n    tag_31:\n        /* \"#utility.yul\":489:609   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":615:752   */\n    tag_21:\n        /* \"#utility.yul\":660:665   */\n      0x00\n        /* \"#utility.yul\":698:704   */\n      dup2\n        /* \"#utility.yul\":685:705   */\n      calldataload\n        /* \"#utility.yul\":676:705   */\n      swap1\n      pop\n        /* \"#utility.yul\":714:746   */\n      tag_33\n        /* \"#utility.yul\":740:745   */\n      dup2\n        /* \"#utility.yul\":714:746   */\n      tag_20\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":615:752   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":758:1085   */\n    tag_7:\n        /* \"#utility.yul\":816:822   */\n      0x00\n        /* \"#utility.yul\":865:867   */\n      0x20\n        /* \"#utility.yul\":853:862   */\n      dup3\n        /* \"#utility.yul\":844:851   */\n      dup5\n        /* \"#utility.yul\":840:863   */\n      sub\n        /* \"#utility.yul\":836:868   */\n      slt\n        /* \"#utility.yul\":833:952   */\n      iszero\n      tag_35\n      jumpi\n        /* \"#utility.yul\":871:950   */\n      tag_36\n      tag_17\n      jump\t// in\n    tag_36:\n        /* \"#utility.yul\":833:952   */\n    tag_35:\n        /* \"#utility.yul\":991:992   */\n      0x00\n        /* \"#utility.yul\":1016:1068   */\n      tag_37\n        /* \"#utility.yul\":1060:1067   */\n      dup5\n        /* \"#utility.yul\":1051:1057   */\n      dup3\n        /* \"#utility.yul\":1040:1049   */\n      dup6\n        /* \"#utility.yul\":1036:1058   */\n      add\n        /* \"#utility.yul\":1016:1068   */\n      tag_21\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":1006:1068   */\n      swap2\n      pop\n        /* \"#utility.yul\":962:1078   */\n      pop\n        /* \"#utility.yul\":758:1085   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1091:1181   */\n    tag_22:\n        /* \"#utility.yul\":1125:1132   */\n      0x00\n        /* \"#utility.yul\":1168:1173   */\n      dup2\n        /* \"#utility.yul\":1161:1174   */\n      iszero\n        /* \"#utility.yul\":1154:1175   */\n      iszero\n        /* \"#utility.yul\":1143:1175   */\n      swap1\n      pop\n        /* \"#utility.yul\":1091:1181   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1187:1296   */\n    tag_23:\n        /* \"#utility.yul\":1268:1289   */\n      tag_40\n        /* \"#utility.yul\":1283:1288   */\n      dup2\n        /* \"#utility.yul\":1268:1289   */\n      tag_22\n      jump\t// in\n    tag_40:\n        /* \"#utility.yul\":1263:1266   */\n      dup3\n        /* \"#utility.yul\":1256:1290   */\n      mstore\n        /* \"#utility.yul\":1187:1296   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1302:1512   */\n    tag_10:\n        /* \"#utility.yul\":1389:1393   */\n      0x00\n        /* \"#utility.yul\":1427:1429   */\n      0x20\n        /* \"#utility.yul\":1416:1425   */\n      dup3\n        /* \"#utility.yul\":1412:1430   */\n      add\n        /* \"#utility.yul\":1404:1430   */\n      swap1\n      pop\n        /* \"#utility.yul\":1440:1505   */\n      tag_42\n        /* \"#utility.yul\":1502:1503   */\n      0x00\n        /* \"#utility.yul\":1491:1500   */\n      dup4\n        /* \"#utility.yul\":1487:1504   */\n      add\n        /* \"#utility.yul\":1478:1484   */\n      dup5\n        /* \"#utility.yul\":1440:1505   */\n      tag_23\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":1302:1512   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122063012b1eb2e65a076dff51e409974f183f424ac5301639e8f3f33417025abb0c64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {
								"@_25": {
									"entryPoint": null,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@_registerInterface_56": {
									"entryPoint": 65,
									"id": 56,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"abi_encode_t_stringliteral_0748490a4ff26a6fb2e87cf23706c4130b337b0a1d281f07718c8e444679e7e6_to_t_string_memory_ptr_fromStack": {
									"entryPoint": 330,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_stringliteral_0748490a4ff26a6fb2e87cf23706c4130b337b0a1d281f07718c8e444679e7e6__to_t_string_memory_ptr__fromStack_reversed": {
									"entryPoint": 364,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_string_memory_ptr_fromStack": {
									"entryPoint": 274,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"store_literal_in_memory_0748490a4ff26a6fb2e87cf23706c4130b337b0a1d281f07718c8e444679e7e6": {
									"entryPoint": 290,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1159:2",
										"nodeType": "YulBlock",
										"src": "0:1159:2",
										"statements": [
											{
												"body": {
													"nativeSrc": "103:73:2",
													"nodeType": "YulBlock",
													"src": "103:73:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "120:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "120:3:2"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "125:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "125:6:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "113:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "113:6:2"
																},
																"nativeSrc": "113:19:2",
																"nodeType": "YulFunctionCall",
																"src": "113:19:2"
															},
															"nativeSrc": "113:19:2",
															"nodeType": "YulExpressionStatement",
															"src": "113:19:2"
														},
														{
															"nativeSrc": "141:29:2",
															"nodeType": "YulAssignment",
															"src": "141:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "160:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "160:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "165:4:2",
																		"nodeType": "YulLiteral",
																		"src": "165:4:2",
																		"type": "",
																		"value": "0x20"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "156:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "156:3:2"
																},
																"nativeSrc": "156:14:2",
																"nodeType": "YulFunctionCall",
																"src": "156:14:2"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "141:11:2",
																	"nodeType": "YulIdentifier",
																	"src": "141:11:2"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
												"nativeSrc": "7:169:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "75:3:2",
														"nodeType": "YulTypedName",
														"src": "75:3:2",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "80:6:2",
														"nodeType": "YulTypedName",
														"src": "80:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "91:11:2",
														"nodeType": "YulTypedName",
														"src": "91:11:2",
														"type": ""
													}
												],
												"src": "7:169:2"
											},
											{
												"body": {
													"nativeSrc": "288:71:2",
													"nodeType": "YulBlock",
													"src": "288:71:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "memPtr",
																				"nativeSrc": "310:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "310:6:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "318:1:2",
																				"nodeType": "YulLiteral",
																				"src": "318:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "306:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "306:3:2"
																		},
																		"nativeSrc": "306:14:2",
																		"nodeType": "YulFunctionCall",
																		"src": "306:14:2"
																	},
																	{
																		"hexValue": "4552433136353a20696e76616c696420696e746572666163656964",
																		"kind": "string",
																		"nativeSrc": "322:29:2",
																		"nodeType": "YulLiteral",
																		"src": "322:29:2",
																		"type": "",
																		"value": "ERC165: invalid interfaceid"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "299:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "299:6:2"
																},
																"nativeSrc": "299:53:2",
																"nodeType": "YulFunctionCall",
																"src": "299:53:2"
															},
															"nativeSrc": "299:53:2",
															"nodeType": "YulExpressionStatement",
															"src": "299:53:2"
														}
													]
												},
												"name": "store_literal_in_memory_0748490a4ff26a6fb2e87cf23706c4130b337b0a1d281f07718c8e444679e7e6",
												"nativeSrc": "182:177:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "memPtr",
														"nativeSrc": "280:6:2",
														"nodeType": "YulTypedName",
														"src": "280:6:2",
														"type": ""
													}
												],
												"src": "182:177:2"
											},
											{
												"body": {
													"nativeSrc": "511:220:2",
													"nodeType": "YulBlock",
													"src": "511:220:2",
													"statements": [
														{
															"nativeSrc": "521:74:2",
															"nodeType": "YulAssignment",
															"src": "521:74:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "587:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "587:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "592:2:2",
																		"nodeType": "YulLiteral",
																		"src": "592:2:2",
																		"type": "",
																		"value": "27"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_string_memory_ptr_fromStack",
																	"nativeSrc": "528:58:2",
																	"nodeType": "YulIdentifier",
																	"src": "528:58:2"
																},
																"nativeSrc": "528:67:2",
																"nodeType": "YulFunctionCall",
																"src": "528:67:2"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "521:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "521:3:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "693:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "693:3:2"
																	}
																],
																"functionName": {
																	"name": "store_literal_in_memory_0748490a4ff26a6fb2e87cf23706c4130b337b0a1d281f07718c8e444679e7e6",
																	"nativeSrc": "604:88:2",
																	"nodeType": "YulIdentifier",
																	"src": "604:88:2"
																},
																"nativeSrc": "604:93:2",
																"nodeType": "YulFunctionCall",
																"src": "604:93:2"
															},
															"nativeSrc": "604:93:2",
															"nodeType": "YulExpressionStatement",
															"src": "604:93:2"
														},
														{
															"nativeSrc": "706:19:2",
															"nodeType": "YulAssignment",
															"src": "706:19:2",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "717:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "717:3:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "722:2:2",
																		"nodeType": "YulLiteral",
																		"src": "722:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "713:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "713:3:2"
																},
																"nativeSrc": "713:12:2",
																"nodeType": "YulFunctionCall",
																"src": "713:12:2"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "706:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "706:3:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_stringliteral_0748490a4ff26a6fb2e87cf23706c4130b337b0a1d281f07718c8e444679e7e6_to_t_string_memory_ptr_fromStack",
												"nativeSrc": "365:366:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "499:3:2",
														"nodeType": "YulTypedName",
														"src": "499:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "507:3:2",
														"nodeType": "YulTypedName",
														"src": "507:3:2",
														"type": ""
													}
												],
												"src": "365:366:2"
											},
											{
												"body": {
													"nativeSrc": "908:248:2",
													"nodeType": "YulBlock",
													"src": "908:248:2",
													"statements": [
														{
															"nativeSrc": "918:26:2",
															"nodeType": "YulAssignment",
															"src": "918:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "930:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "930:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "941:2:2",
																		"nodeType": "YulLiteral",
																		"src": "941:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "926:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "926:3:2"
																},
																"nativeSrc": "926:18:2",
																"nodeType": "YulFunctionCall",
																"src": "926:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "918:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "918:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "965:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "965:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "976:1:2",
																				"nodeType": "YulLiteral",
																				"src": "976:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "961:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "961:3:2"
																		},
																		"nativeSrc": "961:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "961:17:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "tail",
																				"nativeSrc": "984:4:2",
																				"nodeType": "YulIdentifier",
																				"src": "984:4:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "990:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "990:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "980:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "980:3:2"
																		},
																		"nativeSrc": "980:20:2",
																		"nodeType": "YulFunctionCall",
																		"src": "980:20:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "954:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "954:6:2"
																},
																"nativeSrc": "954:47:2",
																"nodeType": "YulFunctionCall",
																"src": "954:47:2"
															},
															"nativeSrc": "954:47:2",
															"nodeType": "YulExpressionStatement",
															"src": "954:47:2"
														},
														{
															"nativeSrc": "1010:139:2",
															"nodeType": "YulAssignment",
															"src": "1010:139:2",
															"value": {
																"arguments": [
																	{
																		"name": "tail",
																		"nativeSrc": "1144:4:2",
																		"nodeType": "YulIdentifier",
																		"src": "1144:4:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_stringliteral_0748490a4ff26a6fb2e87cf23706c4130b337b0a1d281f07718c8e444679e7e6_to_t_string_memory_ptr_fromStack",
																	"nativeSrc": "1018:124:2",
																	"nodeType": "YulIdentifier",
																	"src": "1018:124:2"
																},
																"nativeSrc": "1018:131:2",
																"nodeType": "YulFunctionCall",
																"src": "1018:131:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1010:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "1010:4:2"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_t_stringliteral_0748490a4ff26a6fb2e87cf23706c4130b337b0a1d281f07718c8e444679e7e6__to_t_string_memory_ptr__fromStack_reversed",
												"nativeSrc": "737:419:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "888:9:2",
														"nodeType": "YulTypedName",
														"src": "888:9:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "903:4:2",
														"nodeType": "YulTypedName",
														"src": "903:4:2",
														"type": ""
													}
												],
												"src": "737:419:2"
											}
										]
									},
									"contents": "{\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_0748490a4ff26a6fb2e87cf23706c4130b337b0a1d281f07718c8e444679e7e6(memPtr) {\n\n        mstore(add(memPtr, 0), \"ERC165: invalid interfaceid\")\n\n    }\n\n    function abi_encode_t_stringliteral_0748490a4ff26a6fb2e87cf23706c4130b337b0a1d281f07718c8e444679e7e6_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_0748490a4ff26a6fb2e87cf23706c4130b337b0a1d281f07718c8e444679e7e6(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_0748490a4ff26a6fb2e87cf23706c4130b337b0a1d281f07718c8e444679e7e6__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_0748490a4ff26a6fb2e87cf23706c4130b337b0a1d281f07718c8e444679e7e6_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b506100266301ffc9a760e01b61004160201b60201c565b61003c63f8a8fd6d60e01b61004160201b60201c565b61018a565b63ffffffff60e01b817bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916036100a9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016100a09061016c565b60405180910390fd5b60015f80837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020015f205f6101000a81548160ff02191690831515021790555050565b5f82825260208201905092915050565b7f4552433136353a20696e76616c696420696e74657266616365696400000000005f82015250565b5f610156601b83610112565b915061016182610122565b602082019050919050565b5f6020820190508181035f8301526101838161014a565b9050919050565b6101da806101975f395ff3fe608060405234801561000f575f80fd5b5060043610610034575f3560e01c806301ffc9a714610038578063f8a8fd6d14610068575b5f80fd5b610052600480360381019061004d9190610146565b610086565b60405161005f919061018b565b60405180910390f35b6100706100e9565b60405161007d919061018b565b60405180910390f35b5f805f837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020015f205f9054906101000a900460ff169050919050565b5f90565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610125816100f1565b811461012f575f80fd5b50565b5f813590506101408161011c565b92915050565b5f6020828403121561015b5761015a6100ed565b5b5f61016884828501610132565b91505092915050565b5f8115159050919050565b61018581610171565b82525050565b5f60208201905061019e5f83018461017c565b9291505056fea264697066735822122063012b1eb2e65a076dff51e409974f183f424ac5301639e8f3f33417025abb0c64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x26 PUSH4 0x1FFC9A7 PUSH1 0xE0 SHL PUSH2 0x41 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x3C PUSH4 0xF8A8FD6D PUSH1 0xE0 SHL PUSH2 0x41 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH2 0x18A JUMP JUMPDEST PUSH4 0xFFFFFFFF PUSH1 0xE0 SHL DUP2 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND SUB PUSH2 0xA9 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA0 SWAP1 PUSH2 0x16C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 DUP1 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP JUMP JUMPDEST PUSH0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4552433136353A20696E76616C696420696E7465726661636569640000000000 PUSH0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH0 PUSH2 0x156 PUSH1 0x1B DUP4 PUSH2 0x112 JUMP JUMPDEST SWAP2 POP PUSH2 0x161 DUP3 PUSH2 0x122 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH0 DUP4 ADD MSTORE PUSH2 0x183 DUP2 PUSH2 0x14A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x1DA DUP1 PUSH2 0x197 PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0xF8A8FD6D EQ PUSH2 0x68 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x52 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x146 JUMP JUMPDEST PUSH2 0x86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F SWAP2 SWAP1 PUSH2 0x18B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x70 PUSH2 0xE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7D SWAP2 SWAP1 PUSH2 0x18B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x125 DUP2 PUSH2 0xF1 JUMP JUMPDEST DUP2 EQ PUSH2 0x12F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x140 DUP2 PUSH2 0x11C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15B JUMPI PUSH2 0x15A PUSH2 0xED JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x168 DUP5 DUP3 DUP6 ADD PUSH2 0x132 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x185 DUP2 PUSH2 0x171 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19E PUSH0 DUP4 ADD DUP5 PUSH2 0x17C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0x12B1EB2 0xE6 GAS SMOD PUSH14 0xFF51E409974F183F424AC5301639 0xE8 RETURN RETURN CALLVALUE OR MUL GAS 0xBB 0xC PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "162:775:0:-:0;;;403:146;;;;;;;;;;426:40;328:10;445:20;;426:18;;;:40;;:::i;:::-;476:38;495:18;;;476;;;:38;;:::i;:::-;162:775;;698:189;788:10;773:25;;:11;:25;;;;765:65;;;;;;;;;;;;:::i;:::-;;;;;;;;;876:4;840:20;:33;861:11;840:33;;;;;;;;;;;;;;;;;;:40;;;;;;;;;;;;;;;;;;698:189;:::o;7:169:2:-;91:11;125:6;120:3;113:19;165:4;160:3;156:14;141:29;;7:169;;;;:::o;182:177::-;322:29;318:1;310:6;306:14;299:53;182:177;:::o;365:366::-;507:3;528:67;592:2;587:3;528:67;:::i;:::-;521:74;;604:93;693:3;604:93;:::i;:::-;722:2;717:3;713:12;706:19;;365:366;;;:::o;737:419::-;903:4;941:2;930:9;926:18;918:26;;990:9;984:4;980:20;976:1;965:9;961:17;954:47;1018:131;1144:4;1018:131;:::i;:::-;1010:139;;737:419;;;:::o;162:775:0:-;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@supportsInterface_37": {
									"entryPoint": 134,
									"id": 37,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"@test_62": {
									"entryPoint": 233,
									"id": 62,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"abi_decode_t_bytes4": {
									"entryPoint": 306,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_bytes4": {
									"entryPoint": 326,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_bool_to_t_bool_fromStack": {
									"entryPoint": 380,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed": {
									"entryPoint": 395,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_bool": {
									"entryPoint": 369,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_bytes4": {
									"entryPoint": 241,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 237,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_bytes4": {
									"entryPoint": 284,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1515:2",
										"nodeType": "YulBlock",
										"src": "0:1515:2",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:2",
													"nodeType": "YulBlock",
													"src": "47:35:2",
													"statements": [
														{
															"nativeSrc": "57:19:2",
															"nodeType": "YulAssignment",
															"src": "57:19:2",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:2",
																		"nodeType": "YulLiteral",
																		"src": "73:2:2",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:2"
																},
																"nativeSrc": "67:9:2",
																"nodeType": "YulFunctionCall",
																"src": "67:9:2"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:2"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:2",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:2",
														"nodeType": "YulTypedName",
														"src": "40:6:2",
														"type": ""
													}
												],
												"src": "7:75:2"
											},
											{
												"body": {
													"nativeSrc": "177:28:2",
													"nodeType": "YulBlock",
													"src": "177:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:2",
																		"nodeType": "YulLiteral",
																		"src": "194:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:2",
																		"nodeType": "YulLiteral",
																		"src": "197:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:2"
																},
																"nativeSrc": "187:12:2",
																"nodeType": "YulFunctionCall",
																"src": "187:12:2"
															},
															"nativeSrc": "187:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:2"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:2"
											},
											{
												"body": {
													"nativeSrc": "300:28:2",
													"nodeType": "YulBlock",
													"src": "300:28:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:2",
																		"nodeType": "YulLiteral",
																		"src": "317:1:2",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:2",
																		"nodeType": "YulLiteral",
																		"src": "320:1:2",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:2"
																},
																"nativeSrc": "310:12:2",
																"nodeType": "YulFunctionCall",
																"src": "310:12:2"
															},
															"nativeSrc": "310:12:2",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:2"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:2",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:2"
											},
											{
												"body": {
													"nativeSrc": "378:105:2",
													"nodeType": "YulBlock",
													"src": "378:105:2",
													"statements": [
														{
															"nativeSrc": "388:89:2",
															"nodeType": "YulAssignment",
															"src": "388:89:2",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "403:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "403:5:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "410:66:2",
																		"nodeType": "YulLiteral",
																		"src": "410:66:2",
																		"type": "",
																		"value": "0xffffffff00000000000000000000000000000000000000000000000000000000"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "399:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "399:3:2"
																},
																"nativeSrc": "399:78:2",
																"nodeType": "YulFunctionCall",
																"src": "399:78:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "388:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "388:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bytes4",
												"nativeSrc": "334:149:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "360:5:2",
														"nodeType": "YulTypedName",
														"src": "360:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "370:7:2",
														"nodeType": "YulTypedName",
														"src": "370:7:2",
														"type": ""
													}
												],
												"src": "334:149:2"
											},
											{
												"body": {
													"nativeSrc": "531:78:2",
													"nodeType": "YulBlock",
													"src": "531:78:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "587:16:2",
																"nodeType": "YulBlock",
																"src": "587:16:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "596:1:2",
																					"nodeType": "YulLiteral",
																					"src": "596:1:2",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "599:1:2",
																					"nodeType": "YulLiteral",
																					"src": "599:1:2",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "589:6:2",
																				"nodeType": "YulIdentifier",
																				"src": "589:6:2"
																			},
																			"nativeSrc": "589:12:2",
																			"nodeType": "YulFunctionCall",
																			"src": "589:12:2"
																		},
																		"nativeSrc": "589:12:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "589:12:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "554:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "554:5:2"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "578:5:2",
																						"nodeType": "YulIdentifier",
																						"src": "578:5:2"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_bytes4",
																					"nativeSrc": "561:16:2",
																					"nodeType": "YulIdentifier",
																					"src": "561:16:2"
																				},
																				"nativeSrc": "561:23:2",
																				"nodeType": "YulFunctionCall",
																				"src": "561:23:2"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "551:2:2",
																			"nodeType": "YulIdentifier",
																			"src": "551:2:2"
																		},
																		"nativeSrc": "551:34:2",
																		"nodeType": "YulFunctionCall",
																		"src": "551:34:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "544:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "544:6:2"
																},
																"nativeSrc": "544:42:2",
																"nodeType": "YulFunctionCall",
																"src": "544:42:2"
															},
															"nativeSrc": "541:62:2",
															"nodeType": "YulIf",
															"src": "541:62:2"
														}
													]
												},
												"name": "validator_revert_t_bytes4",
												"nativeSrc": "489:120:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "524:5:2",
														"nodeType": "YulTypedName",
														"src": "524:5:2",
														"type": ""
													}
												],
												"src": "489:120:2"
											},
											{
												"body": {
													"nativeSrc": "666:86:2",
													"nodeType": "YulBlock",
													"src": "666:86:2",
													"statements": [
														{
															"nativeSrc": "676:29:2",
															"nodeType": "YulAssignment",
															"src": "676:29:2",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "698:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "698:6:2"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "685:12:2",
																	"nodeType": "YulIdentifier",
																	"src": "685:12:2"
																},
																"nativeSrc": "685:20:2",
																"nodeType": "YulFunctionCall",
																"src": "685:20:2"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "676:5:2",
																	"nodeType": "YulIdentifier",
																	"src": "676:5:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "740:5:2",
																		"nodeType": "YulIdentifier",
																		"src": "740:5:2"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_bytes4",
																	"nativeSrc": "714:25:2",
																	"nodeType": "YulIdentifier",
																	"src": "714:25:2"
																},
																"nativeSrc": "714:32:2",
																"nodeType": "YulFunctionCall",
																"src": "714:32:2"
															},
															"nativeSrc": "714:32:2",
															"nodeType": "YulExpressionStatement",
															"src": "714:32:2"
														}
													]
												},
												"name": "abi_decode_t_bytes4",
												"nativeSrc": "615:137:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "644:6:2",
														"nodeType": "YulTypedName",
														"src": "644:6:2",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "652:3:2",
														"nodeType": "YulTypedName",
														"src": "652:3:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "660:5:2",
														"nodeType": "YulTypedName",
														"src": "660:5:2",
														"type": ""
													}
												],
												"src": "615:137:2"
											},
											{
												"body": {
													"nativeSrc": "823:262:2",
													"nodeType": "YulBlock",
													"src": "823:262:2",
													"statements": [
														{
															"body": {
																"nativeSrc": "869:83:2",
																"nodeType": "YulBlock",
																"src": "869:83:2",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "871:77:2",
																				"nodeType": "YulIdentifier",
																				"src": "871:77:2"
																			},
																			"nativeSrc": "871:79:2",
																			"nodeType": "YulFunctionCall",
																			"src": "871:79:2"
																		},
																		"nativeSrc": "871:79:2",
																		"nodeType": "YulExpressionStatement",
																		"src": "871:79:2"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "844:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "844:7:2"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "853:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "853:9:2"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "840:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "840:3:2"
																		},
																		"nativeSrc": "840:23:2",
																		"nodeType": "YulFunctionCall",
																		"src": "840:23:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "865:2:2",
																		"nodeType": "YulLiteral",
																		"src": "865:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "836:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "836:3:2"
																},
																"nativeSrc": "836:32:2",
																"nodeType": "YulFunctionCall",
																"src": "836:32:2"
															},
															"nativeSrc": "833:119:2",
															"nodeType": "YulIf",
															"src": "833:119:2"
														},
														{
															"nativeSrc": "962:116:2",
															"nodeType": "YulBlock",
															"src": "962:116:2",
															"statements": [
																{
																	"nativeSrc": "977:15:2",
																	"nodeType": "YulVariableDeclaration",
																	"src": "977:15:2",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "991:1:2",
																		"nodeType": "YulLiteral",
																		"src": "991:1:2",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "981:6:2",
																			"nodeType": "YulTypedName",
																			"src": "981:6:2",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "1006:62:2",
																	"nodeType": "YulAssignment",
																	"src": "1006:62:2",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1040:9:2",
																						"nodeType": "YulIdentifier",
																						"src": "1040:9:2"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1051:6:2",
																						"nodeType": "YulIdentifier",
																						"src": "1051:6:2"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "1036:3:2",
																					"nodeType": "YulIdentifier",
																					"src": "1036:3:2"
																				},
																				"nativeSrc": "1036:22:2",
																				"nodeType": "YulFunctionCall",
																				"src": "1036:22:2"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1060:7:2",
																				"nodeType": "YulIdentifier",
																				"src": "1060:7:2"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_bytes4",
																			"nativeSrc": "1016:19:2",
																			"nodeType": "YulIdentifier",
																			"src": "1016:19:2"
																		},
																		"nativeSrc": "1016:52:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1016:52:2"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "1006:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "1006:6:2"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_bytes4",
												"nativeSrc": "758:327:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "793:9:2",
														"nodeType": "YulTypedName",
														"src": "793:9:2",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "804:7:2",
														"nodeType": "YulTypedName",
														"src": "804:7:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "816:6:2",
														"nodeType": "YulTypedName",
														"src": "816:6:2",
														"type": ""
													}
												],
												"src": "758:327:2"
											},
											{
												"body": {
													"nativeSrc": "1133:48:2",
													"nodeType": "YulBlock",
													"src": "1133:48:2",
													"statements": [
														{
															"nativeSrc": "1143:32:2",
															"nodeType": "YulAssignment",
															"src": "1143:32:2",
															"value": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1168:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "1168:5:2"
																			}
																		],
																		"functionName": {
																			"name": "iszero",
																			"nativeSrc": "1161:6:2",
																			"nodeType": "YulIdentifier",
																			"src": "1161:6:2"
																		},
																		"nativeSrc": "1161:13:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1161:13:2"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1154:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1154:6:2"
																},
																"nativeSrc": "1154:21:2",
																"nodeType": "YulFunctionCall",
																"src": "1154:21:2"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1143:7:2",
																	"nodeType": "YulIdentifier",
																	"src": "1143:7:2"
																}
															]
														}
													]
												},
												"name": "cleanup_t_bool",
												"nativeSrc": "1091:90:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1115:5:2",
														"nodeType": "YulTypedName",
														"src": "1115:5:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1125:7:2",
														"nodeType": "YulTypedName",
														"src": "1125:7:2",
														"type": ""
													}
												],
												"src": "1091:90:2"
											},
											{
												"body": {
													"nativeSrc": "1246:50:2",
													"nodeType": "YulBlock",
													"src": "1246:50:2",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1263:3:2",
																		"nodeType": "YulIdentifier",
																		"src": "1263:3:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1283:5:2",
																				"nodeType": "YulIdentifier",
																				"src": "1283:5:2"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_bool",
																			"nativeSrc": "1268:14:2",
																			"nodeType": "YulIdentifier",
																			"src": "1268:14:2"
																		},
																		"nativeSrc": "1268:21:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1268:21:2"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1256:6:2",
																	"nodeType": "YulIdentifier",
																	"src": "1256:6:2"
																},
																"nativeSrc": "1256:34:2",
																"nodeType": "YulFunctionCall",
																"src": "1256:34:2"
															},
															"nativeSrc": "1256:34:2",
															"nodeType": "YulExpressionStatement",
															"src": "1256:34:2"
														}
													]
												},
												"name": "abi_encode_t_bool_to_t_bool_fromStack",
												"nativeSrc": "1187:109:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1234:5:2",
														"nodeType": "YulTypedName",
														"src": "1234:5:2",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1241:3:2",
														"nodeType": "YulTypedName",
														"src": "1241:3:2",
														"type": ""
													}
												],
												"src": "1187:109:2"
											},
											{
												"body": {
													"nativeSrc": "1394:118:2",
													"nodeType": "YulBlock",
													"src": "1394:118:2",
													"statements": [
														{
															"nativeSrc": "1404:26:2",
															"nodeType": "YulAssignment",
															"src": "1404:26:2",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1416:9:2",
																		"nodeType": "YulIdentifier",
																		"src": "1416:9:2"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1427:2:2",
																		"nodeType": "YulLiteral",
																		"src": "1427:2:2",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1412:3:2",
																	"nodeType": "YulIdentifier",
																	"src": "1412:3:2"
																},
																"nativeSrc": "1412:18:2",
																"nodeType": "YulFunctionCall",
																"src": "1412:18:2"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1404:4:2",
																	"nodeType": "YulIdentifier",
																	"src": "1404:4:2"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1478:6:2",
																		"nodeType": "YulIdentifier",
																		"src": "1478:6:2"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1491:9:2",
																				"nodeType": "YulIdentifier",
																				"src": "1491:9:2"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1502:1:2",
																				"nodeType": "YulLiteral",
																				"src": "1502:1:2",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1487:3:2",
																			"nodeType": "YulIdentifier",
																			"src": "1487:3:2"
																		},
																		"nativeSrc": "1487:17:2",
																		"nodeType": "YulFunctionCall",
																		"src": "1487:17:2"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bool_to_t_bool_fromStack",
																	"nativeSrc": "1440:37:2",
																	"nodeType": "YulIdentifier",
																	"src": "1440:37:2"
																},
																"nativeSrc": "1440:65:2",
																"nodeType": "YulFunctionCall",
																"src": "1440:65:2"
															},
															"nativeSrc": "1440:65:2",
															"nodeType": "YulExpressionStatement",
															"src": "1440:65:2"
														}
													]
												},
												"name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
												"nativeSrc": "1302:210:2",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1366:9:2",
														"nodeType": "YulTypedName",
														"src": "1366:9:2",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1378:6:2",
														"nodeType": "YulTypedName",
														"src": "1378:6:2",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1389:4:2",
														"nodeType": "YulTypedName",
														"src": "1389:4:2",
														"type": ""
													}
												],
												"src": "1302:210:2"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_bytes4(value) -> cleaned {\n        cleaned := and(value, 0xffffffff00000000000000000000000000000000000000000000000000000000)\n    }\n\n    function validator_revert_t_bytes4(value) {\n        if iszero(eq(value, cleanup_t_bytes4(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bytes4(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bytes4(value)\n    }\n\n    function abi_decode_tuple_t_bytes4(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_bytes4(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n}\n",
									"id": 2,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610034575f3560e01c806301ffc9a714610038578063f8a8fd6d14610068575b5f80fd5b610052600480360381019061004d9190610146565b610086565b60405161005f919061018b565b60405180910390f35b6100706100e9565b60405161007d919061018b565b60405180910390f35b5f805f837bffffffffffffffffffffffffffffffffffffffffffffffffffffffff19167bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019081526020015f205f9054906101000a900460ff169050919050565b5f90565b5f80fd5b5f7fffffffff0000000000000000000000000000000000000000000000000000000082169050919050565b610125816100f1565b811461012f575f80fd5b50565b5f813590506101408161011c565b92915050565b5f6020828403121561015b5761015a6100ed565b5b5f61016884828501610132565b91505092915050565b5f8115159050919050565b61018581610171565b82525050565b5f60208201905061019e5f83018461017c565b9291505056fea264697066735822122063012b1eb2e65a076dff51e409974f183f424ac5301639e8f3f33417025abb0c64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x1FFC9A7 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0xF8A8FD6D EQ PUSH2 0x68 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x52 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4D SWAP2 SWAP1 PUSH2 0x146 JUMP JUMPDEST PUSH2 0x86 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x5F SWAP2 SWAP1 PUSH2 0x18B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x70 PUSH2 0xE9 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x7D SWAP2 SWAP1 PUSH2 0x18B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH0 DUP1 PUSH0 DUP4 PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND PUSH28 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF NOT AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH0 KECCAK256 PUSH0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 SWAP1 JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 PUSH32 0xFFFFFFFF00000000000000000000000000000000000000000000000000000000 DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x125 DUP2 PUSH2 0xF1 JUMP JUMPDEST DUP2 EQ PUSH2 0x12F JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x140 DUP2 PUSH2 0x11C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x15B JUMPI PUSH2 0x15A PUSH2 0xED JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x168 DUP5 DUP3 DUP6 ADD PUSH2 0x132 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x185 DUP2 PUSH2 0x171 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x19E PUSH0 DUP4 ADD DUP5 PUSH2 0x17C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH4 0x12B1EB2 0xE6 GAS SMOD PUSH14 0xFF51E409974F183F424AC5301639 0xE8 RETURN RETURN CALLVALUE OR MUL GAS 0xBB 0xC PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "162:775:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;555:137;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;893:42;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;555:137;625:4;652:20;:33;673:11;652:33;;;;;;;;;;;;;;;;;;;;;;;;;;;645:40;;555:137;;;:::o;893:42::-;927:4;893:42;:::o;88:117:2:-;197:1;194;187:12;334:149;370:7;410:66;403:5;399:78;388:89;;334:149;;;:::o;489:120::-;561:23;578:5;561:23;:::i;:::-;554:5;551:34;541:62;;599:1;596;589:12;541:62;489:120;:::o;615:137::-;660:5;698:6;685:20;676:29;;714:32;740:5;714:32;:::i;:::-;615:137;;;;:::o;758:327::-;816:6;865:2;853:9;844:7;840:23;836:32;833:119;;;871:79;;:::i;:::-;833:119;991:1;1016:52;1060:7;1051:6;1040:9;1036:22;1016:52;:::i;:::-;1006:62;;962:116;758:327;;;;:::o;1091:90::-;1125:7;1168:5;1161:13;1154:21;1143:32;;1091:90;;;:::o;1187:109::-;1268:21;1283:5;1268:21;:::i;:::-;1263:3;1256:34;1187:109;;:::o;1302:210::-;1389:4;1427:2;1416:9;1412:18;1404:26;;1440:65;1502:1;1491:9;1487:17;1478:6;1440:65;:::i;:::-;1302:210;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "94800",
								"executionCost": "infinite",
								"totalCost": "infinite"
							},
							"external": {
								"supportsInterface(bytes4)": "2812",
								"test()": "330"
							},
							"internal": {
								"_registerInterface(bytes4)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 162,
									"end": 937,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 162,
									"end": 937,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 162,
									"end": 937,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 403,
									"end": 549,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 403,
									"end": 549,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 403,
									"end": 549,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 403,
									"end": 549,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 403,
									"end": 549,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 403,
									"end": 549,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 403,
									"end": 549,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 403,
									"end": 549,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 403,
									"end": 549,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 403,
									"end": 549,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 403,
									"end": 549,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 426,
									"end": 466,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 328,
									"end": 338,
									"name": "PUSH",
									"source": 0,
									"value": "1FFC9A7"
								},
								{
									"begin": 445,
									"end": 465,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 445,
									"end": 465,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 426,
									"end": 444,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 426,
									"end": 444,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 426,
									"end": 444,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 426,
									"end": 466,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 426,
									"end": 466,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 426,
									"end": 466,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 426,
									"end": 466,
									"name": "tag",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 426,
									"end": 466,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 476,
									"end": 514,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 495,
									"end": 513,
									"name": "PUSH",
									"source": 0,
									"value": "F8A8FD6D"
								},
								{
									"begin": 495,
									"end": 513,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 495,
									"end": 513,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 476,
									"end": 494,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 476,
									"end": 494,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 476,
									"end": 494,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 476,
									"end": 514,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 476,
									"end": 514,
									"name": "SHR",
									"source": 0
								},
								{
									"begin": 476,
									"end": 514,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 476,
									"end": 514,
									"name": "tag",
									"source": 0,
									"value": "6"
								},
								{
									"begin": 476,
									"end": 514,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 162,
									"end": 937,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 162,
									"end": 937,
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 698,
									"end": 887,
									"name": "tag",
									"source": 0,
									"value": "5"
								},
								{
									"begin": 698,
									"end": 887,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 788,
									"end": 798,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFF"
								},
								{
									"begin": 773,
									"end": 798,
									"name": "PUSH",
									"source": 0,
									"value": "E0"
								},
								{
									"begin": 773,
									"end": 798,
									"name": "SHL",
									"source": 0
								},
								{
									"begin": 773,
									"end": 784,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 773,
									"end": 798,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 773,
									"end": 798,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 773,
									"end": 798,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 773,
									"end": 798,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 765,
									"end": 830,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 765,
									"end": 830,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 765,
									"end": 830,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 765,
									"end": 830,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 765,
									"end": 830,
									"name": "PUSH",
									"source": 0,
									"value": "8C379A000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 765,
									"end": 830,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 765,
									"end": 830,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 765,
									"end": 830,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 765,
									"end": 830,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 765,
									"end": 830,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 765,
									"end": 830,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 765,
									"end": 830,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "11"
								},
								{
									"begin": 765,
									"end": 830,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 765,
									"end": 830,
									"name": "tag",
									"source": 0,
									"value": "10"
								},
								{
									"begin": 765,
									"end": 830,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 765,
									"end": 830,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 765,
									"end": 830,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 765,
									"end": 830,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 765,
									"end": 830,
									"name": "SWAP2",
									"source": 0
								},
								{
									"begin": 765,
									"end": 830,
									"name": "SUB",
									"source": 0
								},
								{
									"begin": 765,
									"end": 830,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 765,
									"end": 830,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 765,
									"end": 830,
									"name": "tag",
									"source": 0,
									"value": "9"
								},
								{
									"begin": 765,
									"end": 830,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 876,
									"end": 880,
									"name": "PUSH",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 840,
									"end": 860,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 840,
									"end": 873,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 861,
									"end": 872,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 840,
									"end": 873,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 840,
									"end": 873,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 840,
									"end": 873,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 840,
									"end": 873,
									"name": "PUSH",
									"source": 0,
									"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
								},
								{
									"begin": 840,
									"end": 873,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 840,
									"end": 873,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 840,
									"end": 873,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 840,
									"end": 873,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 840,
									"end": 873,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 840,
									"end": 873,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 840,
									"end": 873,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 840,
									"end": 873,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 840,
									"end": 873,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 840,
									"end": 873,
									"name": "PUSH",
									"source": 0,
									"value": "20"
								},
								{
									"begin": 840,
									"end": 873,
									"name": "ADD",
									"source": 0
								},
								{
									"begin": 840,
									"end": 873,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 840,
									"end": 873,
									"name": "KECCAK256",
									"source": 0
								},
								{
									"begin": 840,
									"end": 873,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 840,
									"end": 880,
									"name": "PUSH",
									"source": 0,
									"value": "100"
								},
								{
									"begin": 840,
									"end": 880,
									"name": "EXP",
									"source": 0
								},
								{
									"begin": 840,
									"end": 880,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 840,
									"end": 880,
									"name": "SLOAD",
									"source": 0
								},
								{
									"begin": 840,
									"end": 880,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 840,
									"end": 880,
									"name": "PUSH",
									"source": 0,
									"value": "FF"
								},
								{
									"begin": 840,
									"end": 880,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 840,
									"end": 880,
									"name": "NOT",
									"source": 0
								},
								{
									"begin": 840,
									"end": 880,
									"name": "AND",
									"source": 0
								},
								{
									"begin": 840,
									"end": 880,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 840,
									"end": 880,
									"name": "DUP4",
									"source": 0
								},
								{
									"begin": 840,
									"end": 880,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 840,
									"end": 880,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 840,
									"end": 880,
									"name": "MUL",
									"source": 0
								},
								{
									"begin": 840,
									"end": 880,
									"name": "OR",
									"source": 0
								},
								{
									"begin": 840,
									"end": 880,
									"name": "SWAP1",
									"source": 0
								},
								{
									"begin": 840,
									"end": 880,
									"name": "SSTORE",
									"source": 0
								},
								{
									"begin": 840,
									"end": 880,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 698,
									"end": 887,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 698,
									"end": 887,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 0
								},
								{
									"begin": 7,
									"end": 176,
									"name": "tag",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 7,
									"end": 176,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 91,
									"end": 102,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 125,
									"end": 131,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 120,
									"end": 123,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 113,
									"end": 132,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 165,
									"end": 169,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 160,
									"end": 163,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 156,
									"end": 170,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 141,
									"end": 170,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 141,
									"end": 170,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 176,
									"name": "SWAP3",
									"source": 2
								},
								{
									"begin": 7,
									"end": 176,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 7,
									"end": 176,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 176,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 7,
									"end": 176,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 182,
									"end": 359,
									"name": "tag",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 182,
									"end": 359,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 322,
									"end": 351,
									"name": "PUSH",
									"source": 2,
									"value": "4552433136353A20696E76616C696420696E7465726661636569640000000000"
								},
								{
									"begin": 318,
									"end": 319,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 310,
									"end": 316,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 306,
									"end": 320,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 299,
									"end": 352,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 182,
									"end": 359,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 182,
									"end": 359,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 365,
									"end": 731,
									"name": "tag",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 365,
									"end": 731,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 507,
									"end": 510,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 528,
									"end": 595,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 592,
									"end": 594,
									"name": "PUSH",
									"source": 2,
									"value": "1B"
								},
								{
									"begin": 587,
									"end": 590,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 528,
									"end": 595,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "12"
								},
								{
									"begin": 528,
									"end": 595,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 528,
									"end": 595,
									"name": "tag",
									"source": 2,
									"value": "19"
								},
								{
									"begin": 528,
									"end": 595,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 521,
									"end": 595,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 521,
									"end": 595,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 604,
									"end": 697,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 693,
									"end": 696,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 604,
									"end": 697,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "13"
								},
								{
									"begin": 604,
									"end": 697,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 604,
									"end": 697,
									"name": "tag",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 604,
									"end": 697,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 722,
									"end": 724,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 717,
									"end": 720,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 713,
									"end": 725,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 706,
									"end": 725,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 706,
									"end": 725,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 365,
									"end": 731,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 365,
									"end": 731,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 365,
									"end": 731,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 365,
									"end": 731,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 737,
									"end": 1156,
									"name": "tag",
									"source": 2,
									"value": "11"
								},
								{
									"begin": 737,
									"end": 1156,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 903,
									"end": 907,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 941,
									"end": 943,
									"name": "PUSH",
									"source": 2,
									"value": "20"
								},
								{
									"begin": 930,
									"end": 939,
									"name": "DUP3",
									"source": 2
								},
								{
									"begin": 926,
									"end": 944,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 918,
									"end": 944,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 918,
									"end": 944,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 990,
									"end": 999,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 984,
									"end": 988,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 980,
									"end": 1000,
									"name": "SUB",
									"source": 2
								},
								{
									"begin": 976,
									"end": 977,
									"name": "PUSH",
									"source": 2,
									"value": "0"
								},
								{
									"begin": 965,
									"end": 974,
									"name": "DUP4",
									"source": 2
								},
								{
									"begin": 961,
									"end": 978,
									"name": "ADD",
									"source": 2
								},
								{
									"begin": 954,
									"end": 1001,
									"name": "MSTORE",
									"source": 2
								},
								{
									"begin": 1018,
									"end": 1149,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 1144,
									"end": 1148,
									"name": "DUP2",
									"source": 2
								},
								{
									"begin": 1018,
									"end": 1149,
									"name": "PUSH [tag]",
									"source": 2,
									"value": "14"
								},
								{
									"begin": 1018,
									"end": 1149,
									"jumpType": "[in]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 1018,
									"end": 1149,
									"name": "tag",
									"source": 2,
									"value": "22"
								},
								{
									"begin": 1018,
									"end": 1149,
									"name": "JUMPDEST",
									"source": 2
								},
								{
									"begin": 1010,
									"end": 1149,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 1010,
									"end": 1149,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 737,
									"end": 1156,
									"name": "SWAP2",
									"source": 2
								},
								{
									"begin": 737,
									"end": 1156,
									"name": "SWAP1",
									"source": 2
								},
								{
									"begin": 737,
									"end": 1156,
									"name": "POP",
									"source": 2
								},
								{
									"begin": 737,
									"end": 1156,
									"jumpType": "[out]",
									"name": "JUMP",
									"source": 2
								},
								{
									"begin": 162,
									"end": 937,
									"name": "tag",
									"source": 0,
									"value": "7"
								},
								{
									"begin": 162,
									"end": 937,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 162,
									"end": 937,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 162,
									"end": 937,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 162,
									"end": 937,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 162,
									"end": 937,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 162,
									"end": 937,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 162,
									"end": 937,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 162,
									"end": 937,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122063012b1eb2e65a076dff51e409974f183f424ac5301639e8f3f33417025abb0c64736f6c634300081a0033",
									".code": [
										{
											"begin": 162,
											"end": 937,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 162,
											"end": 937,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 162,
											"end": 937,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 162,
											"end": 937,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 162,
											"end": 937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 162,
											"end": 937,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 162,
											"end": 937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 162,
											"end": 937,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 162,
											"end": 937,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 162,
											"end": 937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 162,
											"end": 937,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 162,
											"end": 937,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 162,
											"end": 937,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 162,
											"end": 937,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 162,
											"end": 937,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 162,
											"end": 937,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 162,
											"end": 937,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 162,
											"end": 937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 162,
											"end": 937,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 162,
											"end": 937,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 162,
											"end": 937,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 162,
											"end": 937,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 162,
											"end": 937,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 162,
											"end": 937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 162,
											"end": 937,
											"name": "PUSH",
											"source": 0,
											"value": "1FFC9A7"
										},
										{
											"begin": 162,
											"end": 937,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 162,
											"end": 937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 162,
											"end": 937,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 162,
											"end": 937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 162,
											"end": 937,
											"name": "PUSH",
											"source": 0,
											"value": "F8A8FD6D"
										},
										{
											"begin": 162,
											"end": 937,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 162,
											"end": 937,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 162,
											"end": 937,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 162,
											"end": 937,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 162,
											"end": 937,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 162,
											"end": 937,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 162,
											"end": 937,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 162,
											"end": 937,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 555,
											"end": 692,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 555,
											"end": 692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 555,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 555,
											"end": 692,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 555,
											"end": 692,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 555,
											"end": 692,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 555,
											"end": 692,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 555,
											"end": 692,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 555,
											"end": 692,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 555,
											"end": 692,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 555,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 555,
											"end": 692,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 555,
											"end": 692,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 555,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 555,
											"end": 692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 555,
											"end": 692,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 555,
											"end": 692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 555,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 555,
											"end": 692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 555,
											"end": 692,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 555,
											"end": 692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 555,
											"end": 692,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 555,
											"end": 692,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 555,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 555,
											"end": 692,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 555,
											"end": 692,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 555,
											"end": 692,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 555,
											"end": 692,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 555,
											"end": 692,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 555,
											"end": 692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 555,
											"end": 692,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 555,
											"end": 692,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 555,
											"end": 692,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 555,
											"end": 692,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 555,
											"end": 692,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 555,
											"end": 692,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 555,
											"end": 692,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 893,
											"end": 935,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 893,
											"end": 935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 893,
											"end": 935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 893,
											"end": 935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 893,
											"end": 935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 893,
											"end": 935,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 893,
											"end": 935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 893,
											"end": 935,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 893,
											"end": 935,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 893,
											"end": 935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 893,
											"end": 935,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 893,
											"end": 935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 893,
											"end": 935,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 893,
											"end": 935,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 893,
											"end": 935,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 893,
											"end": 935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 893,
											"end": 935,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 893,
											"end": 935,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 893,
											"end": 935,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 893,
											"end": 935,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 893,
											"end": 935,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 893,
											"end": 935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 893,
											"end": 935,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 555,
											"end": 692,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 555,
											"end": 692,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 625,
											"end": 629,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 652,
											"end": 672,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 652,
											"end": 685,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 673,
											"end": 684,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 652,
											"end": 685,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 652,
											"end": 685,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 652,
											"end": 685,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 652,
											"end": 685,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 652,
											"end": 685,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 652,
											"end": 685,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 652,
											"end": 685,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 652,
											"end": 685,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 652,
											"end": 685,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 652,
											"end": 685,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 652,
											"end": 685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 652,
											"end": 685,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 652,
											"end": 685,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 652,
											"end": 685,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 652,
											"end": 685,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 652,
											"end": 685,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 652,
											"end": 685,
											"name": "KECCAK256",
											"source": 0
										},
										{
											"begin": 652,
											"end": 685,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 652,
											"end": 685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 652,
											"end": 685,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 652,
											"end": 685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 652,
											"end": 685,
											"name": "PUSH",
											"source": 0,
											"value": "100"
										},
										{
											"begin": 652,
											"end": 685,
											"name": "EXP",
											"source": 0
										},
										{
											"begin": 652,
											"end": 685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 652,
											"end": 685,
											"name": "DIV",
											"source": 0
										},
										{
											"begin": 652,
											"end": 685,
											"name": "PUSH",
											"source": 0,
											"value": "FF"
										},
										{
											"begin": 652,
											"end": 685,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 645,
											"end": 685,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 645,
											"end": 685,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 555,
											"end": 692,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 555,
											"end": 692,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 555,
											"end": 692,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 555,
											"end": 692,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 893,
											"end": 935,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 893,
											"end": 935,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 927,
											"end": 931,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 893,
											"end": 935,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 893,
											"end": 935,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 334,
											"end": 483,
											"name": "tag",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 334,
											"end": 483,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 370,
											"end": 377,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 410,
											"end": 476,
											"name": "PUSH",
											"source": 2,
											"value": "FFFFFFFF00000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 403,
											"end": 408,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 399,
											"end": 477,
											"name": "AND",
											"source": 2
										},
										{
											"begin": 388,
											"end": 477,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 388,
											"end": 477,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 334,
											"end": 483,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 334,
											"end": 483,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 334,
											"end": 483,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 489,
											"end": 609,
											"name": "tag",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 489,
											"end": 609,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 578,
											"end": 583,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 561,
											"end": 584,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "19"
										},
										{
											"begin": 561,
											"end": 584,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 561,
											"end": 584,
											"name": "tag",
											"source": 2,
											"value": "30"
										},
										{
											"begin": 561,
											"end": 584,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 554,
											"end": 559,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 551,
											"end": 585,
											"name": "EQ",
											"source": 2
										},
										{
											"begin": 541,
											"end": 603,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 599,
											"end": 600,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 596,
											"end": 597,
											"name": "DUP1",
											"source": 2
										},
										{
											"begin": 589,
											"end": 601,
											"name": "REVERT",
											"source": 2
										},
										{
											"begin": 541,
											"end": 603,
											"name": "tag",
											"source": 2,
											"value": "31"
										},
										{
											"begin": 541,
											"end": 603,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 489,
											"end": 609,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 489,
											"end": 609,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 615,
											"end": 752,
											"name": "tag",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 615,
											"end": 752,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 660,
											"end": 665,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 698,
											"end": 704,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 685,
											"end": 705,
											"name": "CALLDATALOAD",
											"source": 2
										},
										{
											"begin": 676,
											"end": 705,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 676,
											"end": 705,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 740,
											"end": 745,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 714,
											"end": 746,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 714,
											"end": 746,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 714,
											"end": 746,
											"name": "tag",
											"source": 2,
											"value": "33"
										},
										{
											"begin": 714,
											"end": 746,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 615,
											"end": 752,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 615,
											"end": 752,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 615,
											"end": 752,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "tag",
											"source": 2,
											"value": "7"
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 816,
											"end": 822,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 865,
											"end": 867,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 853,
											"end": 862,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 844,
											"end": 851,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 840,
											"end": 863,
											"name": "SUB",
											"source": 2
										},
										{
											"begin": 836,
											"end": 868,
											"name": "SLT",
											"source": 2
										},
										{
											"begin": 833,
											"end": 952,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 833,
											"end": 952,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPI",
											"source": 2
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "17"
										},
										{
											"begin": 871,
											"end": 950,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 871,
											"end": 950,
											"name": "tag",
											"source": 2,
											"value": "36"
										},
										{
											"begin": 871,
											"end": 950,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 833,
											"end": 952,
											"name": "tag",
											"source": 2,
											"value": "35"
										},
										{
											"begin": 833,
											"end": 952,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 991,
											"end": 992,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1060,
											"end": 1067,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1051,
											"end": 1057,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1040,
											"end": 1049,
											"name": "DUP6",
											"source": 2
										},
										{
											"begin": 1036,
											"end": 1058,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "21"
										},
										{
											"begin": 1016,
											"end": 1068,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "tag",
											"source": 2,
											"value": "37"
										},
										{
											"begin": 1016,
											"end": 1068,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1006,
											"end": 1068,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 962,
											"end": 1078,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 758,
											"end": 1085,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 758,
											"end": 1085,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "tag",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1125,
											"end": 1132,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1168,
											"end": 1173,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1161,
											"end": 1174,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1154,
											"end": 1175,
											"name": "ISZERO",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1143,
											"end": 1175,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1091,
											"end": 1181,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1091,
											"end": 1181,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "tag",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1283,
											"end": 1288,
											"name": "DUP2",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "22"
										},
										{
											"begin": 1268,
											"end": 1289,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "tag",
											"source": 2,
											"value": "40"
										},
										{
											"begin": 1268,
											"end": 1289,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1263,
											"end": 1266,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1256,
											"end": 1290,
											"name": "MSTORE",
											"source": 2
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1187,
											"end": 1296,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1187,
											"end": 1296,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "tag",
											"source": 2,
											"value": "10"
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1389,
											"end": 1393,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1427,
											"end": 1429,
											"name": "PUSH",
											"source": 2,
											"value": "20"
										},
										{
											"begin": 1416,
											"end": 1425,
											"name": "DUP3",
											"source": 2
										},
										{
											"begin": 1412,
											"end": 1430,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "SWAP1",
											"source": 2
										},
										{
											"begin": 1404,
											"end": 1430,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1502,
											"end": 1503,
											"name": "PUSH",
											"source": 2,
											"value": "0"
										},
										{
											"begin": 1491,
											"end": 1500,
											"name": "DUP4",
											"source": 2
										},
										{
											"begin": 1487,
											"end": 1504,
											"name": "ADD",
											"source": 2
										},
										{
											"begin": 1478,
											"end": 1484,
											"name": "DUP5",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "PUSH [tag]",
											"source": 2,
											"value": "23"
										},
										{
											"begin": 1440,
											"end": 1505,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 2
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "tag",
											"source": 2,
											"value": "42"
										},
										{
											"begin": 1440,
											"end": 1505,
											"name": "JUMPDEST",
											"source": 2
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP3",
											"source": 2
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "SWAP2",
											"source": 2
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1302,
											"end": 1512,
											"name": "POP",
											"source": 2
										},
										{
											"begin": 1302,
											"end": 1512,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 2
										}
									]
								}
							},
							"sourceList": [
								"homework/03/ERC165/ERC165Reg.sol",
								"homework/03/ERC165/IERC165.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7",
							"test()": "f8a8fd6d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"homework/03/ERC165/ERC165Reg.sol\":\"ERC165Reg\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"homework/03/ERC165/ERC165Reg.sol\":{\"keccak256\":\"0x165b139a20e31bcec42e34631a41cfdae2b80d7645c657fb3ce6d9cac05950eb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://429d557c2acc8c97ab4956d025916c4b787784642d5c627bebbf1cce30f64a5c\",\"dweb:/ipfs/QmeQkt7oe7yMCg1tj8rzpgzy2pTSLSF8epFuy7yLZJNZze\"]},\"homework/03/ERC165/IERC165.sol\":{\"keccak256\":\"0xa09e61208af487501c145473043c27a45645ac232bad793708857008e3418ec6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad34c87e0d889b8895c5e6ba6f1cd5af8e2f5ab781ef4619c020da9c2691f889\",\"dweb:/ipfs/Qmct7c91ccCDafChZuNDv3ZyTa8ZaYPWRrYrKWxVykqpSL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 11,
								"contract": "homework/03/ERC165/ERC165Reg.sol:ERC165Reg",
								"label": "_supportedInterfaces",
								"offset": 0,
								"slot": "0",
								"type": "t_mapping(t_bytes4,t_bool)"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							},
							"t_bytes4": {
								"encoding": "inplace",
								"label": "bytes4",
								"numberOfBytes": "4"
							},
							"t_mapping(t_bytes4,t_bool)": {
								"encoding": "mapping",
								"key": "t_bytes4",
								"label": "mapping(bytes4 => bool)",
								"numberOfBytes": "32",
								"value": "t_bool"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			},
			"homework/03/ERC165/IERC165.sol": {
				"IERC165": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "bytes4",
									"name": "interfaceID",
									"type": "bytes4"
								}
							],
							"name": "supportsInterface",
							"outputs": [
								{
									"internalType": "bool",
									"name": "",
									"type": "bool"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"supportsInterface(bytes4)": "01ffc9a7"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceID\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"homework/03/ERC165/IERC165.sol\":\"IERC165\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"homework/03/ERC165/IERC165.sol\":{\"keccak256\":\"0xa09e61208af487501c145473043c27a45645ac232bad793708857008e3418ec6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ad34c87e0d889b8895c5e6ba6f1cd5af8e2f5ab781ef4619c020da9c2691f889\",\"dweb:/ipfs/Qmct7c91ccCDafChZuNDv3ZyTa8ZaYPWRrYrKWxVykqpSL\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "5805",
				"formattedMessage": "Warning: \"this\" used in constructor. Note that external functions of a contract cannot be called while it is being constructed.\n  --> homework/03/ERC165/ERC165Reg.sol:15:28:\n   |\n15 |         _registerInterface(this.test.selector); // 注册合约对外接口\n   |                            ^^^^\n\n",
				"message": "\"this\" used in constructor. Note that external functions of a contract cannot be called while it is being constructed.",
				"severity": "warning",
				"sourceLocation": {
					"end": 499,
					"file": "homework/03/ERC165/ERC165Reg.sol",
					"start": 495
				},
				"type": "Warning"
			}
		],
		"sources": {
			"homework/03/ERC165/ERC165Reg.sol": {
				"ast": {
					"absolutePath": "homework/03/ERC165/ERC165Reg.sol",
					"exportedSymbols": {
						"ERC165Reg": [
							63
						],
						"IERC165": [
							73
						]
					},
					"id": 64,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "112:24:0"
						},
						{
							"absolutePath": "homework/03/ERC165/IERC165.sol",
							"file": "./IERC165.sol",
							"id": 2,
							"nameLocation": "-1:-1:-1",
							"nodeType": "ImportDirective",
							"scope": 64,
							"sourceUnit": 74,
							"src": "137:23:0",
							"symbolAliases": [],
							"unitAlias": ""
						},
						{
							"abstract": false,
							"baseContracts": [
								{
									"baseName": {
										"id": 3,
										"name": "IERC165",
										"nameLocations": [
											"184:7:0"
										],
										"nodeType": "IdentifierPath",
										"referencedDeclaration": 73,
										"src": "184:7:0"
									},
									"id": 4,
									"nodeType": "InheritanceSpecifier",
									"src": "184:7:0"
								}
							],
							"canonicalName": "ERC165Reg",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 63,
							"linearizedBaseContracts": [
								63,
								73
							],
							"name": "ERC165Reg",
							"nameLocation": "171:9:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 7,
									"mutability": "constant",
									"name": "_INTERFACE_ID_ERC165",
									"nameLocation": "305:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 63,
									"src": "281:57:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes4",
										"typeString": "bytes4"
									},
									"typeName": {
										"id": 5,
										"name": "bytes4",
										"nodeType": "ElementaryTypeName",
										"src": "281:6:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes4",
											"typeString": "bytes4"
										}
									},
									"value": {
										"hexValue": "30783031666663396137",
										"id": 6,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "328:10:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_33540519_by_1",
											"typeString": "int_const 33540519"
										},
										"value": "0x01ffc9a7"
									},
									"visibility": "private"
								},
								{
									"constant": false,
									"id": 11,
									"mutability": "mutable",
									"name": "_supportedInterfaces",
									"nameLocation": "376:20:0",
									"nodeType": "VariableDeclaration",
									"scope": 63,
									"src": "344:52:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
										"typeString": "mapping(bytes4 => bool)"
									},
									"typeName": {
										"id": 10,
										"keyName": "",
										"keyNameLocation": "-1:-1:-1",
										"keyType": {
											"id": 8,
											"name": "bytes4",
											"nodeType": "ElementaryTypeName",
											"src": "352:6:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bytes4",
												"typeString": "bytes4"
											}
										},
										"nodeType": "Mapping",
										"src": "344:23:0",
										"typeDescriptions": {
											"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
											"typeString": "mapping(bytes4 => bool)"
										},
										"valueName": "",
										"valueNameLocation": "-1:-1:-1",
										"valueType": {
											"id": 9,
											"name": "bool",
											"nodeType": "ElementaryTypeName",
											"src": "362:4:0",
											"typeDescriptions": {
												"typeIdentifier": "t_bool",
												"typeString": "bool"
											}
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "416:133:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 15,
															"name": "_INTERFACE_ID_ERC165",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "445:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"id": 14,
														"name": "_registerInterface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "426:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
															"typeString": "function (bytes4)"
														}
													},
													"id": 16,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "426:40:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 17,
												"nodeType": "ExpressionStatement",
												"src": "426:40:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"expression": {
																"expression": {
																	"id": 19,
																	"name": "this",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 4294967268,
																	"src": "495:4:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_contract$_ERC165Reg_$63",
																		"typeString": "contract ERC165Reg"
																	}
																},
																"id": 20,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"memberLocation": "500:4:0",
																"memberName": "test",
																"nodeType": "MemberAccess",
																"referencedDeclaration": 62,
																"src": "495:9:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_function_external_nonpayable$__$returns$_t_bool_$",
																	"typeString": "function () external returns (bool)"
																}
															},
															"id": 21,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"lValueRequested": false,
															"memberLocation": "505:8:0",
															"memberName": "selector",
															"nodeType": "MemberAccess",
															"src": "495:18:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														],
														"id": 18,
														"name": "_registerInterface",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 56,
														"src": "476:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_internal_nonpayable$_t_bytes4_$returns$__$",
															"typeString": "function (bytes4)"
														}
													},
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "476:38:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "476:38:0"
											}
										]
									},
									"id": 25,
									"implemented": true,
									"kind": "constructor",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 12,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "414:2:0"
									},
									"returnParameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "416:0:0"
									},
									"scope": 63,
									"src": "403:146:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								},
								{
									"baseFunctions": [
										72
									],
									"body": {
										"id": 36,
										"nodeType": "Block",
										"src": "635:57:0",
										"statements": [
											{
												"expression": {
													"baseExpression": {
														"id": 32,
														"name": "_supportedInterfaces",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 11,
														"src": "652:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
															"typeString": "mapping(bytes4 => bool)"
														}
													},
													"id": 34,
													"indexExpression": {
														"id": 33,
														"name": "interfaceId",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 27,
														"src": "673:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes4",
															"typeString": "bytes4"
														}
													},
													"isConstant": false,
													"isLValue": true,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "IndexAccess",
													"src": "652:33:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"functionReturnParameters": 31,
												"id": 35,
												"nodeType": "Return",
												"src": "645:40:0"
											}
										]
									},
									"functionSelector": "01ffc9a7",
									"id": 37,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "564:17:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "589:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "582:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 26,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "582:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "581:20:0"
									},
									"returnParameters": {
										"id": 31,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 30,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "625:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 29,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "625:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "624:6:0"
									},
									"scope": 63,
									"src": "555:137:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 55,
										"nodeType": "Block",
										"src": "755:132:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"commonType": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															},
															"id": 45,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"leftExpression": {
																"id": 43,
																"name": "interfaceId",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 39,
																"src": "773:11:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bytes4",
																	"typeString": "bytes4"
																}
															},
															"nodeType": "BinaryOperation",
															"operator": "!=",
															"rightExpression": {
																"hexValue": "30786666666666666666",
																"id": 44,
																"isConstant": false,
																"isLValue": false,
																"isPure": true,
																"kind": "number",
																"lValueRequested": false,
																"nodeType": "Literal",
																"src": "788:10:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_rational_4294967295_by_1",
																	"typeString": "int_const 4294967295"
																},
																"value": "0xffffffff"
															},
															"src": "773:25:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														},
														{
															"hexValue": "4552433136353a20696e76616c696420696e746572666163656964",
															"id": 46,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "string",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "800:29:0",
															"typeDescriptions": {
																"typeIdentifier": "t_stringliteral_0748490a4ff26a6fb2e87cf23706c4130b337b0a1d281f07718c8e444679e7e6",
																"typeString": "literal_string \"ERC165: invalid interfaceid\""
															},
															"value": "ERC165: invalid interfaceid"
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															},
															{
																"typeIdentifier": "t_stringliteral_0748490a4ff26a6fb2e87cf23706c4130b337b0a1d281f07718c8e444679e7e6",
																"typeString": "literal_string \"ERC165: invalid interfaceid\""
															}
														],
														"id": 42,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "765:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
															"typeString": "function (bool,string memory) pure"
														}
													},
													"id": 47,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "765:65:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 48,
												"nodeType": "ExpressionStatement",
												"src": "765:65:0"
											},
											{
												"expression": {
													"id": 53,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"baseExpression": {
															"id": 49,
															"name": "_supportedInterfaces",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 11,
															"src": "840:20:0",
															"typeDescriptions": {
																"typeIdentifier": "t_mapping$_t_bytes4_$_t_bool_$",
																"typeString": "mapping(bytes4 => bool)"
															}
														},
														"id": 51,
														"indexExpression": {
															"id": 50,
															"name": "interfaceId",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 39,
															"src": "861:11:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes4",
																"typeString": "bytes4"
															}
														},
														"isConstant": false,
														"isLValue": true,
														"isPure": false,
														"lValueRequested": true,
														"nodeType": "IndexAccess",
														"src": "840:33:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 52,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "876:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "840:40:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 54,
												"nodeType": "ExpressionStatement",
												"src": "840:40:0"
											}
										]
									},
									"id": 56,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "_registerInterface",
									"nameLocation": "707:18:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 40,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 39,
												"mutability": "mutable",
												"name": "interfaceId",
												"nameLocation": "733:11:0",
												"nodeType": "VariableDeclaration",
												"scope": 56,
												"src": "726:18:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 38,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "726:6:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "725:20:0"
									},
									"returnParameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "755:0:0"
									},
									"scope": 63,
									"src": "698:189:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 61,
										"nodeType": "Block",
										"src": "933:2:0",
										"statements": []
									},
									"functionSelector": "f8a8fd6d",
									"id": 62,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "test",
									"nameLocation": "902:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 57,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "906:2:0"
									},
									"returnParameters": {
										"id": 60,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 59,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 62,
												"src": "927:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 58,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "927:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "926:6:0"
									},
									"scope": 63,
									"src": "893:42:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 64,
							"src": "162:775:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "112:826:0"
				},
				"id": 0
			},
			"homework/03/ERC165/IERC165.sol": {
				"ast": {
					"absolutePath": "homework/03/ERC165/IERC165.sol",
					"exportedSymbols": {
						"IERC165": [
							73
						]
					},
					"id": 74,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 65,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "114:24:1"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "IERC165",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 73,
							"linearizedBaseContracts": [
								73
							],
							"name": "IERC165",
							"nameLocation": "150:7:1",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "01ffc9a7",
									"id": 72,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "supportsInterface",
									"nameLocation": "220:17:1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 68,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 67,
												"mutability": "mutable",
												"name": "interfaceID",
												"nameLocation": "245:11:1",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "238:18:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bytes4",
													"typeString": "bytes4"
												},
												"typeName": {
													"id": 66,
													"name": "bytes4",
													"nodeType": "ElementaryTypeName",
													"src": "238:6:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bytes4",
														"typeString": "bytes4"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "237:20:1"
									},
									"returnParameters": {
										"id": 71,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 70,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 72,
												"src": "280:4:1",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_bool",
													"typeString": "bool"
												},
												"typeName": {
													"id": 69,
													"name": "bool",
													"nodeType": "ElementaryTypeName",
													"src": "280:4:1",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "279:6:1"
									},
									"scope": 73,
									"src": "211:75:1",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 74,
							"src": "140:149:1",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "114:177:1"
				},
				"id": 1
			}
		}
	}
}