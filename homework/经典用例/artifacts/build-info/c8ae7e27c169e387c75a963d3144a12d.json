{
	"id": "c8ae7e27c169e387c75a963d3144a12d",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.26",
	"solcLongVersion": "0.8.26+commit.8a97fa7a",
	"input": {
		"language": "Solidity",
		"sources": {
			"homework/经典用例/Storage.sol": {
				"content": "pragma solidity ^0.8.24;\n\ninterface ITest {\n    function val() external view returns (uint256);\n\n    function test() external;\n}\n\ncontract Callback {\n    uint256 public val;\n\n    fallback() external payable {\n        val = ITest(msg.sender).val();\n    }\n\n    function test(address target) external {\n        ITest(target).test();\n    }\n}\n\ncontract TestStorage {\n    uint256 public val;\n\n    function test() public {\n        val = 123;\n        bytes memory b = \"\";\n        msg.sender.call(b);\n    }\n}\n\ncontract TestTransientStorage {\n    bytes32 constant SLOT = 0;\n\n    function test() public {\n        assembly {\n            tstore(SLOT, 321)\n        }\n\n        bytes memory b = \"\";\n        msg.sender.call(b);\n    }\n}\n\ncontract ReentrancyGuard{\n    bool private  locked;\n    modifier lock(){\n        require(!locked);\n        locked = true;\n        _;\n        locked = false;\n    }\n}\n\n\ncontract ReentrancyGuardTransient{\n   bytes32 constant SLOT = 0;\n   modifier lock(){\n     assembly{\n        if tload(SLOT){revert(0,0)}\n        tstore(SLOT,1)\n     }\n     _;\n     assembly{\n        tstore(SLOT,0)\n     }\n   }\n   function test() external  lock{\n    bytes memory b = \"\";\n     msg.sender.call(b);\n   }\n}"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			},
			"remappings": []
		}
	},
	"output": {
		"contracts": {
			"homework/经典用例/Storage.sol": {
				"Callback": {
					"abi": [
						{
							"stateMutability": "payable",
							"type": "fallback"
						},
						{
							"inputs": [
								{
									"internalType": "address",
									"name": "target",
									"type": "address"
								}
							],
							"name": "test",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "val",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":130:337  contract Callback {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":130:337  contract Callback {... */\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3c6bb436\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xbb29998e\n      eq\n      tag_4\n      jumpi\n      jump(tag_2)\n    tag_1:\n    tag_2:\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":229:239  msg.sender */\n      caller\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":223:244  ITest(msg.sender).val */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0x3c6bb436\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":223:246  ITest(msg.sender).val() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x20\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      dup7\n      gas\n      staticcall\n      iszero\n      dup1\n      iszero\n      tag_8\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_8:\n      pop\n      pop\n      pop\n      pop\n      mload(0x40)\n      returndatasize\n      not(0x1f)\n      0x1f\n      dup3\n      add\n      and\n      dup3\n      add\n      dup1\n      0x40\n      mstore\n      pop\n      dup2\n      add\n      swap1\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":217:220  val */\n      0x00\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":217:246  val = ITest(msg.sender).val() */\n      dup2\n      swap1\n      sstore\n      stop\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":154:172  uint256 public val */\n    tag_3:\n      callvalue\n      dup1\n      iszero\n      tag_11\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_11:\n      pop\n      tag_12\n      tag_13\n      jump\t// in\n    tag_12:\n      mload(0x40)\n      tag_14\n      swap2\n      swap1\n      tag_15\n      jump\t// in\n    tag_14:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":259:335  function test(address target) external {... */\n    tag_4:\n      callvalue\n      dup1\n      iszero\n      tag_16\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_16:\n      pop\n      tag_17\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_18\n      swap2\n      swap1\n      tag_19\n      jump\t// in\n    tag_18:\n      tag_20\n      jump\t// in\n    tag_17:\n      stop\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":154:172  uint256 public val */\n    tag_13:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":259:335  function test(address target) external {... */\n    tag_20:\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":314:320  target */\n      dup1\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":308:326  ITest(target).test */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n      0xf8a8fd6d\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":308:328  ITest(target).test() */\n      mload(0x40)\n      dup2\n      0xffffffff\n      and\n      0xe0\n      shl\n      dup2\n      mstore\n      0x04\n      add\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup8\n      dup1\n      extcodesize\n      iszero\n      dup1\n      iszero\n      tag_22\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_22:\n      pop\n      gas\n      call\n      iszero\n      dup1\n      iszero\n      tag_24\n      jumpi\n      returndatasize\n      0x00\n      dup1\n      returndatacopy\n      revert(0x00, returndatasize)\n    tag_24:\n      pop\n      pop\n      pop\n      pop\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":259:335  function test(address target) external {... */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":88:205   */\n    tag_26:\n        /* \"#utility.yul\":197:198   */\n      0x00\n        /* \"#utility.yul\":194:195   */\n      dup1\n        /* \"#utility.yul\":187:199   */\n      revert\n        /* \"#utility.yul\":334:411   */\n    tag_28:\n        /* \"#utility.yul\":371:378   */\n      0x00\n        /* \"#utility.yul\":400:405   */\n      dup2\n        /* \"#utility.yul\":389:405   */\n      swap1\n      pop\n        /* \"#utility.yul\":334:411   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":417:539   */\n    tag_29:\n        /* \"#utility.yul\":490:514   */\n      tag_42\n        /* \"#utility.yul\":508:513   */\n      dup2\n        /* \"#utility.yul\":490:514   */\n      tag_28\n      jump\t// in\n    tag_42:\n        /* \"#utility.yul\":483:488   */\n      dup2\n        /* \"#utility.yul\":480:515   */\n      eq\n        /* \"#utility.yul\":470:533   */\n      tag_43\n      jumpi\n        /* \"#utility.yul\":529:530   */\n      0x00\n        /* \"#utility.yul\":526:527   */\n      dup1\n        /* \"#utility.yul\":519:531   */\n      revert\n        /* \"#utility.yul\":470:533   */\n    tag_43:\n        /* \"#utility.yul\":417:539   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":545:688   */\n    tag_30:\n        /* \"#utility.yul\":602:607   */\n      0x00\n        /* \"#utility.yul\":633:639   */\n      dup2\n        /* \"#utility.yul\":627:640   */\n      mload\n        /* \"#utility.yul\":618:640   */\n      swap1\n      pop\n        /* \"#utility.yul\":649:682   */\n      tag_45\n        /* \"#utility.yul\":676:681   */\n      dup2\n        /* \"#utility.yul\":649:682   */\n      tag_29\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":545:688   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":694:1045   */\n    tag_10:\n        /* \"#utility.yul\":764:770   */\n      0x00\n        /* \"#utility.yul\":813:815   */\n      0x20\n        /* \"#utility.yul\":801:810   */\n      dup3\n        /* \"#utility.yul\":792:799   */\n      dup5\n        /* \"#utility.yul\":788:811   */\n      sub\n        /* \"#utility.yul\":784:816   */\n      slt\n        /* \"#utility.yul\":781:900   */\n      iszero\n      tag_47\n      jumpi\n        /* \"#utility.yul\":819:898   */\n      tag_48\n      tag_26\n      jump\t// in\n    tag_48:\n        /* \"#utility.yul\":781:900   */\n    tag_47:\n        /* \"#utility.yul\":939:940   */\n      0x00\n        /* \"#utility.yul\":964:1028   */\n      tag_49\n        /* \"#utility.yul\":1020:1027   */\n      dup5\n        /* \"#utility.yul\":1011:1017   */\n      dup3\n        /* \"#utility.yul\":1000:1009   */\n      dup6\n        /* \"#utility.yul\":996:1018   */\n      add\n        /* \"#utility.yul\":964:1028   */\n      tag_30\n      jump\t// in\n    tag_49:\n        /* \"#utility.yul\":954:1028   */\n      swap2\n      pop\n        /* \"#utility.yul\":910:1038   */\n      pop\n        /* \"#utility.yul\":694:1045   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1051:1169   */\n    tag_31:\n        /* \"#utility.yul\":1138:1162   */\n      tag_51\n        /* \"#utility.yul\":1156:1161   */\n      dup2\n        /* \"#utility.yul\":1138:1162   */\n      tag_28\n      jump\t// in\n    tag_51:\n        /* \"#utility.yul\":1133:1136   */\n      dup3\n        /* \"#utility.yul\":1126:1163   */\n      mstore\n        /* \"#utility.yul\":1051:1169   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1175:1397   */\n    tag_15:\n        /* \"#utility.yul\":1268:1272   */\n      0x00\n        /* \"#utility.yul\":1306:1308   */\n      0x20\n        /* \"#utility.yul\":1295:1304   */\n      dup3\n        /* \"#utility.yul\":1291:1309   */\n      add\n        /* \"#utility.yul\":1283:1309   */\n      swap1\n      pop\n        /* \"#utility.yul\":1319:1390   */\n      tag_53\n        /* \"#utility.yul\":1387:1388   */\n      0x00\n        /* \"#utility.yul\":1376:1385   */\n      dup4\n        /* \"#utility.yul\":1372:1389   */\n      add\n        /* \"#utility.yul\":1363:1369   */\n      dup5\n        /* \"#utility.yul\":1319:1390   */\n      tag_31\n      jump\t// in\n    tag_53:\n        /* \"#utility.yul\":1175:1397   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1403:1529   */\n    tag_32:\n        /* \"#utility.yul\":1440:1447   */\n      0x00\n        /* \"#utility.yul\":1480:1522   */\n      0xffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1473:1478   */\n      dup3\n        /* \"#utility.yul\":1469:1523   */\n      and\n        /* \"#utility.yul\":1458:1523   */\n      swap1\n      pop\n        /* \"#utility.yul\":1403:1529   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1535:1631   */\n    tag_33:\n        /* \"#utility.yul\":1572:1579   */\n      0x00\n        /* \"#utility.yul\":1601:1625   */\n      tag_56\n        /* \"#utility.yul\":1619:1624   */\n      dup3\n        /* \"#utility.yul\":1601:1625   */\n      tag_32\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":1590:1625   */\n      swap1\n      pop\n        /* \"#utility.yul\":1535:1631   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1637:1759   */\n    tag_34:\n        /* \"#utility.yul\":1710:1734   */\n      tag_58\n        /* \"#utility.yul\":1728:1733   */\n      dup2\n        /* \"#utility.yul\":1710:1734   */\n      tag_33\n      jump\t// in\n    tag_58:\n        /* \"#utility.yul\":1703:1708   */\n      dup2\n        /* \"#utility.yul\":1700:1735   */\n      eq\n        /* \"#utility.yul\":1690:1753   */\n      tag_59\n      jumpi\n        /* \"#utility.yul\":1749:1750   */\n      0x00\n        /* \"#utility.yul\":1746:1747   */\n      dup1\n        /* \"#utility.yul\":1739:1751   */\n      revert\n        /* \"#utility.yul\":1690:1753   */\n    tag_59:\n        /* \"#utility.yul\":1637:1759   */\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1765:1904   */\n    tag_35:\n        /* \"#utility.yul\":1811:1816   */\n      0x00\n        /* \"#utility.yul\":1849:1855   */\n      dup2\n        /* \"#utility.yul\":1836:1856   */\n      calldataload\n        /* \"#utility.yul\":1827:1856   */\n      swap1\n      pop\n        /* \"#utility.yul\":1865:1898   */\n      tag_61\n        /* \"#utility.yul\":1892:1897   */\n      dup2\n        /* \"#utility.yul\":1865:1898   */\n      tag_34\n      jump\t// in\n    tag_61:\n        /* \"#utility.yul\":1765:1904   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1910:2239   */\n    tag_19:\n        /* \"#utility.yul\":1969:1975   */\n      0x00\n        /* \"#utility.yul\":2018:2020   */\n      0x20\n        /* \"#utility.yul\":2006:2015   */\n      dup3\n        /* \"#utility.yul\":1997:2004   */\n      dup5\n        /* \"#utility.yul\":1993:2016   */\n      sub\n        /* \"#utility.yul\":1989:2021   */\n      slt\n        /* \"#utility.yul\":1986:2105   */\n      iszero\n      tag_63\n      jumpi\n        /* \"#utility.yul\":2024:2103   */\n      tag_64\n      tag_26\n      jump\t// in\n    tag_64:\n        /* \"#utility.yul\":1986:2105   */\n    tag_63:\n        /* \"#utility.yul\":2144:2145   */\n      0x00\n        /* \"#utility.yul\":2169:2222   */\n      tag_65\n        /* \"#utility.yul\":2214:2221   */\n      dup5\n        /* \"#utility.yul\":2205:2211   */\n      dup3\n        /* \"#utility.yul\":2194:2203   */\n      dup6\n        /* \"#utility.yul\":2190:2212   */\n      add\n        /* \"#utility.yul\":2169:2222   */\n      tag_35\n      jump\t// in\n    tag_65:\n        /* \"#utility.yul\":2159:2222   */\n      swap2\n      pop\n        /* \"#utility.yul\":2115:2232   */\n      pop\n        /* \"#utility.yul\":1910:2239   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220ccb405f07d268ef93b2e1a329b42b5c80aecffeaf17793240322db770385954364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b5061029a8061001c5f395ff3fe60806040526004361061002c575f3560e01c80633c6bb436146100a0578063bb29998e146100ca5761002d565b5b3373ffffffffffffffffffffffffffffffffffffffff16633c6bb4366040518163ffffffff1660e01b8152600401602060405180830381865afa158015610076573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061009a919061018c565b5f819055005b3480156100ab575f80fd5b506100b46100f2565b6040516100c191906101c6565b60405180910390f35b3480156100d5575f80fd5b506100f060048036038101906100eb9190610239565b6100f7565b005b5f5481565b8073ffffffffffffffffffffffffffffffffffffffff1663f8a8fd6d6040518163ffffffff1660e01b81526004015f604051808303815f87803b15801561013c575f80fd5b505af115801561014e573d5f803e3d5ffd5b5050505050565b5f80fd5b5f819050919050565b61016b81610159565b8114610175575f80fd5b50565b5f8151905061018681610162565b92915050565b5f602082840312156101a1576101a0610155565b5b5f6101ae84828501610178565b91505092915050565b6101c081610159565b82525050565b5f6020820190506101d95f8301846101b7565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610208826101df565b9050919050565b610218816101fe565b8114610222575f80fd5b50565b5f813590506102338161020f565b92915050565b5f6020828403121561024e5761024d610155565b5b5f61025b84828501610225565b9150509291505056fea2646970667358221220ccb405f07d268ef93b2e1a329b42b5c80aecffeaf17793240322db770385954364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x29A DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3C6BB436 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0xBB29998E EQ PUSH2 0xCA JUMPI PUSH2 0x2D JUMP JUMPDEST JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3C6BB436 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x76 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9A SWAP2 SWAP1 PUSH2 0x18C JUMP JUMPDEST PUSH0 DUP2 SWAP1 SSTORE STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xB4 PUSH2 0xF2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC1 SWAP2 SWAP1 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xF0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEB SWAP2 SWAP1 PUSH2 0x239 JUMP JUMPDEST PUSH2 0xF7 JUMP JUMPDEST STOP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF8A8FD6D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16B DUP2 PUSH2 0x159 JUMP JUMPDEST DUP2 EQ PUSH2 0x175 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x186 DUP2 PUSH2 0x162 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A1 JUMPI PUSH2 0x1A0 PUSH2 0x155 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AE DUP5 DUP3 DUP6 ADD PUSH2 0x178 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C0 DUP2 PUSH2 0x159 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D9 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x208 DUP3 PUSH2 0x1DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x218 DUP2 PUSH2 0x1FE JUMP JUMPDEST DUP2 EQ PUSH2 0x222 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x233 DUP2 PUSH2 0x20F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24E JUMPI PUSH2 0x24D PUSH2 0x155 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x25B DUP5 DUP3 DUP6 ADD PUSH2 0x225 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC 0xB4 SDIV CREATE PUSH30 0x268EF93B2E1A329B42B5C80AECFFEAF17793240322DB770385954364736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "130:207:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@_25": {
									"entryPoint": null,
									"id": 25,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@test_37": {
									"entryPoint": 247,
									"id": 37,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"@val_12": {
									"entryPoint": 242,
									"id": 12,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_decode_t_address": {
									"entryPoint": 549,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_t_uint256_fromMemory": {
									"entryPoint": 376,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_address": {
									"entryPoint": 569,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256_fromMemory": {
									"entryPoint": 396,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 439,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 454,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"cleanup_t_address": {
									"entryPoint": 510,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint160": {
									"entryPoint": 479,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 345,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 341,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_address": {
									"entryPoint": 527,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 354,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:2242:1",
										"nodeType": "YulBlock",
										"src": "0:2242:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "47:35:1",
													"nodeType": "YulBlock",
													"src": "47:35:1",
													"statements": [
														{
															"nativeSrc": "57:19:1",
															"nodeType": "YulAssignment",
															"src": "57:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "73:2:1",
																		"nodeType": "YulLiteral",
																		"src": "73:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "67:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "67:5:1"
																},
																"nativeSrc": "67:9:1",
																"nodeType": "YulFunctionCall",
																"src": "67:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nativeSrc": "57:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "57:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nativeSrc": "7:75:1",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nativeSrc": "40:6:1",
														"nodeType": "YulTypedName",
														"src": "40:6:1",
														"type": ""
													}
												],
												"src": "7:75:1"
											},
											{
												"body": {
													"nativeSrc": "177:28:1",
													"nodeType": "YulBlock",
													"src": "177:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "194:1:1",
																		"nodeType": "YulLiteral",
																		"src": "194:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "197:1:1",
																		"nodeType": "YulLiteral",
																		"src": "197:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "187:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "187:6:1"
																},
																"nativeSrc": "187:12:1",
																"nodeType": "YulFunctionCall",
																"src": "187:12:1"
															},
															"nativeSrc": "187:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "187:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nativeSrc": "88:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "88:117:1"
											},
											{
												"body": {
													"nativeSrc": "300:28:1",
													"nodeType": "YulBlock",
													"src": "300:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nativeSrc": "317:1:1",
																		"nodeType": "YulLiteral",
																		"src": "317:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "320:1:1",
																		"nodeType": "YulLiteral",
																		"src": "320:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nativeSrc": "310:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "310:6:1"
																},
																"nativeSrc": "310:12:1",
																"nodeType": "YulFunctionCall",
																"src": "310:12:1"
															},
															"nativeSrc": "310:12:1",
															"nodeType": "YulExpressionStatement",
															"src": "310:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nativeSrc": "211:117:1",
												"nodeType": "YulFunctionDefinition",
												"src": "211:117:1"
											},
											{
												"body": {
													"nativeSrc": "379:32:1",
													"nodeType": "YulBlock",
													"src": "379:32:1",
													"statements": [
														{
															"nativeSrc": "389:16:1",
															"nodeType": "YulAssignment",
															"src": "389:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "400:5:1",
																"nodeType": "YulIdentifier",
																"src": "400:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "389:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "389:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "334:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "361:5:1",
														"nodeType": "YulTypedName",
														"src": "361:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "371:7:1",
														"nodeType": "YulTypedName",
														"src": "371:7:1",
														"type": ""
													}
												],
												"src": "334:77:1"
											},
											{
												"body": {
													"nativeSrc": "460:79:1",
													"nodeType": "YulBlock",
													"src": "460:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "517:16:1",
																"nodeType": "YulBlock",
																"src": "517:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "526:1:1",
																					"nodeType": "YulLiteral",
																					"src": "526:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "529:1:1",
																					"nodeType": "YulLiteral",
																					"src": "529:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "519:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "519:6:1"
																			},
																			"nativeSrc": "519:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "519:12:1"
																		},
																		"nativeSrc": "519:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "519:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "483:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "483:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "508:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "508:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nativeSrc": "490:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "490:17:1"
																				},
																				"nativeSrc": "490:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "490:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "480:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "480:2:1"
																		},
																		"nativeSrc": "480:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "480:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "473:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "473:6:1"
																},
																"nativeSrc": "473:43:1",
																"nodeType": "YulFunctionCall",
																"src": "473:43:1"
															},
															"nativeSrc": "470:63:1",
															"nodeType": "YulIf",
															"src": "470:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nativeSrc": "417:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "453:5:1",
														"nodeType": "YulTypedName",
														"src": "453:5:1",
														"type": ""
													}
												],
												"src": "417:122:1"
											},
											{
												"body": {
													"nativeSrc": "608:80:1",
													"nodeType": "YulBlock",
													"src": "608:80:1",
													"statements": [
														{
															"nativeSrc": "618:22:1",
															"nodeType": "YulAssignment",
															"src": "618:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "633:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "633:6:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "627:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "627:5:1"
																},
																"nativeSrc": "627:13:1",
																"nodeType": "YulFunctionCall",
																"src": "627:13:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "618:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "618:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "676:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "676:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nativeSrc": "649:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "649:26:1"
																},
																"nativeSrc": "649:33:1",
																"nodeType": "YulFunctionCall",
																"src": "649:33:1"
															},
															"nativeSrc": "649:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "649:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256_fromMemory",
												"nativeSrc": "545:143:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "586:6:1",
														"nodeType": "YulTypedName",
														"src": "586:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "594:3:1",
														"nodeType": "YulTypedName",
														"src": "594:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "602:5:1",
														"nodeType": "YulTypedName",
														"src": "602:5:1",
														"type": ""
													}
												],
												"src": "545:143:1"
											},
											{
												"body": {
													"nativeSrc": "771:274:1",
													"nodeType": "YulBlock",
													"src": "771:274:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "817:83:1",
																"nodeType": "YulBlock",
																"src": "817:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "819:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "819:77:1"
																			},
																			"nativeSrc": "819:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "819:79:1"
																		},
																		"nativeSrc": "819:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "819:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "792:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "792:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "801:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "801:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "788:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "788:3:1"
																		},
																		"nativeSrc": "788:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "788:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "813:2:1",
																		"nodeType": "YulLiteral",
																		"src": "813:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "784:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "784:3:1"
																},
																"nativeSrc": "784:32:1",
																"nodeType": "YulFunctionCall",
																"src": "784:32:1"
															},
															"nativeSrc": "781:119:1",
															"nodeType": "YulIf",
															"src": "781:119:1"
														},
														{
															"nativeSrc": "910:128:1",
															"nodeType": "YulBlock",
															"src": "910:128:1",
															"statements": [
																{
																	"nativeSrc": "925:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "925:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "939:1:1",
																		"nodeType": "YulLiteral",
																		"src": "939:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "929:6:1",
																			"nodeType": "YulTypedName",
																			"src": "929:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "954:74:1",
																	"nodeType": "YulAssignment",
																	"src": "954:74:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "1000:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "1000:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "1011:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "1011:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "996:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "996:3:1"
																				},
																				"nativeSrc": "996:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "996:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1020:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1020:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256_fromMemory",
																			"nativeSrc": "964:31:1",
																			"nodeType": "YulIdentifier",
																			"src": "964:31:1"
																		},
																		"nativeSrc": "964:64:1",
																		"nodeType": "YulFunctionCall",
																		"src": "964:64:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "954:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "954:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256_fromMemory",
												"nativeSrc": "694:351:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "741:9:1",
														"nodeType": "YulTypedName",
														"src": "741:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "752:7:1",
														"nodeType": "YulTypedName",
														"src": "752:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "764:6:1",
														"nodeType": "YulTypedName",
														"src": "764:6:1",
														"type": ""
													}
												],
												"src": "694:351:1"
											},
											{
												"body": {
													"nativeSrc": "1116:53:1",
													"nodeType": "YulBlock",
													"src": "1116:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1133:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1133:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1156:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1156:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "1138:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "1138:17:1"
																		},
																		"nativeSrc": "1138:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1138:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "1126:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1126:6:1"
																},
																"nativeSrc": "1126:37:1",
																"nodeType": "YulFunctionCall",
																"src": "1126:37:1"
															},
															"nativeSrc": "1126:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "1126:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "1051:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1104:5:1",
														"nodeType": "YulTypedName",
														"src": "1104:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "1111:3:1",
														"nodeType": "YulTypedName",
														"src": "1111:3:1",
														"type": ""
													}
												],
												"src": "1051:118:1"
											},
											{
												"body": {
													"nativeSrc": "1273:124:1",
													"nodeType": "YulBlock",
													"src": "1273:124:1",
													"statements": [
														{
															"nativeSrc": "1283:26:1",
															"nodeType": "YulAssignment",
															"src": "1283:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "1295:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "1295:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1306:2:1",
																		"nodeType": "YulLiteral",
																		"src": "1306:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1291:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1291:3:1"
																},
																"nativeSrc": "1291:18:1",
																"nodeType": "YulFunctionCall",
																"src": "1291:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "1283:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "1283:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1363:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1363:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "1376:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "1376:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1387:1:1",
																				"nodeType": "YulLiteral",
																				"src": "1387:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1372:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1372:3:1"
																		},
																		"nativeSrc": "1372:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1372:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "1319:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "1319:43:1"
																},
																"nativeSrc": "1319:71:1",
																"nodeType": "YulFunctionCall",
																"src": "1319:71:1"
															},
															"nativeSrc": "1319:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "1319:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "1175:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1245:9:1",
														"nodeType": "YulTypedName",
														"src": "1245:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1257:6:1",
														"nodeType": "YulTypedName",
														"src": "1257:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "1268:4:1",
														"nodeType": "YulTypedName",
														"src": "1268:4:1",
														"type": ""
													}
												],
												"src": "1175:222:1"
											},
											{
												"body": {
													"nativeSrc": "1448:81:1",
													"nodeType": "YulBlock",
													"src": "1448:81:1",
													"statements": [
														{
															"nativeSrc": "1458:65:1",
															"nodeType": "YulAssignment",
															"src": "1458:65:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1473:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1473:5:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1480:42:1",
																		"nodeType": "YulLiteral",
																		"src": "1480:42:1",
																		"type": "",
																		"value": "0xffffffffffffffffffffffffffffffffffffffff"
																	}
																],
																"functionName": {
																	"name": "and",
																	"nativeSrc": "1469:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1469:3:1"
																},
																"nativeSrc": "1469:54:1",
																"nodeType": "YulFunctionCall",
																"src": "1469:54:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1458:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1458:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint160",
												"nativeSrc": "1403:126:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1430:5:1",
														"nodeType": "YulTypedName",
														"src": "1430:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1440:7:1",
														"nodeType": "YulTypedName",
														"src": "1440:7:1",
														"type": ""
													}
												],
												"src": "1403:126:1"
											},
											{
												"body": {
													"nativeSrc": "1580:51:1",
													"nodeType": "YulBlock",
													"src": "1580:51:1",
													"statements": [
														{
															"nativeSrc": "1590:35:1",
															"nodeType": "YulAssignment",
															"src": "1590:35:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1619:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1619:5:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint160",
																	"nativeSrc": "1601:17:1",
																	"nodeType": "YulIdentifier",
																	"src": "1601:17:1"
																},
																"nativeSrc": "1601:24:1",
																"nodeType": "YulFunctionCall",
																"src": "1601:24:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "1590:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "1590:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_address",
												"nativeSrc": "1535:96:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1562:5:1",
														"nodeType": "YulTypedName",
														"src": "1562:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "1572:7:1",
														"nodeType": "YulTypedName",
														"src": "1572:7:1",
														"type": ""
													}
												],
												"src": "1535:96:1"
											},
											{
												"body": {
													"nativeSrc": "1680:79:1",
													"nodeType": "YulBlock",
													"src": "1680:79:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "1737:16:1",
																"nodeType": "YulBlock",
																"src": "1737:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1746:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1746:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1749:1:1",
																					"nodeType": "YulLiteral",
																					"src": "1749:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1739:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "1739:6:1"
																			},
																			"nativeSrc": "1739:12:1",
																			"nodeType": "YulFunctionCall",
																			"src": "1739:12:1"
																		},
																		"nativeSrc": "1739:12:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "1739:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1703:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1703:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nativeSrc": "1728:5:1",
																						"nodeType": "YulIdentifier",
																						"src": "1728:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_address",
																					"nativeSrc": "1710:17:1",
																					"nodeType": "YulIdentifier",
																					"src": "1710:17:1"
																				},
																				"nativeSrc": "1710:24:1",
																				"nodeType": "YulFunctionCall",
																				"src": "1710:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nativeSrc": "1700:2:1",
																			"nodeType": "YulIdentifier",
																			"src": "1700:2:1"
																		},
																		"nativeSrc": "1700:35:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1700:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nativeSrc": "1693:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "1693:6:1"
																},
																"nativeSrc": "1693:43:1",
																"nodeType": "YulFunctionCall",
																"src": "1693:43:1"
															},
															"nativeSrc": "1690:63:1",
															"nodeType": "YulIf",
															"src": "1690:63:1"
														}
													]
												},
												"name": "validator_revert_t_address",
												"nativeSrc": "1637:122:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "1673:5:1",
														"nodeType": "YulTypedName",
														"src": "1673:5:1",
														"type": ""
													}
												],
												"src": "1637:122:1"
											},
											{
												"body": {
													"nativeSrc": "1817:87:1",
													"nodeType": "YulBlock",
													"src": "1817:87:1",
													"statements": [
														{
															"nativeSrc": "1827:29:1",
															"nodeType": "YulAssignment",
															"src": "1827:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nativeSrc": "1849:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1849:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nativeSrc": "1836:12:1",
																	"nodeType": "YulIdentifier",
																	"src": "1836:12:1"
																},
																"nativeSrc": "1836:20:1",
																"nodeType": "YulFunctionCall",
																"src": "1836:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nativeSrc": "1827:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "1827:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1892:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1892:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_address",
																	"nativeSrc": "1865:26:1",
																	"nodeType": "YulIdentifier",
																	"src": "1865:26:1"
																},
																"nativeSrc": "1865:33:1",
																"nodeType": "YulFunctionCall",
																"src": "1865:33:1"
															},
															"nativeSrc": "1865:33:1",
															"nodeType": "YulExpressionStatement",
															"src": "1865:33:1"
														}
													]
												},
												"name": "abi_decode_t_address",
												"nativeSrc": "1765:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nativeSrc": "1795:6:1",
														"nodeType": "YulTypedName",
														"src": "1795:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nativeSrc": "1803:3:1",
														"nodeType": "YulTypedName",
														"src": "1803:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nativeSrc": "1811:5:1",
														"nodeType": "YulTypedName",
														"src": "1811:5:1",
														"type": ""
													}
												],
												"src": "1765:139:1"
											},
											{
												"body": {
													"nativeSrc": "1976:263:1",
													"nodeType": "YulBlock",
													"src": "1976:263:1",
													"statements": [
														{
															"body": {
																"nativeSrc": "2022:83:1",
																"nodeType": "YulBlock",
																"src": "2022:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nativeSrc": "2024:77:1",
																				"nodeType": "YulIdentifier",
																				"src": "2024:77:1"
																			},
																			"nativeSrc": "2024:79:1",
																			"nodeType": "YulFunctionCall",
																			"src": "2024:79:1"
																		},
																		"nativeSrc": "2024:79:1",
																		"nodeType": "YulExpressionStatement",
																		"src": "2024:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nativeSrc": "1997:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "1997:7:1"
																			},
																			{
																				"name": "headStart",
																				"nativeSrc": "2006:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "2006:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nativeSrc": "1993:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1993:3:1"
																		},
																		"nativeSrc": "1993:23:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1993:23:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "2018:2:1",
																		"nodeType": "YulLiteral",
																		"src": "2018:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nativeSrc": "1989:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1989:3:1"
																},
																"nativeSrc": "1989:32:1",
																"nodeType": "YulFunctionCall",
																"src": "1989:32:1"
															},
															"nativeSrc": "1986:119:1",
															"nodeType": "YulIf",
															"src": "1986:119:1"
														},
														{
															"nativeSrc": "2115:117:1",
															"nodeType": "YulBlock",
															"src": "2115:117:1",
															"statements": [
																{
																	"nativeSrc": "2130:15:1",
																	"nodeType": "YulVariableDeclaration",
																	"src": "2130:15:1",
																	"value": {
																		"kind": "number",
																		"nativeSrc": "2144:1:1",
																		"nodeType": "YulLiteral",
																		"src": "2144:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nativeSrc": "2134:6:1",
																			"nodeType": "YulTypedName",
																			"src": "2134:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nativeSrc": "2159:63:1",
																	"nodeType": "YulAssignment",
																	"src": "2159:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nativeSrc": "2194:9:1",
																						"nodeType": "YulIdentifier",
																						"src": "2194:9:1"
																					},
																					{
																						"name": "offset",
																						"nativeSrc": "2205:6:1",
																						"nodeType": "YulIdentifier",
																						"src": "2205:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nativeSrc": "2190:3:1",
																					"nodeType": "YulIdentifier",
																					"src": "2190:3:1"
																				},
																				"nativeSrc": "2190:22:1",
																				"nodeType": "YulFunctionCall",
																				"src": "2190:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nativeSrc": "2214:7:1",
																				"nodeType": "YulIdentifier",
																				"src": "2214:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_address",
																			"nativeSrc": "2169:20:1",
																			"nodeType": "YulIdentifier",
																			"src": "2169:20:1"
																		},
																		"nativeSrc": "2169:53:1",
																		"nodeType": "YulFunctionCall",
																		"src": "2169:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nativeSrc": "2159:6:1",
																			"nodeType": "YulIdentifier",
																			"src": "2159:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_address",
												"nativeSrc": "1910:329:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "1946:9:1",
														"nodeType": "YulTypedName",
														"src": "1946:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nativeSrc": "1957:7:1",
														"nodeType": "YulTypedName",
														"src": "1957:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nativeSrc": "1969:6:1",
														"nodeType": "YulTypedName",
														"src": "1969:6:1",
														"type": ""
													}
												],
												"src": "1910:329:1"
											}
										]
									},
									"contents": "{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256_fromMemory(offset, end) -> value {\n        value := mload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256_fromMemory(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040526004361061002c575f3560e01c80633c6bb436146100a0578063bb29998e146100ca5761002d565b5b3373ffffffffffffffffffffffffffffffffffffffff16633c6bb4366040518163ffffffff1660e01b8152600401602060405180830381865afa158015610076573d5f803e3d5ffd5b505050506040513d601f19601f8201168201806040525081019061009a919061018c565b5f819055005b3480156100ab575f80fd5b506100b46100f2565b6040516100c191906101c6565b60405180910390f35b3480156100d5575f80fd5b506100f060048036038101906100eb9190610239565b6100f7565b005b5f5481565b8073ffffffffffffffffffffffffffffffffffffffff1663f8a8fd6d6040518163ffffffff1660e01b81526004015f604051808303815f87803b15801561013c575f80fd5b505af115801561014e573d5f803e3d5ffd5b5050505050565b5f80fd5b5f819050919050565b61016b81610159565b8114610175575f80fd5b50565b5f8151905061018681610162565b92915050565b5f602082840312156101a1576101a0610155565b5b5f6101ae84828501610178565b91505092915050565b6101c081610159565b82525050565b5f6020820190506101d95f8301846101b7565b92915050565b5f73ffffffffffffffffffffffffffffffffffffffff82169050919050565b5f610208826101df565b9050919050565b610218816101fe565b8114610222575f80fd5b50565b5f813590506102338161020f565b92915050565b5f6020828403121561024e5761024d610155565b5b5f61025b84828501610225565b9150509291505056fea2646970667358221220ccb405f07d268ef93b2e1a329b42b5c80aecffeaf17793240322db770385954364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x2C JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3C6BB436 EQ PUSH2 0xA0 JUMPI DUP1 PUSH4 0xBB29998E EQ PUSH2 0xCA JUMPI PUSH2 0x2D JUMP JUMPDEST JUMPDEST CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0x3C6BB436 PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 DUP7 GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x76 JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x9A SWAP2 SWAP1 PUSH2 0x18C JUMP JUMPDEST PUSH0 DUP2 SWAP1 SSTORE STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xAB JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xB4 PUSH2 0xF2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC1 SWAP2 SWAP1 PUSH2 0x1C6 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0xD5 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0xF0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0xEB SWAP2 SWAP1 PUSH2 0x239 JUMP JUMPDEST PUSH2 0xF7 JUMP JUMPDEST STOP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH4 0xF8A8FD6D PUSH1 0x40 MLOAD DUP2 PUSH4 0xFFFFFFFF AND PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x13C JUMPI PUSH0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x14E JUMPI RETURNDATASIZE PUSH0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH0 REVERT JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x16B DUP2 PUSH2 0x159 JUMP JUMPDEST DUP2 EQ PUSH2 0x175 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP PUSH2 0x186 DUP2 PUSH2 0x162 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x1A1 JUMPI PUSH2 0x1A0 PUSH2 0x155 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x1AE DUP5 DUP3 DUP6 ADD PUSH2 0x178 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1C0 DUP2 PUSH2 0x159 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x1D9 PUSH0 DUP4 ADD DUP5 PUSH2 0x1B7 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 PUSH2 0x208 DUP3 PUSH2 0x1DF JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x218 DUP2 PUSH2 0x1FE JUMP JUMPDEST DUP2 EQ PUSH2 0x222 JUMPI PUSH0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x233 DUP2 PUSH2 0x20F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x24E JUMPI PUSH2 0x24D PUSH2 0x155 JUMP JUMPDEST JUMPDEST PUSH0 PUSH2 0x25B DUP5 DUP3 DUP6 ADD PUSH2 0x225 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xCC 0xB4 SDIV CREATE PUSH30 0x268EF93B2E1A329B42B5C80AECFFEAF17793240322DB770385954364736F PUSH13 0x634300081A0033000000000000 ",
							"sourceMap": "130:207:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;229:10;223:21;;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;217:3;:29;;;;154:18;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;259:76;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;154:18;;;;:::o;259:76::-;314:6;308:18;;;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;259:76;:::o;88:117:1:-;197:1;194;187:12;334:77;371:7;400:5;389:16;;334:77;;;:::o;417:122::-;490:24;508:5;490:24;:::i;:::-;483:5;480:35;470:63;;529:1;526;519:12;470:63;417:122;:::o;545:143::-;602:5;633:6;627:13;618:22;;649:33;676:5;649:33;:::i;:::-;545:143;;;;:::o;694:351::-;764:6;813:2;801:9;792:7;788:23;784:32;781:119;;;819:79;;:::i;:::-;781:119;939:1;964:64;1020:7;1011:6;1000:9;996:22;964:64;:::i;:::-;954:74;;910:128;694:351;;;;:::o;1051:118::-;1138:24;1156:5;1138:24;:::i;:::-;1133:3;1126:37;1051:118;;:::o;1175:222::-;1268:4;1306:2;1295:9;1291:18;1283:26;;1319:71;1387:1;1376:9;1372:17;1363:6;1319:71;:::i;:::-;1175:222;;;;:::o;1403:126::-;1440:7;1480:42;1473:5;1469:54;1458:65;;1403:126;;;:::o;1535:96::-;1572:7;1601:24;1619:5;1601:24;:::i;:::-;1590:35;;1535:96;;;:::o;1637:122::-;1710:24;1728:5;1710:24;:::i;:::-;1703:5;1700:35;1690:63;;1749:1;1746;1739:12;1690:63;1637:122;:::o;1765:139::-;1811:5;1849:6;1836:20;1827:29;;1865:33;1892:5;1865:33;:::i;:::-;1765:139;;;;:::o;1910:329::-;1969:6;2018:2;2006:9;1997:7;1993:23;1989:32;1986:119;;;2024:79;;:::i;:::-;1986:119;2144:1;2169:53;2214:7;2205:6;2194:9;2190:22;2169:53;:::i;:::-;2159:63;;2115:117;1910:329;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "133200",
								"executionCost": "175",
								"totalCost": "133375"
							},
							"external": {
								"": "infinite",
								"test(address)": "infinite",
								"val()": "2402"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 130,
									"end": 337,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 130,
									"end": 337,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 130,
									"end": 337,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 130,
									"end": 337,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 130,
									"end": 337,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 130,
									"end": 337,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 130,
									"end": 337,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 130,
									"end": 337,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 130,
									"end": 337,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 130,
									"end": 337,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 130,
									"end": 337,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 130,
									"end": 337,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 130,
									"end": 337,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 130,
									"end": 337,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 130,
									"end": 337,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 130,
									"end": 337,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 130,
									"end": 337,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 130,
									"end": 337,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 130,
									"end": 337,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 130,
									"end": 337,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 130,
									"end": 337,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220ccb405f07d268ef93b2e1a329b42b5c80aecffeaf17793240322db770385954364736f6c634300081a0033",
									".code": [
										{
											"begin": 130,
											"end": 337,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 130,
											"end": 337,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 130,
											"end": 337,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 130,
											"end": 337,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 130,
											"end": 337,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 130,
											"end": 337,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 130,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 130,
											"end": 337,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 130,
											"end": 337,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 130,
											"end": 337,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 130,
											"end": 337,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 130,
											"end": 337,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 130,
											"end": 337,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 130,
											"end": 337,
											"name": "PUSH",
											"source": 0,
											"value": "3C6BB436"
										},
										{
											"begin": 130,
											"end": 337,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 130,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 130,
											"end": 337,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 130,
											"end": 337,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 130,
											"end": 337,
											"name": "PUSH",
											"source": 0,
											"value": "BB29998E"
										},
										{
											"begin": 130,
											"end": 337,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 130,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 130,
											"end": 337,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 130,
											"end": 337,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 130,
											"end": 337,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 130,
											"end": 337,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 130,
											"end": 337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 130,
											"end": 337,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 130,
											"end": 337,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 229,
											"end": 239,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 223,
											"end": 244,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 223,
											"end": 244,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 223,
											"end": 244,
											"name": "PUSH",
											"source": 0,
											"value": "3C6BB436"
										},
										{
											"begin": 223,
											"end": 246,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 223,
											"end": 246,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 223,
											"end": 246,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 223,
											"end": 246,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 223,
											"end": 246,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 223,
											"end": 246,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 223,
											"end": 246,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "STATICCALL",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 223,
											"end": 246,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 223,
											"end": 246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 223,
											"end": 246,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "tag",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 223,
											"end": 246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 223,
											"end": 246,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 223,
											"end": 246,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 223,
											"end": 246,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 223,
											"end": 246,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 223,
											"end": 246,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 223,
											"end": 246,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 223,
											"end": 246,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 223,
											"end": 246,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 217,
											"end": 220,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 217,
											"end": 246,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 217,
											"end": 246,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 217,
											"end": 246,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 217,
											"end": 246,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 154,
											"end": 172,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 154,
											"end": 172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 154,
											"end": 172,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 154,
											"end": 172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 154,
											"end": 172,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 154,
											"end": 172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 154,
											"end": 172,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 154,
											"end": 172,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 154,
											"end": 172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 154,
											"end": 172,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 154,
											"end": 172,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 154,
											"end": 172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 154,
											"end": 172,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 154,
											"end": 172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 154,
											"end": 172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 154,
											"end": 172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 154,
											"end": 172,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 154,
											"end": 172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 154,
											"end": 172,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 154,
											"end": 172,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 154,
											"end": 172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 154,
											"end": 172,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 154,
											"end": 172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 154,
											"end": 172,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 154,
											"end": 172,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 154,
											"end": 172,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 154,
											"end": 172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 154,
											"end": 172,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 154,
											"end": 172,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 154,
											"end": 172,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 154,
											"end": 172,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 154,
											"end": 172,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 154,
											"end": 172,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 154,
											"end": 172,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 259,
											"end": 335,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 259,
											"end": 335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 259,
											"end": 335,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 259,
											"end": 335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 259,
											"end": 335,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 259,
											"end": 335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 259,
											"end": 335,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 259,
											"end": 335,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 259,
											"end": 335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 259,
											"end": 335,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 259,
											"end": 335,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 259,
											"end": 335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 259,
											"end": 335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 259,
											"end": 335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 259,
											"end": 335,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 259,
											"end": 335,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 259,
											"end": 335,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 259,
											"end": 335,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 259,
											"end": 335,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 259,
											"end": 335,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 259,
											"end": 335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 259,
											"end": 335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 259,
											"end": 335,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 259,
											"end": 335,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 259,
											"end": 335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "19"
										},
										{
											"begin": 259,
											"end": 335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 259,
											"end": 335,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 259,
											"end": 335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 259,
											"end": 335,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 259,
											"end": 335,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 259,
											"end": 335,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 259,
											"end": 335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 259,
											"end": 335,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 154,
											"end": 172,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 154,
											"end": 172,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 154,
											"end": 172,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 154,
											"end": 172,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 154,
											"end": 172,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 154,
											"end": 172,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 259,
											"end": 335,
											"name": "tag",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 259,
											"end": 335,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 314,
											"end": 320,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 308,
											"end": 326,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 308,
											"end": 326,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 308,
											"end": 326,
											"name": "PUSH",
											"source": 0,
											"value": "F8A8FD6D"
										},
										{
											"begin": 308,
											"end": 328,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 308,
											"end": 328,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 308,
											"end": 328,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 308,
											"end": 328,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFF"
										},
										{
											"begin": 308,
											"end": 328,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 308,
											"end": 328,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 308,
											"end": 328,
											"name": "SHL",
											"source": 0
										},
										{
											"begin": 308,
											"end": 328,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 308,
											"end": 328,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 308,
											"end": 328,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 308,
											"end": 328,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 308,
											"end": 328,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 328,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 308,
											"end": 328,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 308,
											"end": 328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 308,
											"end": 328,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 308,
											"end": 328,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 308,
											"end": 328,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 308,
											"end": 328,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 328,
											"name": "DUP8",
											"source": 0
										},
										{
											"begin": 308,
											"end": 328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 308,
											"end": 328,
											"name": "EXTCODESIZE",
											"source": 0
										},
										{
											"begin": 308,
											"end": 328,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 308,
											"end": 328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 308,
											"end": 328,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 308,
											"end": 328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 308,
											"end": 328,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 308,
											"end": 328,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 308,
											"end": 328,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 308,
											"end": 328,
											"name": "tag",
											"source": 0,
											"value": "22"
										},
										{
											"begin": 308,
											"end": 328,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 308,
											"end": 328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 308,
											"end": 328,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 308,
											"end": 328,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 308,
											"end": 328,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 308,
											"end": 328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 308,
											"end": 328,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 308,
											"end": 328,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 308,
											"end": 328,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 308,
											"end": 328,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 308,
											"end": 328,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 328,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 308,
											"end": 328,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 308,
											"end": 328,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 308,
											"end": 328,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 308,
											"end": 328,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 308,
											"end": 328,
											"name": "tag",
											"source": 0,
											"value": "24"
										},
										{
											"begin": 308,
											"end": 328,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 308,
											"end": 328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 308,
											"end": 328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 308,
											"end": 328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 308,
											"end": 328,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 259,
											"end": 335,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 259,
											"end": 335,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 88,
											"end": 205,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 88,
											"end": 205,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 197,
											"end": 198,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 194,
											"end": 195,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 187,
											"end": 199,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 334,
											"end": 411,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 371,
											"end": 378,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 400,
											"end": 405,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 389,
											"end": 405,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 334,
											"end": 411,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 417,
											"end": 539,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 508,
											"end": 513,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 490,
											"end": 514,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 490,
											"end": 514,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 490,
											"end": 514,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 483,
											"end": 488,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 480,
											"end": 515,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 529,
											"end": 530,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 526,
											"end": 527,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 519,
											"end": 531,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 470,
											"end": 533,
											"name": "tag",
											"source": 1,
											"value": "43"
										},
										{
											"begin": 470,
											"end": 533,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 417,
											"end": 539,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 688,
											"name": "tag",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 545,
											"end": 688,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 602,
											"end": 607,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 633,
											"end": 639,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 627,
											"end": 640,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 618,
											"end": 640,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 618,
											"end": 640,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 649,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 676,
											"end": 681,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 649,
											"end": 682,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 649,
											"end": 682,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 649,
											"end": 682,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 649,
											"end": 682,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 545,
											"end": 688,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 545,
											"end": 688,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 545,
											"end": 688,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 688,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 545,
											"end": 688,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 694,
											"end": 1045,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 694,
											"end": 1045,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 764,
											"end": 770,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 813,
											"end": 815,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 801,
											"end": 810,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 792,
											"end": 799,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 788,
											"end": 811,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 784,
											"end": 816,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 781,
											"end": 900,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 781,
											"end": 900,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 781,
											"end": 900,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 819,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 819,
											"end": 898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 819,
											"end": 898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 819,
											"end": 898,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 819,
											"end": 898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 781,
											"end": 900,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 781,
											"end": 900,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 939,
											"end": 940,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 964,
											"end": 1028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 1020,
											"end": 1027,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1011,
											"end": 1017,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1000,
											"end": 1009,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 996,
											"end": 1018,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 964,
											"end": 1028,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "30"
										},
										{
											"begin": 964,
											"end": 1028,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 964,
											"end": 1028,
											"name": "tag",
											"source": 1,
											"value": "49"
										},
										{
											"begin": 964,
											"end": 1028,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 954,
											"end": 1028,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 954,
											"end": 1028,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 910,
											"end": 1038,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 694,
											"end": 1045,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 694,
											"end": 1045,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 694,
											"end": 1045,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 694,
											"end": 1045,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 694,
											"end": 1045,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1169,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1051,
											"end": 1169,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1138,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1156,
											"end": 1161,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1138,
											"end": 1162,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 1138,
											"end": 1162,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1138,
											"end": 1162,
											"name": "tag",
											"source": 1,
											"value": "51"
										},
										{
											"begin": 1138,
											"end": 1162,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1133,
											"end": 1136,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1126,
											"end": 1163,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1169,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1169,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1051,
											"end": 1169,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1397,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 1175,
											"end": 1397,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1268,
											"end": 1272,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1306,
											"end": 1308,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1295,
											"end": 1304,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1291,
											"end": 1309,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1309,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1283,
											"end": 1309,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1319,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1387,
											"end": 1388,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1376,
											"end": 1385,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1372,
											"end": 1389,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1363,
											"end": 1369,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1319,
											"end": 1390,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 1319,
											"end": 1390,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1319,
											"end": 1390,
											"name": "tag",
											"source": 1,
											"value": "53"
										},
										{
											"begin": 1319,
											"end": 1390,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1397,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1397,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1397,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1397,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1175,
											"end": 1397,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1529,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1403,
											"end": 1529,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1440,
											"end": 1447,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1480,
											"end": 1522,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1473,
											"end": 1478,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1469,
											"end": 1523,
											"name": "AND",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1458,
											"end": 1523,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1529,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1529,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1529,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1403,
											"end": 1529,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1631,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1535,
											"end": 1631,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1572,
											"end": 1579,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1601,
											"end": 1625,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1619,
											"end": 1624,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1625,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1601,
											"end": 1625,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1601,
											"end": 1625,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 1601,
											"end": 1625,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1590,
											"end": 1625,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1590,
											"end": 1625,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1631,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1631,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1631,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1535,
											"end": 1631,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1637,
											"end": 1759,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1637,
											"end": 1759,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1728,
											"end": 1733,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1734,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1710,
											"end": 1734,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1710,
											"end": 1734,
											"name": "tag",
											"source": 1,
											"value": "58"
										},
										{
											"begin": 1710,
											"end": 1734,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1703,
											"end": 1708,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1700,
											"end": 1735,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 1690,
											"end": 1753,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1690,
											"end": 1753,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1749,
											"end": 1750,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1746,
											"end": 1747,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1739,
											"end": 1751,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1690,
											"end": 1753,
											"name": "tag",
											"source": 1,
											"value": "59"
										},
										{
											"begin": 1690,
											"end": 1753,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1637,
											"end": 1759,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1637,
											"end": 1759,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1765,
											"end": 1904,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1765,
											"end": 1904,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1811,
											"end": 1816,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1849,
											"end": 1855,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1836,
											"end": 1856,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 1827,
											"end": 1856,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1827,
											"end": 1856,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1865,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1892,
											"end": 1897,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1865,
											"end": 1898,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1865,
											"end": 1898,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1865,
											"end": 1898,
											"name": "tag",
											"source": 1,
											"value": "61"
										},
										{
											"begin": 1865,
											"end": 1898,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1765,
											"end": 1904,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1765,
											"end": 1904,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1765,
											"end": 1904,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1765,
											"end": 1904,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1765,
											"end": 1904,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1910,
											"end": 2239,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 1910,
											"end": 2239,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1969,
											"end": 1975,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2018,
											"end": 2020,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 2006,
											"end": 2015,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1997,
											"end": 2004,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1993,
											"end": 2016,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1989,
											"end": 2021,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 1986,
											"end": 2105,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1986,
											"end": 2105,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1986,
											"end": 2105,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2024,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2024,
											"end": 2103,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 2024,
											"end": 2103,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2024,
											"end": 2103,
											"name": "tag",
											"source": 1,
											"value": "64"
										},
										{
											"begin": 2024,
											"end": 2103,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1986,
											"end": 2105,
											"name": "tag",
											"source": 1,
											"value": "63"
										},
										{
											"begin": 1986,
											"end": 2105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2144,
											"end": 2145,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2169,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2214,
											"end": 2221,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 2205,
											"end": 2211,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 2194,
											"end": 2203,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 2190,
											"end": 2212,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2222,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 2169,
											"end": 2222,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 2169,
											"end": 2222,
											"name": "tag",
											"source": 1,
											"value": "65"
										},
										{
											"begin": 2169,
											"end": 2222,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2159,
											"end": 2222,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 2159,
											"end": 2222,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2115,
											"end": 2232,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1910,
											"end": 2239,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1910,
											"end": 2239,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1910,
											"end": 2239,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1910,
											"end": 2239,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1910,
											"end": 2239,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"homework/经典用例/Storage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"test(address)": "bb29998e",
							"val()": "3c6bb436"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"test\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"val\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"homework/\\u7ecf\\u5178\\u7528\\u4f8b/Storage.sol\":\"Callback\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"homework/\\u7ecf\\u5178\\u7528\\u4f8b/Storage.sol\":{\"keccak256\":\"0x2b0a884467c4cd807a52a96f7f455779eefb57b334f1c69677eea472a6521912\",\"urls\":[\"bzz-raw://c2dc382f1a97c42d5d620ebdae47ad13595161e75a8be703c0ba790ad95d27a9\",\"dweb:/ipfs/QmSovcs1CU6CwVUnKpEJ9ioL6zDr8GhjcJruwd4mrSuVsN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 12,
								"contract": "homework/经典用例/Storage.sol:Callback",
								"label": "val",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ITest": {
					"abi": [
						{
							"inputs": [],
							"name": "test",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "val",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "",
							"opcodes": "",
							"sourceMap": ""
						},
						"gasEstimates": null,
						"legacyAssembly": null,
						"methodIdentifiers": {
							"test()": "f8a8fd6d",
							"val()": "3c6bb436"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"test\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"val\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"homework/\\u7ecf\\u5178\\u7528\\u4f8b/Storage.sol\":\"ITest\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"homework/\\u7ecf\\u5178\\u7528\\u4f8b/Storage.sol\":{\"keccak256\":\"0x2b0a884467c4cd807a52a96f7f455779eefb57b334f1c69677eea472a6521912\",\"urls\":[\"bzz-raw://c2dc382f1a97c42d5d620ebdae47ad13595161e75a8be703c0ba790ad95d27a9\",\"dweb:/ipfs/QmSovcs1CU6CwVUnKpEJ9ioL6zDr8GhjcJruwd4mrSuVsN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ReentrancyGuard": {
					"abi": [],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":720:884  contract ReentrancyGuard{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":720:884  contract ReentrancyGuard{... */\n      mstore(0x40, 0x80)\n      0x00\n      dup1\n      revert\n\n    auxdata: 0xa26469706673582212208fe75c979fc8ad8fd259d5e880527b7e1730d0e559cc0cc2e1b65c04cab605bd64736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b50603e80601a5f395ff3fe60806040525f80fdfea26469706673582212208fe75c979fc8ad8fd259d5e880527b7e1730d0e559cc0cc2e1b65c04cab605bd64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x3E DUP1 PUSH1 0x1A PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xE7 TLOAD SWAP8 SWAP16 0xC8 0xAD DUP16 0xD2 MSIZE 0xD5 0xE8 DUP1 MSTORE PUSH28 0x7E1730D0E559CC0CC2E1B65C04CAB605BD64736F6C634300081A0033 ",
							"sourceMap": "720:164:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "60806040525f80fdfea26469706673582212208fe75c979fc8ad8fd259d5e880527b7e1730d0e559cc0cc2e1b65c04cab605bd64736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP16 0xE7 TLOAD SWAP8 SWAP16 0xC8 0xAD DUP16 0xD2 MSIZE 0xD5 0xE8 DUP1 MSTORE PUSH28 0x7E1730D0E559CC0CC2E1B65C04CAB605BD64736F6C634300081A0033 ",
							"sourceMap": "720:164:0:-:0;;;;;"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "12400",
								"executionCost": "64",
								"totalCost": "12464"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 720,
									"end": 884,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 720,
									"end": 884,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 720,
									"end": 884,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 720,
									"end": 884,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 720,
									"end": 884,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 720,
									"end": 884,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 720,
									"end": 884,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 720,
									"end": 884,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 720,
									"end": 884,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 720,
									"end": 884,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 720,
									"end": 884,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 720,
									"end": 884,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 720,
									"end": 884,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 720,
									"end": 884,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 720,
									"end": 884,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 720,
									"end": 884,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 720,
									"end": 884,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 720,
									"end": 884,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 720,
									"end": 884,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 720,
									"end": 884,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 720,
									"end": 884,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212208fe75c979fc8ad8fd259d5e880527b7e1730d0e559cc0cc2e1b65c04cab605bd64736f6c634300081a0033",
									".code": [
										{
											"begin": 720,
											"end": 884,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 720,
											"end": 884,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 720,
											"end": 884,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 720,
											"end": 884,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 720,
											"end": 884,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 720,
											"end": 884,
											"name": "REVERT",
											"source": 0
										}
									]
								}
							},
							"sourceList": [
								"homework/经典用例/Storage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"homework/\\u7ecf\\u5178\\u7528\\u4f8b/Storage.sol\":\"ReentrancyGuard\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"homework/\\u7ecf\\u5178\\u7528\\u4f8b/Storage.sol\":{\"keccak256\":\"0x2b0a884467c4cd807a52a96f7f455779eefb57b334f1c69677eea472a6521912\",\"urls\":[\"bzz-raw://c2dc382f1a97c42d5d620ebdae47ad13595161e75a8be703c0ba790ad95d27a9\",\"dweb:/ipfs/QmSovcs1CU6CwVUnKpEJ9ioL6zDr8GhjcJruwd4mrSuVsN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 84,
								"contract": "homework/经典用例/Storage.sol:ReentrancyGuard",
								"label": "locked",
								"offset": 0,
								"slot": "0",
								"type": "t_bool"
							}
						],
						"types": {
							"t_bool": {
								"encoding": "inplace",
								"label": "bool",
								"numberOfBytes": "1"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"ReentrancyGuardTransient": {
					"abi": [
						{
							"inputs": [],
							"name": "test",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":887:1202  contract ReentrancyGuardTransient{... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":887:1202  contract ReentrancyGuardTransient{... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xf8a8fd6d\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":1114:1200  function test() external  lock{... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      stop\n    tag_5:\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":1004:1008  SLOT */\n      0x00\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":998:1009  tload(SLOT) */\n      tload\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":995:1022  if tload(SLOT){revert(0,0)} */\n      iszero\n      tag_7\n      jumpi\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":1019:1020  0 */\n      0x00\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":1017:1018  0 */\n      dup1\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":1010:1021  revert(0,0) */\n      revert\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":995:1022  if tload(SLOT){revert(0,0)} */\n    tag_7:\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":1043:1044  1 */\n      0x01\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":1038:1042  SLOT */\n      0x00\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":1031:1045  tstore(SLOT,1) */\n      tstore\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":1150:1164  bytes memory b */\n      0x00\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":1150:1169  bytes memory b = \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":1176:1186  msg.sender */\n      caller\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":1176:1191  msg.sender.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":1192:1193  b */\n      dup2\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":1176:1194  msg.sender.call(b) */\n      mload(0x40)\n      tag_9\n      swap2\n      swap1\n      tag_10\n      jump\t// in\n    tag_9:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_13\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_12)\n    tag_13:\n      0x60\n      swap2\n      pop\n    tag_12:\n      pop\n      pop\n      pop\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":1144:1200  {... */\n      pop\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":1096:1097  0 */\n      0x00\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":1091:1095  SLOT */\n      dup1\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":1084:1098  tstore(SLOT,0) */\n      tstore\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":1114:1200  function test() external  lock{... */\n      jump\t// out\n        /* \"#utility.yul\":7:105   */\n    tag_14:\n        /* \"#utility.yul\":58:64   */\n      0x00\n        /* \"#utility.yul\":92:97   */\n      dup2\n        /* \"#utility.yul\":86:98   */\n      mload\n        /* \"#utility.yul\":76:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:105   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":111:258   */\n    tag_15:\n        /* \"#utility.yul\":212:223   */\n      0x00\n        /* \"#utility.yul\":249:252   */\n      dup2\n        /* \"#utility.yul\":234:252   */\n      swap1\n      pop\n        /* \"#utility.yul\":111:258   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":264:403   */\n    tag_16:\n        /* \"#utility.yul\":353:359   */\n      dup3\n        /* \"#utility.yul\":348:351   */\n      dup2\n        /* \"#utility.yul\":343:346   */\n      dup4\n        /* \"#utility.yul\":337:360   */\n      mcopy\n        /* \"#utility.yul\":394:395   */\n      0x00\n        /* \"#utility.yul\":385:391   */\n      dup4\n        /* \"#utility.yul\":380:383   */\n      dup4\n        /* \"#utility.yul\":376:392   */\n      add\n        /* \"#utility.yul\":369:396   */\n      mstore\n        /* \"#utility.yul\":264:403   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":409:795   */\n    tag_17:\n        /* \"#utility.yul\":513:516   */\n      0x00\n        /* \"#utility.yul\":541:579   */\n      tag_23\n        /* \"#utility.yul\":573:578   */\n      dup3\n        /* \"#utility.yul\":541:579   */\n      tag_14\n      jump\t// in\n    tag_23:\n        /* \"#utility.yul\":595:683   */\n      tag_24\n        /* \"#utility.yul\":676:682   */\n      dup2\n        /* \"#utility.yul\":671:674   */\n      dup6\n        /* \"#utility.yul\":595:683   */\n      tag_15\n      jump\t// in\n    tag_24:\n        /* \"#utility.yul\":588:683   */\n      swap4\n      pop\n        /* \"#utility.yul\":692:757   */\n      tag_25\n        /* \"#utility.yul\":750:756   */\n      dup2\n        /* \"#utility.yul\":745:748   */\n      dup6\n        /* \"#utility.yul\":738:742   */\n      0x20\n        /* \"#utility.yul\":731:736   */\n      dup7\n        /* \"#utility.yul\":727:743   */\n      add\n        /* \"#utility.yul\":692:757   */\n      tag_16\n      jump\t// in\n    tag_25:\n        /* \"#utility.yul\":782:788   */\n      dup1\n        /* \"#utility.yul\":777:780   */\n      dup5\n        /* \"#utility.yul\":773:789   */\n      add\n        /* \"#utility.yul\":766:789   */\n      swap2\n      pop\n        /* \"#utility.yul\":517:795   */\n      pop\n        /* \"#utility.yul\":409:795   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":801:1072   */\n    tag_10:\n        /* \"#utility.yul\":931:934   */\n      0x00\n        /* \"#utility.yul\":953:1046   */\n      tag_27\n        /* \"#utility.yul\":1042:1045   */\n      dup3\n        /* \"#utility.yul\":1033:1039   */\n      dup5\n        /* \"#utility.yul\":953:1046   */\n      tag_17\n      jump\t// in\n    tag_27:\n        /* \"#utility.yul\":946:1046   */\n      swap2\n      pop\n        /* \"#utility.yul\":1063:1066   */\n      dup2\n        /* \"#utility.yul\":1056:1066   */\n      swap1\n      pop\n        /* \"#utility.yul\":801:1072   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212203c4e63d4d2b9fb481312ec0f253dffbcbd09fe0cbdb40ff4a8d628f4d938e64364736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b506101628061001c5f395ff3fe608060405234801561000f575f80fd5b5060043610610029575f3560e01c8063f8a8fd6d1461002d575b5f80fd5b610035610037565b005b5f5c15610042575f80fd5b60015f5d5f60405180602001604052805f81525090503373ffffffffffffffffffffffffffffffffffffffff168160405161007d9190610116565b5f604051808303815f865af19150503d805f81146100b6576040519150601f19603f3d011682016040523d82523d5f602084013e6100bb565b606091505b505050505f805d565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f6100f0826100c4565b6100fa81856100ce565b935061010a8185602086016100d8565b80840191505092915050565b5f61012182846100e6565b91508190509291505056fea26469706673582212203c4e63d4d2b9fb481312ec0f253dffbcbd09fe0cbdb40ff4a8d628f4d938e64364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x162 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xF8A8FD6D EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x35 PUSH2 0x37 JUMP JUMPDEST STOP JUMPDEST PUSH0 TLOAD ISZERO PUSH2 0x42 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 TSTORE PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x40 MLOAD PUSH2 0x7D SWAP2 SWAP1 PUSH2 0x116 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xB6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xBB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP POP PUSH0 DUP1 TSTORE JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF0 DUP3 PUSH2 0xC4 JUMP JUMPDEST PUSH2 0xFA DUP2 DUP6 PUSH2 0xCE JUMP JUMPDEST SWAP4 POP PUSH2 0x10A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD8 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x121 DUP3 DUP5 PUSH2 0xE6 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY 0x4E PUSH4 0xD4D2B9FB BASEFEE SGT SLT 0xEC 0xF 0x25 RETURNDATASIZE SELFDESTRUCT 0xBC 0xBD MULMOD INVALID 0xC 0xBD 0xB4 0xF DELEGATECALL 0xA8 0xD6 0x28 DELEGATECALL 0xD9 CODESIZE 0xE6 NUMBER PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "887:315:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@test_129": {
									"entryPoint": 55,
									"id": 129,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 230,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 278,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 196,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 206,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 216,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1075:1",
										"nodeType": "YulBlock",
										"src": "0:1075:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "65:40:1",
													"nodeType": "YulBlock",
													"src": "65:40:1",
													"statements": [
														{
															"nativeSrc": "76:22:1",
															"nodeType": "YulAssignment",
															"src": "76:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "92:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "92:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "86:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "86:5:1"
																},
																"nativeSrc": "86:12:1",
																"nodeType": "YulFunctionCall",
																"src": "86:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "76:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "76:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "7:98:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "48:5:1",
														"nodeType": "YulTypedName",
														"src": "48:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "58:6:1",
														"nodeType": "YulTypedName",
														"src": "58:6:1",
														"type": ""
													}
												],
												"src": "7:98:1"
											},
											{
												"body": {
													"nativeSrc": "224:34:1",
													"nodeType": "YulBlock",
													"src": "224:34:1",
													"statements": [
														{
															"nativeSrc": "234:18:1",
															"nodeType": "YulAssignment",
															"src": "234:18:1",
															"value": {
																"name": "pos",
																"nativeSrc": "249:3:1",
																"nodeType": "YulIdentifier",
																"src": "249:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "234:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "234:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "111:147:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "196:3:1",
														"nodeType": "YulTypedName",
														"src": "196:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "201:6:1",
														"nodeType": "YulTypedName",
														"src": "201:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "212:11:1",
														"nodeType": "YulTypedName",
														"src": "212:11:1",
														"type": ""
													}
												],
												"src": "111:147:1"
											},
											{
												"body": {
													"nativeSrc": "326:77:1",
													"nodeType": "YulBlock",
													"src": "326:77:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "343:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "343:3:1"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "348:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "348:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "353:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "353:6:1"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "337:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "337:5:1"
																},
																"nativeSrc": "337:23:1",
																"nodeType": "YulFunctionCall",
																"src": "337:23:1"
															},
															"nativeSrc": "337:23:1",
															"nodeType": "YulExpressionStatement",
															"src": "337:23:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "380:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "380:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "385:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "385:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "376:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "376:3:1"
																		},
																		"nativeSrc": "376:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "376:16:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "394:1:1",
																		"nodeType": "YulLiteral",
																		"src": "394:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "369:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "369:6:1"
																},
																"nativeSrc": "369:27:1",
																"nodeType": "YulFunctionCall",
																"src": "369:27:1"
															},
															"nativeSrc": "369:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "369:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "264:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "308:3:1",
														"nodeType": "YulTypedName",
														"src": "308:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "313:3:1",
														"nodeType": "YulTypedName",
														"src": "313:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "318:6:1",
														"nodeType": "YulTypedName",
														"src": "318:6:1",
														"type": ""
													}
												],
												"src": "264:139:1"
											},
											{
												"body": {
													"nativeSrc": "517:278:1",
													"nodeType": "YulBlock",
													"src": "517:278:1",
													"statements": [
														{
															"nativeSrc": "527:52:1",
															"nodeType": "YulVariableDeclaration",
															"src": "527:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "573:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "573:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "541:31:1",
																	"nodeType": "YulIdentifier",
																	"src": "541:31:1"
																},
																"nativeSrc": "541:38:1",
																"nodeType": "YulFunctionCall",
																"src": "541:38:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "531:6:1",
																	"nodeType": "YulTypedName",
																	"src": "531:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "588:95:1",
															"nodeType": "YulAssignment",
															"src": "588:95:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "671:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "671:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "676:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "676:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "595:75:1",
																	"nodeType": "YulIdentifier",
																	"src": "595:75:1"
																},
																"nativeSrc": "595:88:1",
																"nodeType": "YulFunctionCall",
																"src": "595:88:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "588:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "588:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "731:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "731:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "738:4:1",
																				"nodeType": "YulLiteral",
																				"src": "738:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "727:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "727:3:1"
																		},
																		"nativeSrc": "727:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "727:16:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "745:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "745:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "750:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "750:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "692:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "692:34:1"
																},
																"nativeSrc": "692:65:1",
																"nodeType": "YulFunctionCall",
																"src": "692:65:1"
															},
															"nativeSrc": "692:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "692:65:1"
														},
														{
															"nativeSrc": "766:23:1",
															"nodeType": "YulAssignment",
															"src": "766:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "777:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "777:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "782:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "782:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "773:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "773:3:1"
																},
																"nativeSrc": "773:16:1",
																"nodeType": "YulFunctionCall",
																"src": "773:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "766:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "766:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "409:386:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "498:5:1",
														"nodeType": "YulTypedName",
														"src": "498:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "505:3:1",
														"nodeType": "YulTypedName",
														"src": "505:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "513:3:1",
														"nodeType": "YulTypedName",
														"src": "513:3:1",
														"type": ""
													}
												],
												"src": "409:386:1"
											},
											{
												"body": {
													"nativeSrc": "935:137:1",
													"nodeType": "YulBlock",
													"src": "935:137:1",
													"statements": [
														{
															"nativeSrc": "946:100:1",
															"nodeType": "YulAssignment",
															"src": "946:100:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1033:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1033:6:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "1042:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1042:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "953:79:1",
																	"nodeType": "YulIdentifier",
																	"src": "953:79:1"
																},
																"nativeSrc": "953:93:1",
																"nodeType": "YulFunctionCall",
																"src": "953:93:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "946:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "946:3:1"
																}
															]
														},
														{
															"nativeSrc": "1056:10:1",
															"nodeType": "YulAssignment",
															"src": "1056:10:1",
															"value": {
																"name": "pos",
																"nativeSrc": "1063:3:1",
																"nodeType": "YulIdentifier",
																"src": "1063:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1056:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1056:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "801:271:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "914:3:1",
														"nodeType": "YulTypedName",
														"src": "914:3:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "920:6:1",
														"nodeType": "YulTypedName",
														"src": "920:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "931:3:1",
														"nodeType": "YulTypedName",
														"src": "931:3:1",
														"type": ""
													}
												],
												"src": "801:271:1"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610029575f3560e01c8063f8a8fd6d1461002d575b5f80fd5b610035610037565b005b5f5c15610042575f80fd5b60015f5d5f60405180602001604052805f81525090503373ffffffffffffffffffffffffffffffffffffffff168160405161007d9190610116565b5f604051808303815f865af19150503d805f81146100b6576040519150601f19603f3d011682016040523d82523d5f602084013e6100bb565b606091505b505050505f805d565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f6100f0826100c4565b6100fa81856100ce565b935061010a8185602086016100d8565b80840191505092915050565b5f61012182846100e6565b91508190509291505056fea26469706673582212203c4e63d4d2b9fb481312ec0f253dffbcbd09fe0cbdb40ff4a8d628f4d938e64364736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xF8A8FD6D EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x35 PUSH2 0x37 JUMP JUMPDEST STOP JUMPDEST PUSH0 TLOAD ISZERO PUSH2 0x42 JUMPI PUSH0 DUP1 REVERT JUMPDEST PUSH1 0x1 PUSH0 TSTORE PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x40 MLOAD PUSH2 0x7D SWAP2 SWAP1 PUSH2 0x116 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xB6 JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xBB JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP POP PUSH0 DUP1 TSTORE JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xF0 DUP3 PUSH2 0xC4 JUMP JUMPDEST PUSH2 0xFA DUP2 DUP6 PUSH2 0xCE JUMP JUMPDEST SWAP4 POP PUSH2 0x10A DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xD8 JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x121 DUP3 DUP5 PUSH2 0xE6 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 EXTCODECOPY 0x4E PUSH4 0xD4D2B9FB BASEFEE SGT SLT 0xEC 0xF 0x25 RETURNDATASIZE SELFDESTRUCT 0xBC 0xBD MULMOD INVALID 0xC 0xBD 0xB4 0xF DELEGATECALL 0xA8 0xD6 0x28 DELEGATECALL 0xD9 CODESIZE 0xE6 NUMBER PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "887:315:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1114:86;;;:::i;:::-;;;1004:4;998:11;995:27;;;1019:1;1017;1010:11;995:27;1043:1;1038:4;1031:14;1150::::1;:19;;;;;;;;;;;::::0;::::1;;1176:10;:15;;1192:1;1176:18;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1144:56;1096:1:::0;1091:4;1084:14;1114:86::o;7:98:1:-;58:6;92:5;86:12;76:22;;7:98;;;:::o;111:147::-;212:11;249:3;234:18;;111:147;;;;:::o;264:139::-;353:6;348:3;343;337:23;394:1;385:6;380:3;376:16;369:27;264:139;;;:::o;409:386::-;513:3;541:38;573:5;541:38;:::i;:::-;595:88;676:6;671:3;595:88;:::i;:::-;588:95;;692:65;750:6;745:3;738:4;731:5;727:16;692:65;:::i;:::-;782:6;777:3;773:16;766:23;;517:278;409:386;;;;:::o;801:271::-;931:3;953:93;1042:3;1033:6;953:93;:::i;:::-;946:100;;1063:3;1056:10;;801:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "70800",
								"executionCost": "121",
								"totalCost": "70921"
							},
							"external": {
								"test()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 887,
									"end": 1202,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 887,
									"end": 1202,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 887,
									"end": 1202,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 887,
									"end": 1202,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 887,
									"end": 1202,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 887,
									"end": 1202,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 887,
									"end": 1202,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 887,
									"end": 1202,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 887,
									"end": 1202,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 887,
									"end": 1202,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 887,
									"end": 1202,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 887,
									"end": 1202,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 887,
									"end": 1202,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 887,
									"end": 1202,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 887,
									"end": 1202,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 887,
									"end": 1202,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 887,
									"end": 1202,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 887,
									"end": 1202,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 887,
									"end": 1202,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 887,
									"end": 1202,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 887,
									"end": 1202,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212203c4e63d4d2b9fb481312ec0f253dffbcbd09fe0cbdb40ff4a8d628f4d938e64364736f6c634300081a0033",
									".code": [
										{
											"begin": 887,
											"end": 1202,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 887,
											"end": 1202,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 887,
											"end": 1202,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 887,
											"end": 1202,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 887,
											"end": 1202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 887,
											"end": 1202,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 887,
											"end": 1202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 887,
											"end": 1202,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 887,
											"end": 1202,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 1202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 887,
											"end": 1202,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 887,
											"end": 1202,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 887,
											"end": 1202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 887,
											"end": 1202,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 887,
											"end": 1202,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 887,
											"end": 1202,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 887,
											"end": 1202,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 887,
											"end": 1202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 887,
											"end": 1202,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 887,
											"end": 1202,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 1202,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 887,
											"end": 1202,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 887,
											"end": 1202,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 887,
											"end": 1202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 887,
											"end": 1202,
											"name": "PUSH",
											"source": 0,
											"value": "F8A8FD6D"
										},
										{
											"begin": 887,
											"end": 1202,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 887,
											"end": 1202,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 887,
											"end": 1202,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 887,
											"end": 1202,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 887,
											"end": 1202,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 887,
											"end": 1202,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 887,
											"end": 1202,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 887,
											"end": 1202,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1200,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1114,
											"end": 1200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1114,
											"end": 1200,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1114,
											"end": 1200,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1200,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1114,
											"end": 1200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1200,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1200,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1114,
											"end": 1200,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1004,
											"end": 1008,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 998,
											"end": 1009,
											"name": "TLOAD",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1022,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1022,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 995,
											"end": 1022,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1019,
											"end": 1020,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1017,
											"end": 1018,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1010,
											"end": 1021,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 995,
											"end": 1022,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 995,
											"end": 1022,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1043,
											"end": 1044,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1038,
											"end": 1042,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1031,
											"end": 1045,
											"name": "TSTORE",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1164,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1150,
											"end": 1169,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1150,
											"end": 1169,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1169,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1169,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1150,
											"end": 1169,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1169,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1150,
											"end": 1169,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1169,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1169,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1150,
											"end": 1169,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1169,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1169,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1169,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1150,
											"end": 1169,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1186,
											"modifierDepth": 1,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1191,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1176,
											"end": 1191,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1192,
											"end": 1193,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1176,
											"end": 1194,
											"jumpType": "[in]",
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1176,
											"end": 1194,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1144,
											"end": 1200,
											"modifierDepth": 1,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1096,
											"end": 1097,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1091,
											"end": 1095,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1084,
											"end": 1098,
											"name": "TSTORE",
											"source": 0
										},
										{
											"begin": 1114,
											"end": 1200,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 105,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 7,
											"end": 105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 58,
											"end": 64,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 92,
											"end": 97,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 86,
											"end": 98,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 76,
											"end": 98,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 76,
											"end": 98,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 105,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 105,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 111,
											"end": 258,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 111,
											"end": 258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 212,
											"end": 223,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 234,
											"end": 252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 234,
											"end": 252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 111,
											"end": 258,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 111,
											"end": 258,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 111,
											"end": 258,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 111,
											"end": 258,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 111,
											"end": 258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 264,
											"end": 403,
											"name": "tag",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 264,
											"end": 403,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 353,
											"end": 359,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 348,
											"end": 351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 343,
											"end": 346,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 337,
											"end": 360,
											"name": "MCOPY",
											"source": 1
										},
										{
											"begin": 394,
											"end": 395,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 385,
											"end": 391,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 380,
											"end": 383,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 376,
											"end": 392,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 369,
											"end": 396,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 264,
											"end": 403,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 264,
											"end": 403,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 264,
											"end": 403,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 264,
											"end": 403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 409,
											"end": 795,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 409,
											"end": 795,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 513,
											"end": 516,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 541,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 573,
											"end": 578,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 541,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 541,
											"end": 579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 541,
											"end": 579,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 541,
											"end": 579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 595,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 676,
											"end": 682,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 671,
											"end": 674,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 595,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 595,
											"end": 683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 595,
											"end": 683,
											"name": "tag",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 595,
											"end": 683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 588,
											"end": 683,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 588,
											"end": 683,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 692,
											"end": 757,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 750,
											"end": 756,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 745,
											"end": 748,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 738,
											"end": 742,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 731,
											"end": 736,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 727,
											"end": 743,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 692,
											"end": 757,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "16"
										},
										{
											"begin": 692,
											"end": 757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 692,
											"end": 757,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 692,
											"end": 757,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 782,
											"end": 788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 777,
											"end": 780,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 773,
											"end": 789,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 766,
											"end": 789,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 766,
											"end": 789,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 517,
											"end": 795,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 409,
											"end": 795,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 409,
											"end": 795,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 409,
											"end": 795,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 409,
											"end": 795,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 409,
											"end": 795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 801,
											"end": 1072,
											"name": "tag",
											"source": 1,
											"value": "10"
										},
										{
											"begin": 801,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 931,
											"end": 934,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 953,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 1042,
											"end": 1045,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1033,
											"end": 1039,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 953,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 953,
											"end": 1046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 953,
											"end": 1046,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 953,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 946,
											"end": 1046,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 946,
											"end": 1046,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1066,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1066,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1066,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 801,
											"end": 1072,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 801,
											"end": 1072,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 801,
											"end": 1072,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 801,
											"end": 1072,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 801,
											"end": 1072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"homework/经典用例/Storage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"test()": "f8a8fd6d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"test\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"homework/\\u7ecf\\u5178\\u7528\\u4f8b/Storage.sol\":\"ReentrancyGuardTransient\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"homework/\\u7ecf\\u5178\\u7528\\u4f8b/Storage.sol\":{\"keccak256\":\"0x2b0a884467c4cd807a52a96f7f455779eefb57b334f1c69677eea472a6521912\",\"urls\":[\"bzz-raw://c2dc382f1a97c42d5d620ebdae47ad13595161e75a8be703c0ba790ad95d27a9\",\"dweb:/ipfs/QmSovcs1CU6CwVUnKpEJ9ioL6zDr8GhjcJruwd4mrSuVsN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"TestStorage": {
					"abi": [
						{
							"inputs": [],
							"name": "test",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						},
						{
							"inputs": [],
							"name": "val",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "view",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":339:499  contract TestStorage {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":339:499  contract TestStorage {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x3c6bb436\n      eq\n      tag_3\n      jumpi\n      dup1\n      0xf8a8fd6d\n      eq\n      tag_4\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":366:384  uint256 public val */\n    tag_3:\n      tag_5\n      tag_6\n      jump\t// in\n    tag_5:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":391:497  function test() public {... */\n    tag_4:\n      tag_9\n      tag_10\n      jump\t// in\n    tag_9:\n      stop\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":366:384  uint256 public val */\n    tag_6:\n      sload(0x00)\n      dup2\n      jump\t// out\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":391:497  function test() public {... */\n    tag_10:\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":430:433  123 */\n      0x7b\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":424:427  val */\n      0x00\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":424:433  val = 123 */\n      dup2\n      swap1\n      sstore\n      pop\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":443:457  bytes memory b */\n      0x00\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":443:462  bytes memory b = \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":472:482  msg.sender */\n      caller\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":472:487  msg.sender.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":488:489  b */\n      dup2\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":472:490  msg.sender.call(b) */\n      mload(0x40)\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_16\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_15)\n    tag_16:\n      0x60\n      swap2\n      pop\n    tag_15:\n      pop\n      pop\n      pop\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":414:497  {... */\n      pop\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":391:497  function test() public {... */\n      jump\t// out\n        /* \"#utility.yul\":7:84   */\n    tag_17:\n        /* \"#utility.yul\":44:51   */\n      0x00\n        /* \"#utility.yul\":73:78   */\n      dup2\n        /* \"#utility.yul\":62:78   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:84   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":90:208   */\n    tag_18:\n        /* \"#utility.yul\":177:201   */\n      tag_26\n        /* \"#utility.yul\":195:200   */\n      dup2\n        /* \"#utility.yul\":177:201   */\n      tag_17\n      jump\t// in\n    tag_26:\n        /* \"#utility.yul\":172:175   */\n      dup3\n        /* \"#utility.yul\":165:202   */\n      mstore\n        /* \"#utility.yul\":90:208   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":214:436   */\n    tag_8:\n        /* \"#utility.yul\":307:311   */\n      0x00\n        /* \"#utility.yul\":345:347   */\n      0x20\n        /* \"#utility.yul\":334:343   */\n      dup3\n        /* \"#utility.yul\":330:348   */\n      add\n        /* \"#utility.yul\":322:348   */\n      swap1\n      pop\n        /* \"#utility.yul\":358:429   */\n      tag_28\n        /* \"#utility.yul\":426:427   */\n      0x00\n        /* \"#utility.yul\":415:424   */\n      dup4\n        /* \"#utility.yul\":411:428   */\n      add\n        /* \"#utility.yul\":402:408   */\n      dup5\n        /* \"#utility.yul\":358:429   */\n      tag_18\n      jump\t// in\n    tag_28:\n        /* \"#utility.yul\":214:436   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":442:540   */\n    tag_19:\n        /* \"#utility.yul\":493:499   */\n      0x00\n        /* \"#utility.yul\":527:532   */\n      dup2\n        /* \"#utility.yul\":521:533   */\n      mload\n        /* \"#utility.yul\":511:533   */\n      swap1\n      pop\n        /* \"#utility.yul\":442:540   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":546:693   */\n    tag_20:\n        /* \"#utility.yul\":647:658   */\n      0x00\n        /* \"#utility.yul\":684:687   */\n      dup2\n        /* \"#utility.yul\":669:687   */\n      swap1\n      pop\n        /* \"#utility.yul\":546:693   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":699:838   */\n    tag_21:\n        /* \"#utility.yul\":788:794   */\n      dup3\n        /* \"#utility.yul\":783:786   */\n      dup2\n        /* \"#utility.yul\":778:781   */\n      dup4\n        /* \"#utility.yul\":772:795   */\n      mcopy\n        /* \"#utility.yul\":829:830   */\n      0x00\n        /* \"#utility.yul\":820:826   */\n      dup4\n        /* \"#utility.yul\":815:818   */\n      dup4\n        /* \"#utility.yul\":811:827   */\n      add\n        /* \"#utility.yul\":804:831   */\n      mstore\n        /* \"#utility.yul\":699:838   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":844:1230   */\n    tag_22:\n        /* \"#utility.yul\":948:951   */\n      0x00\n        /* \"#utility.yul\":976:1014   */\n      tag_33\n        /* \"#utility.yul\":1008:1013   */\n      dup3\n        /* \"#utility.yul\":976:1014   */\n      tag_19\n      jump\t// in\n    tag_33:\n        /* \"#utility.yul\":1030:1118   */\n      tag_34\n        /* \"#utility.yul\":1111:1117   */\n      dup2\n        /* \"#utility.yul\":1106:1109   */\n      dup6\n        /* \"#utility.yul\":1030:1118   */\n      tag_20\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":1023:1118   */\n      swap4\n      pop\n        /* \"#utility.yul\":1127:1192   */\n      tag_35\n        /* \"#utility.yul\":1185:1191   */\n      dup2\n        /* \"#utility.yul\":1180:1183   */\n      dup6\n        /* \"#utility.yul\":1173:1177   */\n      0x20\n        /* \"#utility.yul\":1166:1171   */\n      dup7\n        /* \"#utility.yul\":1162:1178   */\n      add\n        /* \"#utility.yul\":1127:1192   */\n      tag_21\n      jump\t// in\n    tag_35:\n        /* \"#utility.yul\":1217:1223   */\n      dup1\n        /* \"#utility.yul\":1212:1215   */\n      dup5\n        /* \"#utility.yul\":1208:1224   */\n      add\n        /* \"#utility.yul\":1201:1224   */\n      swap2\n      pop\n        /* \"#utility.yul\":952:1230   */\n      pop\n        /* \"#utility.yul\":844:1230   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1236:1507   */\n    tag_13:\n        /* \"#utility.yul\":1366:1369   */\n      0x00\n        /* \"#utility.yul\":1388:1481   */\n      tag_37\n        /* \"#utility.yul\":1477:1480   */\n      dup3\n        /* \"#utility.yul\":1468:1474   */\n      dup5\n        /* \"#utility.yul\":1388:1481   */\n      tag_22\n      jump\t// in\n    tag_37:\n        /* \"#utility.yul\":1381:1481   */\n      swap2\n      pop\n        /* \"#utility.yul\":1498:1501   */\n      dup2\n        /* \"#utility.yul\":1491:1501   */\n      swap1\n      pop\n        /* \"#utility.yul\":1236:1507   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa264697066735822122058fcc5e1aff4340f03099f7075daef4c9c46ba45c5f9525115bf63ea8caf82d664736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b506101b68061001c5f395ff3fe608060405234801561000f575f80fd5b5060043610610034575f3560e01c80633c6bb43614610038578063f8a8fd6d14610056575b5f80fd5b610040610060565b60405161004d91906100ff565b60405180910390f35b61005e610065565b005b5f5481565b607b5f819055505f60405180602001604052805f81525090503373ffffffffffffffffffffffffffffffffffffffff16816040516100a3919061016a565b5f604051808303815f865af19150503d805f81146100dc576040519150601f19603f3d011682016040523d82523d5f602084013e6100e1565b606091505b50505050565b5f819050919050565b6100f9816100e7565b82525050565b5f6020820190506101125f8301846100f0565b92915050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f61014482610118565b61014e8185610122565b935061015e81856020860161012c565b80840191505092915050565b5f610175828461013a565b91508190509291505056fea264697066735822122058fcc5e1aff4340f03099f7075daef4c9c46ba45c5f9525115bf63ea8caf82d664736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x1B6 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3C6BB436 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0xF8A8FD6D EQ PUSH2 0x56 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x40 PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D SWAP2 SWAP1 PUSH2 0xFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E PUSH2 0x65 JUMP JUMPDEST STOP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7B PUSH0 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x40 MLOAD PUSH2 0xA3 SWAP2 SWAP1 PUSH2 0x16A JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xDC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xE1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF9 DUP2 PUSH2 0xE7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x112 PUSH0 DUP4 ADD DUP5 PUSH2 0xF0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x144 DUP3 PUSH2 0x118 JUMP JUMPDEST PUSH2 0x14E DUP2 DUP6 PUSH2 0x122 JUMP JUMPDEST SWAP4 POP PUSH2 0x15E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x12C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x175 DUP3 DUP5 PUSH2 0x13A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC 0xFC 0xC5 0xE1 0xAF DELEGATECALL CALLVALUE 0xF SUB MULMOD SWAP16 PUSH17 0x75DAEF4C9C46BA45C5F9525115BF63EA8C 0xAF DUP3 0xD6 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "339:160:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@test_60": {
									"entryPoint": 101,
									"id": 60,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"@val_40": {
									"entryPoint": 96,
									"id": 40,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 314,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack": {
									"entryPoint": 240,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 362,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed": {
									"entryPoint": 255,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 280,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 290,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 231,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 300,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1510:1",
										"nodeType": "YulBlock",
										"src": "0:1510:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "52:32:1",
													"nodeType": "YulBlock",
													"src": "52:32:1",
													"statements": [
														{
															"nativeSrc": "62:16:1",
															"nodeType": "YulAssignment",
															"src": "62:16:1",
															"value": {
																"name": "value",
																"nativeSrc": "73:5:1",
																"nodeType": "YulIdentifier",
																"src": "73:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nativeSrc": "62:7:1",
																	"nodeType": "YulIdentifier",
																	"src": "62:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nativeSrc": "7:77:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "34:5:1",
														"nodeType": "YulTypedName",
														"src": "34:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nativeSrc": "44:7:1",
														"nodeType": "YulTypedName",
														"src": "44:7:1",
														"type": ""
													}
												],
												"src": "7:77:1"
											},
											{
												"body": {
													"nativeSrc": "155:53:1",
													"nodeType": "YulBlock",
													"src": "155:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "172:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "172:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "195:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "195:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nativeSrc": "177:17:1",
																			"nodeType": "YulIdentifier",
																			"src": "177:17:1"
																		},
																		"nativeSrc": "177:24:1",
																		"nodeType": "YulFunctionCall",
																		"src": "177:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "165:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "165:6:1"
																},
																"nativeSrc": "165:37:1",
																"nodeType": "YulFunctionCall",
																"src": "165:37:1"
															},
															"nativeSrc": "165:37:1",
															"nodeType": "YulExpressionStatement",
															"src": "165:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
												"nativeSrc": "90:118:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "143:5:1",
														"nodeType": "YulTypedName",
														"src": "143:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "150:3:1",
														"nodeType": "YulTypedName",
														"src": "150:3:1",
														"type": ""
													}
												],
												"src": "90:118:1"
											},
											{
												"body": {
													"nativeSrc": "312:124:1",
													"nodeType": "YulBlock",
													"src": "312:124:1",
													"statements": [
														{
															"nativeSrc": "322:26:1",
															"nodeType": "YulAssignment",
															"src": "322:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nativeSrc": "334:9:1",
																		"nodeType": "YulIdentifier",
																		"src": "334:9:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "345:2:1",
																		"nodeType": "YulLiteral",
																		"src": "345:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "330:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "330:3:1"
																},
																"nativeSrc": "330:18:1",
																"nodeType": "YulFunctionCall",
																"src": "330:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nativeSrc": "322:4:1",
																	"nodeType": "YulIdentifier",
																	"src": "322:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "402:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "402:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nativeSrc": "415:9:1",
																				"nodeType": "YulIdentifier",
																				"src": "415:9:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "426:1:1",
																				"nodeType": "YulLiteral",
																				"src": "426:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "411:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "411:3:1"
																		},
																		"nativeSrc": "411:17:1",
																		"nodeType": "YulFunctionCall",
																		"src": "411:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack",
																	"nativeSrc": "358:43:1",
																	"nodeType": "YulIdentifier",
																	"src": "358:43:1"
																},
																"nativeSrc": "358:71:1",
																"nodeType": "YulFunctionCall",
																"src": "358:71:1"
															},
															"nativeSrc": "358:71:1",
															"nodeType": "YulExpressionStatement",
															"src": "358:71:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
												"nativeSrc": "214:222:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nativeSrc": "284:9:1",
														"nodeType": "YulTypedName",
														"src": "284:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "296:6:1",
														"nodeType": "YulTypedName",
														"src": "296:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nativeSrc": "307:4:1",
														"nodeType": "YulTypedName",
														"src": "307:4:1",
														"type": ""
													}
												],
												"src": "214:222:1"
											},
											{
												"body": {
													"nativeSrc": "500:40:1",
													"nodeType": "YulBlock",
													"src": "500:40:1",
													"statements": [
														{
															"nativeSrc": "511:22:1",
															"nodeType": "YulAssignment",
															"src": "511:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "527:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "527:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "521:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "521:5:1"
																},
																"nativeSrc": "521:12:1",
																"nodeType": "YulFunctionCall",
																"src": "521:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "511:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "511:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "442:98:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "483:5:1",
														"nodeType": "YulTypedName",
														"src": "483:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "493:6:1",
														"nodeType": "YulTypedName",
														"src": "493:6:1",
														"type": ""
													}
												],
												"src": "442:98:1"
											},
											{
												"body": {
													"nativeSrc": "659:34:1",
													"nodeType": "YulBlock",
													"src": "659:34:1",
													"statements": [
														{
															"nativeSrc": "669:18:1",
															"nodeType": "YulAssignment",
															"src": "669:18:1",
															"value": {
																"name": "pos",
																"nativeSrc": "684:3:1",
																"nodeType": "YulIdentifier",
																"src": "684:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "669:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "669:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "546:147:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "631:3:1",
														"nodeType": "YulTypedName",
														"src": "631:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "636:6:1",
														"nodeType": "YulTypedName",
														"src": "636:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "647:11:1",
														"nodeType": "YulTypedName",
														"src": "647:11:1",
														"type": ""
													}
												],
												"src": "546:147:1"
											},
											{
												"body": {
													"nativeSrc": "761:77:1",
													"nodeType": "YulBlock",
													"src": "761:77:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "778:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "778:3:1"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "783:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "783:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "788:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "788:6:1"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "772:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "772:5:1"
																},
																"nativeSrc": "772:23:1",
																"nodeType": "YulFunctionCall",
																"src": "772:23:1"
															},
															"nativeSrc": "772:23:1",
															"nodeType": "YulExpressionStatement",
															"src": "772:23:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "815:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "815:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "820:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "820:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "811:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "811:3:1"
																		},
																		"nativeSrc": "811:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "811:16:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "829:1:1",
																		"nodeType": "YulLiteral",
																		"src": "829:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "804:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "804:6:1"
																},
																"nativeSrc": "804:27:1",
																"nodeType": "YulFunctionCall",
																"src": "804:27:1"
															},
															"nativeSrc": "804:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "804:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "699:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "743:3:1",
														"nodeType": "YulTypedName",
														"src": "743:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "748:3:1",
														"nodeType": "YulTypedName",
														"src": "748:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "753:6:1",
														"nodeType": "YulTypedName",
														"src": "753:6:1",
														"type": ""
													}
												],
												"src": "699:139:1"
											},
											{
												"body": {
													"nativeSrc": "952:278:1",
													"nodeType": "YulBlock",
													"src": "952:278:1",
													"statements": [
														{
															"nativeSrc": "962:52:1",
															"nodeType": "YulVariableDeclaration",
															"src": "962:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "1008:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "1008:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "976:31:1",
																	"nodeType": "YulIdentifier",
																	"src": "976:31:1"
																},
																"nativeSrc": "976:38:1",
																"nodeType": "YulFunctionCall",
																"src": "976:38:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "966:6:1",
																	"nodeType": "YulTypedName",
																	"src": "966:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "1023:95:1",
															"nodeType": "YulAssignment",
															"src": "1023:95:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1106:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1106:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1111:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1111:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "1030:75:1",
																	"nodeType": "YulIdentifier",
																	"src": "1030:75:1"
																},
																"nativeSrc": "1030:88:1",
																"nodeType": "YulFunctionCall",
																"src": "1030:88:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1023:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1023:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "1166:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "1166:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "1173:4:1",
																				"nodeType": "YulLiteral",
																				"src": "1173:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "1162:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "1162:3:1"
																		},
																		"nativeSrc": "1162:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "1162:16:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "1180:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1180:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1185:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1185:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "1127:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "1127:34:1"
																},
																"nativeSrc": "1127:65:1",
																"nodeType": "YulFunctionCall",
																"src": "1127:65:1"
															},
															"nativeSrc": "1127:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "1127:65:1"
														},
														{
															"nativeSrc": "1201:23:1",
															"nodeType": "YulAssignment",
															"src": "1201:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "1212:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1212:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "1217:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1217:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "1208:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1208:3:1"
																},
																"nativeSrc": "1208:16:1",
																"nodeType": "YulFunctionCall",
																"src": "1208:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1201:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1201:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "844:386:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "933:5:1",
														"nodeType": "YulTypedName",
														"src": "933:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "940:3:1",
														"nodeType": "YulTypedName",
														"src": "940:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "948:3:1",
														"nodeType": "YulTypedName",
														"src": "948:3:1",
														"type": ""
													}
												],
												"src": "844:386:1"
											},
											{
												"body": {
													"nativeSrc": "1370:137:1",
													"nodeType": "YulBlock",
													"src": "1370:137:1",
													"statements": [
														{
															"nativeSrc": "1381:100:1",
															"nodeType": "YulAssignment",
															"src": "1381:100:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1468:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1468:6:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "1477:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1477:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "1388:79:1",
																	"nodeType": "YulIdentifier",
																	"src": "1388:79:1"
																},
																"nativeSrc": "1388:93:1",
																"nodeType": "YulFunctionCall",
																"src": "1388:93:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "1381:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1381:3:1"
																}
															]
														},
														{
															"nativeSrc": "1491:10:1",
															"nodeType": "YulAssignment",
															"src": "1491:10:1",
															"value": {
																"name": "pos",
																"nativeSrc": "1498:3:1",
																"nodeType": "YulIdentifier",
																"src": "1498:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1491:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1491:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "1236:271:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "1349:3:1",
														"nodeType": "YulTypedName",
														"src": "1349:3:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "1355:6:1",
														"nodeType": "YulTypedName",
														"src": "1355:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "1366:3:1",
														"nodeType": "YulTypedName",
														"src": "1366:3:1",
														"type": ""
													}
												],
												"src": "1236:271:1"
											}
										]
									},
									"contents": "{\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610034575f3560e01c80633c6bb43614610038578063f8a8fd6d14610056575b5f80fd5b610040610060565b60405161004d91906100ff565b60405180910390f35b61005e610065565b005b5f5481565b607b5f819055505f60405180602001604052805f81525090503373ffffffffffffffffffffffffffffffffffffffff16816040516100a3919061016a565b5f604051808303815f865af19150503d805f81146100dc576040519150601f19603f3d011682016040523d82523d5f602084013e6100e1565b606091505b50505050565b5f819050919050565b6100f9816100e7565b82525050565b5f6020820190506101125f8301846100f0565b92915050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f61014482610118565b61014e8185610122565b935061015e81856020860161012c565b80840191505092915050565b5f610175828461013a565b91508190509291505056fea264697066735822122058fcc5e1aff4340f03099f7075daef4c9c46ba45c5f9525115bf63ea8caf82d664736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x34 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x3C6BB436 EQ PUSH2 0x38 JUMPI DUP1 PUSH4 0xF8A8FD6D EQ PUSH2 0x56 JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x40 PUSH2 0x60 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x4D SWAP2 SWAP1 PUSH2 0xFF JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x5E PUSH2 0x65 JUMP JUMPDEST STOP JUMPDEST PUSH0 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x7B PUSH0 DUP2 SWAP1 SSTORE POP PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x40 MLOAD PUSH2 0xA3 SWAP2 SWAP1 PUSH2 0x16A JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xDC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xE1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF9 DUP2 PUSH2 0xE7 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x112 PUSH0 DUP4 ADD DUP5 PUSH2 0xF0 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0x144 DUP3 PUSH2 0x118 JUMP JUMPDEST PUSH2 0x14E DUP2 DUP6 PUSH2 0x122 JUMP JUMPDEST SWAP4 POP PUSH2 0x15E DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x12C JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x175 DUP3 DUP5 PUSH2 0x13A JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PC 0xFC 0xC5 0xE1 0xAF DELEGATECALL CALLVALUE 0xF SUB MULMOD SWAP16 PUSH17 0x75DAEF4C9C46BA45C5F9525115BF63EA8C 0xAF DUP3 0xD6 PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "339:160:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;366:18;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;391:106;;;:::i;:::-;;366:18;;;;:::o;391:106::-;430:3;424;:9;;;;443:14;:19;;;;;;;;;;;;;;472:10;:15;;488:1;472:18;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;414:83;391:106::o;7:77:1:-;44:7;73:5;62:16;;7:77;;;:::o;90:118::-;177:24;195:5;177:24;:::i;:::-;172:3;165:37;90:118;;:::o;214:222::-;307:4;345:2;334:9;330:18;322:26;;358:71;426:1;415:9;411:17;402:6;358:71;:::i;:::-;214:222;;;;:::o;442:98::-;493:6;527:5;521:12;511:22;;442:98;;;:::o;546:147::-;647:11;684:3;669:18;;546:147;;;;:::o;699:139::-;788:6;783:3;778;772:23;829:1;820:6;815:3;811:16;804:27;699:139;;;:::o;844:386::-;948:3;976:38;1008:5;976:38;:::i;:::-;1030:88;1111:6;1106:3;1030:88;:::i;:::-;1023:95;;1127:65;1185:6;1180:3;1173:4;1166:5;1162:16;1127:65;:::i;:::-;1217:6;1212:3;1208:16;1201:23;;952:278;844:386;;;;:::o;1236:271::-;1366:3;1388:93;1477:3;1468:6;1388:93;:::i;:::-;1381:100;;1498:3;1491:10;;1236:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "87600",
								"executionCost": "133",
								"totalCost": "87733"
							},
							"external": {
								"test()": "infinite",
								"val()": "2402"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 339,
									"end": 499,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 339,
									"end": 499,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 339,
									"end": 499,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 339,
									"end": 499,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 339,
									"end": 499,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 339,
									"end": 499,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 339,
									"end": 499,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 339,
									"end": 499,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 339,
									"end": 499,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 339,
									"end": 499,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 339,
									"end": 499,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 339,
									"end": 499,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 339,
									"end": 499,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 339,
									"end": 499,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 339,
									"end": 499,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 339,
									"end": 499,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 339,
									"end": 499,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 339,
									"end": 499,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 339,
									"end": 499,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 339,
									"end": 499,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 339,
									"end": 499,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a264697066735822122058fcc5e1aff4340f03099f7075daef4c9c46ba45c5f9525115bf63ea8caf82d664736f6c634300081a0033",
									".code": [
										{
											"begin": 339,
											"end": 499,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 339,
											"end": 499,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 339,
											"end": 499,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 339,
											"end": 499,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 339,
											"end": 499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 339,
											"end": 499,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 339,
											"end": 499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 339,
											"end": 499,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 339,
											"end": 499,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 339,
											"end": 499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 339,
											"end": 499,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 339,
											"end": 499,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 339,
											"end": 499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 339,
											"end": 499,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 339,
											"end": 499,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 339,
											"end": 499,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 339,
											"end": 499,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 339,
											"end": 499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 339,
											"end": 499,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 339,
											"end": 499,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 339,
											"end": 499,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 339,
											"end": 499,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 339,
											"end": 499,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 339,
											"end": 499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 339,
											"end": 499,
											"name": "PUSH",
											"source": 0,
											"value": "3C6BB436"
										},
										{
											"begin": 339,
											"end": 499,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 339,
											"end": 499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 339,
											"end": 499,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 339,
											"end": 499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 339,
											"end": 499,
											"name": "PUSH",
											"source": 0,
											"value": "F8A8FD6D"
										},
										{
											"begin": 339,
											"end": 499,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 339,
											"end": 499,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 339,
											"end": 499,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 339,
											"end": 499,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 339,
											"end": 499,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 339,
											"end": 499,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 339,
											"end": 499,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 339,
											"end": 499,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 366,
											"end": 384,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 366,
											"end": 384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 366,
											"end": 384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 366,
											"end": 384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 366,
											"end": 384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 366,
											"end": 384,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 366,
											"end": 384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 366,
											"end": 384,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 366,
											"end": 384,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 366,
											"end": 384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 366,
											"end": 384,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 366,
											"end": 384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 366,
											"end": 384,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 366,
											"end": 384,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 366,
											"end": 384,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 366,
											"end": 384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 366,
											"end": 384,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 366,
											"end": 384,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 366,
											"end": 384,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 366,
											"end": 384,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 366,
											"end": 384,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 366,
											"end": 384,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 366,
											"end": 384,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 391,
											"end": 497,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 391,
											"end": 497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 391,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 391,
											"end": 497,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 391,
											"end": 497,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 391,
											"end": 497,
											"name": "tag",
											"source": 0,
											"value": "9"
										},
										{
											"begin": 391,
											"end": 497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 391,
											"end": 497,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 366,
											"end": 384,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 366,
											"end": 384,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 366,
											"end": 384,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 366,
											"end": 384,
											"name": "SLOAD",
											"source": 0
										},
										{
											"begin": 366,
											"end": 384,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 366,
											"end": 384,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 391,
											"end": 497,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 391,
											"end": 497,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 430,
											"end": 433,
											"name": "PUSH",
											"source": 0,
											"value": "7B"
										},
										{
											"begin": 424,
											"end": 427,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 424,
											"end": 433,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 424,
											"end": 433,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 424,
											"end": 433,
											"name": "SSTORE",
											"source": 0
										},
										{
											"begin": 424,
											"end": 433,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 443,
											"end": 457,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 443,
											"end": 462,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 443,
											"end": 462,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 443,
											"end": 462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 443,
											"end": 462,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 443,
											"end": 462,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 443,
											"end": 462,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 443,
											"end": 462,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 443,
											"end": 462,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 443,
											"end": 462,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 443,
											"end": 462,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 443,
											"end": 462,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 443,
											"end": 462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 443,
											"end": 462,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 443,
											"end": 462,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 472,
											"end": 482,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 472,
											"end": 487,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 472,
											"end": 487,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 488,
											"end": 489,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 472,
											"end": 490,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 490,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 472,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 472,
											"end": 490,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 472,
											"end": 490,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 472,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 472,
											"end": 490,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 472,
											"end": 490,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 472,
											"end": 490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 472,
											"end": 490,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 472,
											"end": 490,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 490,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 472,
											"end": 490,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 472,
											"end": 490,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 472,
											"end": 490,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 472,
											"end": 490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 472,
											"end": 490,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 472,
											"end": 490,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 472,
											"end": 490,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 472,
											"end": 490,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 472,
											"end": 490,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 472,
											"end": 490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 472,
											"end": 490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 472,
											"end": 490,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 472,
											"end": 490,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 472,
											"end": 490,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 472,
											"end": 490,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 472,
											"end": 490,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 472,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 472,
											"end": 490,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 472,
											"end": 490,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 490,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 472,
											"end": 490,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 472,
											"end": 490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 472,
											"end": 490,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 472,
											"end": 490,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 472,
											"end": 490,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 472,
											"end": 490,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 472,
											"end": 490,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 472,
											"end": 490,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 472,
											"end": 490,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 472,
											"end": 490,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 472,
											"end": 490,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 472,
											"end": 490,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 472,
											"end": 490,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 472,
											"end": 490,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 472,
											"end": 490,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 472,
											"end": 490,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 472,
											"end": 490,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 472,
											"end": 490,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 472,
											"end": 490,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 472,
											"end": 490,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 472,
											"end": 490,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 472,
											"end": 490,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 472,
											"end": 490,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 472,
											"end": 490,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 472,
											"end": 490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 472,
											"end": 490,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 472,
											"end": 490,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 472,
											"end": 490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 472,
											"end": 490,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 472,
											"end": 490,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 472,
											"end": 490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 472,
											"end": 490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 472,
											"end": 490,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 414,
											"end": 497,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 391,
											"end": 497,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 84,
											"name": "tag",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 7,
											"end": 84,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 44,
											"end": 51,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 73,
											"end": 78,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 62,
											"end": 78,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 84,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "tag",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 90,
											"end": 208,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 195,
											"end": 200,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "17"
										},
										{
											"begin": 177,
											"end": 201,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 177,
											"end": 201,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 177,
											"end": 201,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 172,
											"end": 175,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 165,
											"end": 202,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 90,
											"end": 208,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 214,
											"end": 436,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 307,
											"end": 311,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 345,
											"end": 347,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 334,
											"end": 343,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 330,
											"end": 348,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 322,
											"end": 348,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 426,
											"end": 427,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 415,
											"end": 424,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 411,
											"end": 428,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 402,
											"end": 408,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "18"
										},
										{
											"begin": 358,
											"end": 429,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 358,
											"end": 429,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 358,
											"end": 429,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 214,
											"end": 436,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 442,
											"end": 540,
											"name": "tag",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 442,
											"end": 540,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 493,
											"end": 499,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 527,
											"end": 532,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 521,
											"end": 533,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 511,
											"end": 533,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 511,
											"end": 533,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 442,
											"end": 540,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 442,
											"end": 540,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 442,
											"end": 540,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 442,
											"end": 540,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 546,
											"end": 693,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 546,
											"end": 693,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 647,
											"end": 658,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 684,
											"end": 687,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 669,
											"end": 687,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 669,
											"end": 687,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 546,
											"end": 693,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 546,
											"end": 693,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 546,
											"end": 693,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 546,
											"end": 693,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 546,
											"end": 693,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 699,
											"end": 838,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 699,
											"end": 838,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 788,
											"end": 794,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 783,
											"end": 786,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 778,
											"end": 781,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 772,
											"end": 795,
											"name": "MCOPY",
											"source": 1
										},
										{
											"begin": 829,
											"end": 830,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 820,
											"end": 826,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 815,
											"end": 818,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 811,
											"end": 827,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 804,
											"end": 831,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 699,
											"end": 838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 699,
											"end": 838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 699,
											"end": 838,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 699,
											"end": 838,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 844,
											"end": 1230,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 844,
											"end": 1230,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 948,
											"end": 951,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 976,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 1008,
											"end": 1013,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 976,
											"end": 1014,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "19"
										},
										{
											"begin": 976,
											"end": 1014,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 976,
											"end": 1014,
											"name": "tag",
											"source": 1,
											"value": "33"
										},
										{
											"begin": 976,
											"end": 1014,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1111,
											"end": 1117,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1106,
											"end": 1109,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1030,
											"end": 1118,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 1030,
											"end": 1118,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1118,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 1023,
											"end": 1118,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1185,
											"end": 1191,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1180,
											"end": 1183,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 1173,
											"end": 1177,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 1166,
											"end": 1171,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 1162,
											"end": 1178,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1192,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 1127,
											"end": 1192,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1127,
											"end": 1192,
											"name": "tag",
											"source": 1,
											"value": "35"
										},
										{
											"begin": 1127,
											"end": 1192,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1217,
											"end": 1223,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 1212,
											"end": 1215,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1208,
											"end": 1224,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1224,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1201,
											"end": 1224,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 952,
											"end": 1230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 844,
											"end": 1230,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 844,
											"end": 1230,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 844,
											"end": 1230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 844,
											"end": 1230,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 844,
											"end": 1230,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1507,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1236,
											"end": 1507,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1366,
											"end": 1369,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1388,
											"end": 1481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1477,
											"end": 1480,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1468,
											"end": 1474,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 1481,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 1388,
											"end": 1481,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 1388,
											"end": 1481,
											"name": "tag",
											"source": 1,
											"value": "37"
										},
										{
											"begin": 1388,
											"end": 1481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1481,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1381,
											"end": 1481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1498,
											"end": 1501,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1501,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1491,
											"end": 1501,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1507,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1507,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1507,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1507,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1236,
											"end": 1507,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"homework/经典用例/Storage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"test()": "f8a8fd6d",
							"val()": "3c6bb436"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"test\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"val\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"homework/\\u7ecf\\u5178\\u7528\\u4f8b/Storage.sol\":\"TestStorage\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"homework/\\u7ecf\\u5178\\u7528\\u4f8b/Storage.sol\":{\"keccak256\":\"0x2b0a884467c4cd807a52a96f7f455779eefb57b334f1c69677eea472a6521912\",\"urls\":[\"bzz-raw://c2dc382f1a97c42d5d620ebdae47ad13595161e75a8be703c0ba790ad95d27a9\",\"dweb:/ipfs/QmSovcs1CU6CwVUnKpEJ9ioL6zDr8GhjcJruwd4mrSuVsN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [
							{
								"astId": 40,
								"contract": "homework/经典用例/Storage.sol:TestStorage",
								"label": "val",
								"offset": 0,
								"slot": "0",
								"type": "t_uint256"
							}
						],
						"types": {
							"t_uint256": {
								"encoding": "inplace",
								"label": "uint256",
								"numberOfBytes": "32"
							}
						}
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				},
				"TestTransientStorage": {
					"abi": [
						{
							"inputs": [],
							"name": "test",
							"outputs": [],
							"stateMutability": "nonpayable",
							"type": "function"
						}
					],
					"devdoc": {
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":501:718  contract TestTransientStorage {... */\n  mstore(0x40, 0x80)\n  callvalue\n  dup1\n  iszero\n  tag_1\n  jumpi\n  0x00\n  dup1\n  revert\ntag_1:\n  pop\n  dataSize(sub_0)\n  dup1\n  dataOffset(sub_0)\n  0x00\n  codecopy\n  0x00\n  return\nstop\n\nsub_0: assembly {\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":501:718  contract TestTransientStorage {... */\n      mstore(0x40, 0x80)\n      callvalue\n      dup1\n      iszero\n      tag_1\n      jumpi\n      0x00\n      dup1\n      revert\n    tag_1:\n      pop\n      jumpi(tag_2, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0xf8a8fd6d\n      eq\n      tag_3\n      jumpi\n    tag_2:\n      0x00\n      dup1\n      revert\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":569:716  function test() public {... */\n    tag_3:\n      tag_4\n      tag_5\n      jump\t// in\n    tag_4:\n      stop\n    tag_5:\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":638:641  321 */\n      0x0141\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":632:636  SLOT */\n      0x00\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":625:642  tstore(SLOT, 321) */\n      tstore\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":662:676  bytes memory b */\n      0x00\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":662:681  bytes memory b = \"\" */\n      mload(0x40)\n      dup1\n      0x20\n      add\n      0x40\n      mstore\n      dup1\n      0x00\n      dup2\n      mstore\n      pop\n      swap1\n      pop\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":691:701  msg.sender */\n      caller\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":691:706  msg.sender.call */\n      0xffffffffffffffffffffffffffffffffffffffff\n      and\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":707:708  b */\n      dup2\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":691:709  msg.sender.call(b) */\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      0x00\n      mload(0x40)\n      dup1\n      dup4\n      sub\n      dup2\n      0x00\n      dup7\n      gas\n      call\n      swap2\n      pop\n      pop\n      returndatasize\n      dup1\n      0x00\n      dup2\n      eq\n      tag_11\n      jumpi\n      mload(0x40)\n      swap2\n      pop\n      and(add(returndatasize, 0x3f), not(0x1f))\n      dup3\n      add\n      0x40\n      mstore\n      returndatasize\n      dup3\n      mstore\n      returndatasize\n      0x00\n      0x20\n      dup5\n      add\n      returndatacopy\n      jump(tag_10)\n    tag_11:\n      0x60\n      swap2\n      pop\n    tag_10:\n      pop\n      pop\n      pop\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":592:716  {... */\n      pop\n        /* \"homework/\\xe7\\xbb\\x8f\\xe5\\x85\\xb8\\xe7\\x94\\xa8\\xe4\\xbe\\x8b/Storage.sol\":569:716  function test() public {... */\n      jump\t// out\n        /* \"#utility.yul\":7:105   */\n    tag_12:\n        /* \"#utility.yul\":58:64   */\n      0x00\n        /* \"#utility.yul\":92:97   */\n      dup2\n        /* \"#utility.yul\":86:98   */\n      mload\n        /* \"#utility.yul\":76:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":7:105   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":111:258   */\n    tag_13:\n        /* \"#utility.yul\":212:223   */\n      0x00\n        /* \"#utility.yul\":249:252   */\n      dup2\n        /* \"#utility.yul\":234:252   */\n      swap1\n      pop\n        /* \"#utility.yul\":111:258   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":264:403   */\n    tag_14:\n        /* \"#utility.yul\":353:359   */\n      dup3\n        /* \"#utility.yul\":348:351   */\n      dup2\n        /* \"#utility.yul\":343:346   */\n      dup4\n        /* \"#utility.yul\":337:360   */\n      mcopy\n        /* \"#utility.yul\":394:395   */\n      0x00\n        /* \"#utility.yul\":385:391   */\n      dup4\n        /* \"#utility.yul\":380:383   */\n      dup4\n        /* \"#utility.yul\":376:392   */\n      add\n        /* \"#utility.yul\":369:396   */\n      mstore\n        /* \"#utility.yul\":264:403   */\n      pop\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":409:795   */\n    tag_15:\n        /* \"#utility.yul\":513:516   */\n      0x00\n        /* \"#utility.yul\":541:579   */\n      tag_21\n        /* \"#utility.yul\":573:578   */\n      dup3\n        /* \"#utility.yul\":541:579   */\n      tag_12\n      jump\t// in\n    tag_21:\n        /* \"#utility.yul\":595:683   */\n      tag_22\n        /* \"#utility.yul\":676:682   */\n      dup2\n        /* \"#utility.yul\":671:674   */\n      dup6\n        /* \"#utility.yul\":595:683   */\n      tag_13\n      jump\t// in\n    tag_22:\n        /* \"#utility.yul\":588:683   */\n      swap4\n      pop\n        /* \"#utility.yul\":692:757   */\n      tag_23\n        /* \"#utility.yul\":750:756   */\n      dup2\n        /* \"#utility.yul\":745:748   */\n      dup6\n        /* \"#utility.yul\":738:742   */\n      0x20\n        /* \"#utility.yul\":731:736   */\n      dup7\n        /* \"#utility.yul\":727:743   */\n      add\n        /* \"#utility.yul\":692:757   */\n      tag_14\n      jump\t// in\n    tag_23:\n        /* \"#utility.yul\":782:788   */\n      dup1\n        /* \"#utility.yul\":777:780   */\n      dup5\n        /* \"#utility.yul\":773:789   */\n      add\n        /* \"#utility.yul\":766:789   */\n      swap2\n      pop\n        /* \"#utility.yul\":517:795   */\n      pop\n        /* \"#utility.yul\":409:795   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":801:1072   */\n    tag_8:\n        /* \"#utility.yul\":931:934   */\n      0x00\n        /* \"#utility.yul\":953:1046   */\n      tag_25\n        /* \"#utility.yul\":1042:1045   */\n      dup3\n        /* \"#utility.yul\":1033:1039   */\n      dup5\n        /* \"#utility.yul\":953:1046   */\n      tag_15\n      jump\t// in\n    tag_25:\n        /* \"#utility.yul\":946:1046   */\n      swap2\n      pop\n        /* \"#utility.yul\":1063:1066   */\n      dup2\n        /* \"#utility.yul\":1056:1066   */\n      swap1\n      pop\n        /* \"#utility.yul\":801:1072   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n\n    auxdata: 0xa2646970667358221220b5f2f4b74577dc2a0d98a518e1233465f9a34afaf546f591d9d67a9d1c80fd4464736f6c634300081a0033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "6080604052348015600e575f80fd5b506101558061001c5f395ff3fe608060405234801561000f575f80fd5b5060043610610029575f3560e01c8063f8a8fd6d1461002d575b5f80fd5b610035610037565b005b6101415f5d5f60405180602001604052805f81525090503373ffffffffffffffffffffffffffffffffffffffff16816040516100739190610109565b5f604051808303815f865af19150503d805f81146100ac576040519150601f19603f3d011682016040523d82523d5f602084013e6100b1565b606091505b50505050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f6100e3826100b7565b6100ed81856100c1565b93506100fd8185602086016100cb565b80840191505092915050565b5f61011482846100d9565b91508190509291505056fea2646970667358221220b5f2f4b74577dc2a0d98a518e1233465f9a34afaf546f591d9d67a9d1c80fd4464736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH1 0xE JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH2 0x155 DUP1 PUSH2 0x1C PUSH0 CODECOPY PUSH0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xF8A8FD6D EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x35 PUSH2 0x37 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x141 PUSH0 TSTORE PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x40 MLOAD PUSH2 0x73 SWAP2 SWAP1 PUSH2 0x109 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xAC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE3 DUP3 PUSH2 0xB7 JUMP JUMPDEST PUSH2 0xED DUP2 DUP6 PUSH2 0xC1 JUMP JUMPDEST SWAP4 POP PUSH2 0xFD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xCB JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x114 DUP3 DUP5 PUSH2 0xD9 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 CALLCODE DELEGATECALL 0xB7 GASLIMIT PUSH24 0xDC2A0D98A518E1233465F9A34AFAF546F591D9D67A9D1C80 REVERT PREVRANDAO PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "501:217:0:-:0;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@test_81": {
									"entryPoint": 55,
									"id": 81,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 217,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed": {
									"entryPoint": 265,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"array_length_t_bytes_memory_ptr": {
									"entryPoint": 183,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack": {
									"entryPoint": 193,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"copy_memory_to_memory_with_cleanup": {
									"entryPoint": 203,
									"id": null,
									"parameterSlots": 3,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nativeSrc": "0:1075:1",
										"nodeType": "YulBlock",
										"src": "0:1075:1",
										"statements": [
											{
												"body": {
													"nativeSrc": "65:40:1",
													"nodeType": "YulBlock",
													"src": "65:40:1",
													"statements": [
														{
															"nativeSrc": "76:22:1",
															"nodeType": "YulAssignment",
															"src": "76:22:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "92:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "92:5:1"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nativeSrc": "86:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "86:5:1"
																},
																"nativeSrc": "86:12:1",
																"nodeType": "YulFunctionCall",
																"src": "86:12:1"
															},
															"variableNames": [
																{
																	"name": "length",
																	"nativeSrc": "76:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "76:6:1"
																}
															]
														}
													]
												},
												"name": "array_length_t_bytes_memory_ptr",
												"nativeSrc": "7:98:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "48:5:1",
														"nodeType": "YulTypedName",
														"src": "48:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "length",
														"nativeSrc": "58:6:1",
														"nodeType": "YulTypedName",
														"src": "58:6:1",
														"type": ""
													}
												],
												"src": "7:98:1"
											},
											{
												"body": {
													"nativeSrc": "224:34:1",
													"nodeType": "YulBlock",
													"src": "224:34:1",
													"statements": [
														{
															"nativeSrc": "234:18:1",
															"nodeType": "YulAssignment",
															"src": "234:18:1",
															"value": {
																"name": "pos",
																"nativeSrc": "249:3:1",
																"nodeType": "YulIdentifier",
																"src": "249:3:1"
															},
															"variableNames": [
																{
																	"name": "updated_pos",
																	"nativeSrc": "234:11:1",
																	"nodeType": "YulIdentifier",
																	"src": "234:11:1"
																}
															]
														}
													]
												},
												"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "111:147:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "196:3:1",
														"nodeType": "YulTypedName",
														"src": "196:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "201:6:1",
														"nodeType": "YulTypedName",
														"src": "201:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "updated_pos",
														"nativeSrc": "212:11:1",
														"nodeType": "YulTypedName",
														"src": "212:11:1",
														"type": ""
													}
												],
												"src": "111:147:1"
											},
											{
												"body": {
													"nativeSrc": "326:77:1",
													"nodeType": "YulBlock",
													"src": "326:77:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "dst",
																		"nativeSrc": "343:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "343:3:1"
																	},
																	{
																		"name": "src",
																		"nativeSrc": "348:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "348:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "353:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "353:6:1"
																	}
																],
																"functionName": {
																	"name": "mcopy",
																	"nativeSrc": "337:5:1",
																	"nodeType": "YulIdentifier",
																	"src": "337:5:1"
																},
																"nativeSrc": "337:23:1",
																"nodeType": "YulFunctionCall",
																"src": "337:23:1"
															},
															"nativeSrc": "337:23:1",
															"nodeType": "YulExpressionStatement",
															"src": "337:23:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dst",
																				"nativeSrc": "380:3:1",
																				"nodeType": "YulIdentifier",
																				"src": "380:3:1"
																			},
																			{
																				"name": "length",
																				"nativeSrc": "385:6:1",
																				"nodeType": "YulIdentifier",
																				"src": "385:6:1"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "376:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "376:3:1"
																		},
																		"nativeSrc": "376:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "376:16:1"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "394:1:1",
																		"nodeType": "YulLiteral",
																		"src": "394:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nativeSrc": "369:6:1",
																	"nodeType": "YulIdentifier",
																	"src": "369:6:1"
																},
																"nativeSrc": "369:27:1",
																"nodeType": "YulFunctionCall",
																"src": "369:27:1"
															},
															"nativeSrc": "369:27:1",
															"nodeType": "YulExpressionStatement",
															"src": "369:27:1"
														}
													]
												},
												"name": "copy_memory_to_memory_with_cleanup",
												"nativeSrc": "264:139:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "src",
														"nativeSrc": "308:3:1",
														"nodeType": "YulTypedName",
														"src": "308:3:1",
														"type": ""
													},
													{
														"name": "dst",
														"nativeSrc": "313:3:1",
														"nodeType": "YulTypedName",
														"src": "313:3:1",
														"type": ""
													},
													{
														"name": "length",
														"nativeSrc": "318:6:1",
														"nodeType": "YulTypedName",
														"src": "318:6:1",
														"type": ""
													}
												],
												"src": "264:139:1"
											},
											{
												"body": {
													"nativeSrc": "517:278:1",
													"nodeType": "YulBlock",
													"src": "517:278:1",
													"statements": [
														{
															"nativeSrc": "527:52:1",
															"nodeType": "YulVariableDeclaration",
															"src": "527:52:1",
															"value": {
																"arguments": [
																	{
																		"name": "value",
																		"nativeSrc": "573:5:1",
																		"nodeType": "YulIdentifier",
																		"src": "573:5:1"
																	}
																],
																"functionName": {
																	"name": "array_length_t_bytes_memory_ptr",
																	"nativeSrc": "541:31:1",
																	"nodeType": "YulIdentifier",
																	"src": "541:31:1"
																},
																"nativeSrc": "541:38:1",
																"nodeType": "YulFunctionCall",
																"src": "541:38:1"
															},
															"variables": [
																{
																	"name": "length",
																	"nativeSrc": "531:6:1",
																	"nodeType": "YulTypedName",
																	"src": "531:6:1",
																	"type": ""
																}
															]
														},
														{
															"nativeSrc": "588:95:1",
															"nodeType": "YulAssignment",
															"src": "588:95:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "671:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "671:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "676:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "676:6:1"
																	}
																],
																"functionName": {
																	"name": "array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "595:75:1",
																	"nodeType": "YulIdentifier",
																	"src": "595:75:1"
																},
																"nativeSrc": "595:88:1",
																"nodeType": "YulFunctionCall",
																"src": "595:88:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "588:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "588:3:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nativeSrc": "731:5:1",
																				"nodeType": "YulIdentifier",
																				"src": "731:5:1"
																			},
																			{
																				"kind": "number",
																				"nativeSrc": "738:4:1",
																				"nodeType": "YulLiteral",
																				"src": "738:4:1",
																				"type": "",
																				"value": "0x20"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nativeSrc": "727:3:1",
																			"nodeType": "YulIdentifier",
																			"src": "727:3:1"
																		},
																		"nativeSrc": "727:16:1",
																		"nodeType": "YulFunctionCall",
																		"src": "727:16:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "745:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "745:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "750:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "750:6:1"
																	}
																],
																"functionName": {
																	"name": "copy_memory_to_memory_with_cleanup",
																	"nativeSrc": "692:34:1",
																	"nodeType": "YulIdentifier",
																	"src": "692:34:1"
																},
																"nativeSrc": "692:65:1",
																"nodeType": "YulFunctionCall",
																"src": "692:65:1"
															},
															"nativeSrc": "692:65:1",
															"nodeType": "YulExpressionStatement",
															"src": "692:65:1"
														},
														{
															"nativeSrc": "766:23:1",
															"nodeType": "YulAssignment",
															"src": "766:23:1",
															"value": {
																"arguments": [
																	{
																		"name": "pos",
																		"nativeSrc": "777:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "777:3:1"
																	},
																	{
																		"name": "length",
																		"nativeSrc": "782:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "782:6:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nativeSrc": "773:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "773:3:1"
																},
																"nativeSrc": "773:16:1",
																"nodeType": "YulFunctionCall",
																"src": "773:16:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "766:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "766:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
												"nativeSrc": "409:386:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nativeSrc": "498:5:1",
														"nodeType": "YulTypedName",
														"src": "498:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nativeSrc": "505:3:1",
														"nodeType": "YulTypedName",
														"src": "505:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "513:3:1",
														"nodeType": "YulTypedName",
														"src": "513:3:1",
														"type": ""
													}
												],
												"src": "409:386:1"
											},
											{
												"body": {
													"nativeSrc": "935:137:1",
													"nodeType": "YulBlock",
													"src": "935:137:1",
													"statements": [
														{
															"nativeSrc": "946:100:1",
															"nodeType": "YulAssignment",
															"src": "946:100:1",
															"value": {
																"arguments": [
																	{
																		"name": "value0",
																		"nativeSrc": "1033:6:1",
																		"nodeType": "YulIdentifier",
																		"src": "1033:6:1"
																	},
																	{
																		"name": "pos",
																		"nativeSrc": "1042:3:1",
																		"nodeType": "YulIdentifier",
																		"src": "1042:3:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack",
																	"nativeSrc": "953:79:1",
																	"nodeType": "YulIdentifier",
																	"src": "953:79:1"
																},
																"nativeSrc": "953:93:1",
																"nodeType": "YulFunctionCall",
																"src": "953:93:1"
															},
															"variableNames": [
																{
																	"name": "pos",
																	"nativeSrc": "946:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "946:3:1"
																}
															]
														},
														{
															"nativeSrc": "1056:10:1",
															"nodeType": "YulAssignment",
															"src": "1056:10:1",
															"value": {
																"name": "pos",
																"nativeSrc": "1063:3:1",
																"nodeType": "YulIdentifier",
																"src": "1063:3:1"
															},
															"variableNames": [
																{
																	"name": "end",
																	"nativeSrc": "1056:3:1",
																	"nodeType": "YulIdentifier",
																	"src": "1056:3:1"
																}
															]
														}
													]
												},
												"name": "abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed",
												"nativeSrc": "801:271:1",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "pos",
														"nativeSrc": "914:3:1",
														"nodeType": "YulTypedName",
														"src": "914:3:1",
														"type": ""
													},
													{
														"name": "value0",
														"nativeSrc": "920:6:1",
														"nodeType": "YulTypedName",
														"src": "920:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "end",
														"nativeSrc": "931:3:1",
														"nodeType": "YulTypedName",
														"src": "931:3:1",
														"type": ""
													}
												],
												"src": "801:271:1"
											}
										]
									},
									"contents": "{\n\n    function array_length_t_bytes_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length) -> updated_pos {\n        updated_pos := pos\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n\n        mcopy(dst, src, length)\n        mstore(add(dst, length), 0)\n\n    }\n\n    function abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value, pos) -> end {\n        let length := array_length_t_bytes_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_bytes_memory_ptr_nonPadded_inplace_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, length)\n    }\n\n    function abi_encode_tuple_packed_t_bytes_memory_ptr__to_t_bytes_memory_ptr__nonPadded_inplace_fromStack_reversed(pos , value0) -> end {\n\n        pos := abi_encode_t_bytes_memory_ptr_to_t_bytes_memory_ptr_nonPadded_inplace_fromStack(value0,  pos)\n\n        end := pos\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "608060405234801561000f575f80fd5b5060043610610029575f3560e01c8063f8a8fd6d1461002d575b5f80fd5b610035610037565b005b6101415f5d5f60405180602001604052805f81525090503373ffffffffffffffffffffffffffffffffffffffff16816040516100739190610109565b5f604051808303815f865af19150503d805f81146100ac576040519150601f19603f3d011682016040523d82523d5f602084013e6100b1565b606091505b50505050565b5f81519050919050565b5f81905092915050565b8281835e5f83830152505050565b5f6100e3826100b7565b6100ed81856100c1565b93506100fd8185602086016100cb565b80840191505092915050565b5f61011482846100d9565b91508190509291505056fea2646970667358221220b5f2f4b74577dc2a0d98a518e1233465f9a34afaf546f591d9d67a9d1c80fd4464736f6c634300081a0033",
							"opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0xF JUMPI PUSH0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x29 JUMPI PUSH0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0xF8A8FD6D EQ PUSH2 0x2D JUMPI JUMPDEST PUSH0 DUP1 REVERT JUMPDEST PUSH2 0x35 PUSH2 0x37 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x141 PUSH0 TSTORE PUSH0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x20 ADD PUSH1 0x40 MSTORE DUP1 PUSH0 DUP2 MSTORE POP SWAP1 POP CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH1 0x40 MLOAD PUSH2 0x73 SWAP2 SWAP1 PUSH2 0x109 JUMP JUMPDEST PUSH0 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH0 DUP7 GAS CALL SWAP2 POP POP RETURNDATASIZE DUP1 PUSH0 DUP2 EQ PUSH2 0xAC JUMPI PUSH1 0x40 MLOAD SWAP2 POP PUSH1 0x1F NOT PUSH1 0x3F RETURNDATASIZE ADD AND DUP3 ADD PUSH1 0x40 MSTORE RETURNDATASIZE DUP3 MSTORE RETURNDATASIZE PUSH0 PUSH1 0x20 DUP5 ADD RETURNDATACOPY PUSH2 0xB1 JUMP JUMPDEST PUSH1 0x60 SWAP2 POP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH0 DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP2 DUP4 MCOPY PUSH0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH0 PUSH2 0xE3 DUP3 PUSH2 0xB7 JUMP JUMPDEST PUSH2 0xED DUP2 DUP6 PUSH2 0xC1 JUMP JUMPDEST SWAP4 POP PUSH2 0xFD DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0xCB JUMP JUMPDEST DUP1 DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH0 PUSH2 0x114 DUP3 DUP5 PUSH2 0xD9 JUMP JUMPDEST SWAP2 POP DUP2 SWAP1 POP SWAP3 SWAP2 POP POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0xB5 CALLCODE DELEGATECALL 0xB7 GASLIMIT PUSH24 0xDC2A0D98A518E1233465F9A34AFAF546F591D9D67A9D1C80 REVERT PREVRANDAO PUSH5 0x736F6C6343 STOP ADDMOD BYTE STOP CALLER ",
							"sourceMap": "501:217:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;569:147;;;:::i;:::-;;;638:3;632:4;625:17;662:14;:19;;;;;;;;;;;;;;691:10;:15;;707:1;691:18;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;592:124;569:147::o;7:98:1:-;58:6;92:5;86:12;76:22;;7:98;;;:::o;111:147::-;212:11;249:3;234:18;;111:147;;;;:::o;264:139::-;353:6;348:3;343;337:23;394:1;385:6;380:3;376:16;369:27;264:139;;;:::o;409:386::-;513:3;541:38;573:5;541:38;:::i;:::-;595:88;676:6;671:3;595:88;:::i;:::-;588:95;;692:65;750:6;745:3;738:4;731:5;727:16;692:65;:::i;:::-;782:6;777:3;773:16;766:23;;517:278;409:386;;;;:::o;801:271::-;931:3;953:93;1042:3;1033:6;953:93;:::i;:::-;946:100;;1063:3;1056:10;;801:271;;;;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "68200",
								"executionCost": "115",
								"totalCost": "68315"
							},
							"external": {
								"test()": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 501,
									"end": 718,
									"name": "PUSH",
									"source": 0,
									"value": "80"
								},
								{
									"begin": 501,
									"end": 718,
									"name": "PUSH",
									"source": 0,
									"value": "40"
								},
								{
									"begin": 501,
									"end": 718,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 501,
									"end": 718,
									"name": "CALLVALUE",
									"source": 0
								},
								{
									"begin": 501,
									"end": 718,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 501,
									"end": 718,
									"name": "ISZERO",
									"source": 0
								},
								{
									"begin": 501,
									"end": 718,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 501,
									"end": 718,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 501,
									"end": 718,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 501,
									"end": 718,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 501,
									"end": 718,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 501,
									"end": 718,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 501,
									"end": 718,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 501,
									"end": 718,
									"name": "POP",
									"source": 0
								},
								{
									"begin": 501,
									"end": 718,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 501,
									"end": 718,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 501,
									"end": 718,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 501,
									"end": 718,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 501,
									"end": 718,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 501,
									"end": 718,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 501,
									"end": 718,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a2646970667358221220b5f2f4b74577dc2a0d98a518e1233465f9a34afaf546f591d9d67a9d1c80fd4464736f6c634300081a0033",
									".code": [
										{
											"begin": 501,
											"end": 718,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 501,
											"end": 718,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 501,
											"end": 718,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 501,
											"end": 718,
											"name": "CALLVALUE",
											"source": 0
										},
										{
											"begin": 501,
											"end": 718,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 501,
											"end": 718,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 501,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 501,
											"end": 718,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 501,
											"end": 718,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 501,
											"end": 718,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 501,
											"end": 718,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 501,
											"end": 718,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 501,
											"end": 718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 501,
											"end": 718,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 501,
											"end": 718,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 501,
											"end": 718,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 501,
											"end": 718,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 501,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 501,
											"end": 718,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 501,
											"end": 718,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 501,
											"end": 718,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 501,
											"end": 718,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 501,
											"end": 718,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 501,
											"end": 718,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 501,
											"end": 718,
											"name": "PUSH",
											"source": 0,
											"value": "F8A8FD6D"
										},
										{
											"begin": 501,
											"end": 718,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 501,
											"end": 718,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 501,
											"end": 718,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 501,
											"end": 718,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 501,
											"end": 718,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 501,
											"end": 718,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 501,
											"end": 718,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 501,
											"end": 718,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 569,
											"end": 716,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 569,
											"end": 716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 569,
											"end": 716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 569,
											"end": 716,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 569,
											"end": 716,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 569,
											"end": 716,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 569,
											"end": 716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 569,
											"end": 716,
											"name": "STOP",
											"source": 0
										},
										{
											"begin": 569,
											"end": 716,
											"name": "tag",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 569,
											"end": 716,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 638,
											"end": 641,
											"name": "PUSH",
											"source": 0,
											"value": "141"
										},
										{
											"begin": 632,
											"end": 636,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 625,
											"end": 642,
											"name": "TSTORE",
											"source": 0
										},
										{
											"begin": 662,
											"end": 676,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 662,
											"end": 681,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 662,
											"end": 681,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 662,
											"end": 681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 662,
											"end": 681,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 662,
											"end": 681,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 662,
											"end": 681,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 662,
											"end": 681,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 662,
											"end": 681,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 662,
											"end": 681,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 662,
											"end": 681,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 662,
											"end": 681,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 662,
											"end": 681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 662,
											"end": 681,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 662,
											"end": 681,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 691,
											"end": 701,
											"name": "CALLER",
											"source": 0
										},
										{
											"begin": 691,
											"end": 706,
											"name": "PUSH",
											"source": 0,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 691,
											"end": 706,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 707,
											"end": 708,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 691,
											"end": 709,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 691,
											"end": 709,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 691,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 691,
											"end": 709,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 691,
											"end": 709,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 691,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 691,
											"end": 709,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 691,
											"end": 709,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 691,
											"end": 709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 709,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 691,
											"end": 709,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 691,
											"end": 709,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 691,
											"end": 709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 691,
											"end": 709,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 691,
											"end": 709,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 691,
											"end": 709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 691,
											"end": 709,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 691,
											"end": 709,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 691,
											"end": 709,
											"name": "GAS",
											"source": 0
										},
										{
											"begin": 691,
											"end": 709,
											"name": "CALL",
											"source": 0
										},
										{
											"begin": 691,
											"end": 709,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 691,
											"end": 709,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 691,
											"end": 709,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 691,
											"end": 709,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 691,
											"end": 709,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 691,
											"end": 709,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 691,
											"end": 709,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 691,
											"end": 709,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 691,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 691,
											"end": 709,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 691,
											"end": 709,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 691,
											"end": 709,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 691,
											"end": 709,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 691,
											"end": 709,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 691,
											"end": 709,
											"name": "PUSH",
											"source": 0,
											"value": "1F"
										},
										{
											"begin": 691,
											"end": 709,
											"name": "NOT",
											"source": 0
										},
										{
											"begin": 691,
											"end": 709,
											"name": "PUSH",
											"source": 0,
											"value": "3F"
										},
										{
											"begin": 691,
											"end": 709,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 691,
											"end": 709,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 691,
											"end": 709,
											"name": "AND",
											"source": 0
										},
										{
											"begin": 691,
											"end": 709,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 691,
											"end": 709,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 691,
											"end": 709,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 691,
											"end": 709,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 691,
											"end": 709,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 691,
											"end": 709,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 691,
											"end": 709,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 691,
											"end": 709,
											"name": "RETURNDATASIZE",
											"source": 0
										},
										{
											"begin": 691,
											"end": 709,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 691,
											"end": 709,
											"name": "PUSH",
											"source": 0,
											"value": "20"
										},
										{
											"begin": 691,
											"end": 709,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 691,
											"end": 709,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 691,
											"end": 709,
											"name": "RETURNDATACOPY",
											"source": 0
										},
										{
											"begin": 691,
											"end": 709,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 691,
											"end": 709,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 691,
											"end": 709,
											"name": "tag",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 691,
											"end": 709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 709,
											"name": "PUSH",
											"source": 0,
											"value": "60"
										},
										{
											"begin": 691,
											"end": 709,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 691,
											"end": 709,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 691,
											"end": 709,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 691,
											"end": 709,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 691,
											"end": 709,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 691,
											"end": 709,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 691,
											"end": 709,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 592,
											"end": 716,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 569,
											"end": 716,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 7,
											"end": 105,
											"name": "tag",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 7,
											"end": 105,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 58,
											"end": 64,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 92,
											"end": 97,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 86,
											"end": 98,
											"name": "MLOAD",
											"source": 1
										},
										{
											"begin": 76,
											"end": 98,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 76,
											"end": 98,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 105,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 105,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 7,
											"end": 105,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 105,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 111,
											"end": 258,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 111,
											"end": 258,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 212,
											"end": 223,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 249,
											"end": 252,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 234,
											"end": 252,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 234,
											"end": 252,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 111,
											"end": 258,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 111,
											"end": 258,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 111,
											"end": 258,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 111,
											"end": 258,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 111,
											"end": 258,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 264,
											"end": 403,
											"name": "tag",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 264,
											"end": 403,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 353,
											"end": 359,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 348,
											"end": 351,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 343,
											"end": 346,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 337,
											"end": 360,
											"name": "MCOPY",
											"source": 1
										},
										{
											"begin": 394,
											"end": 395,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 385,
											"end": 391,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 380,
											"end": 383,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 376,
											"end": 392,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 369,
											"end": 396,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 264,
											"end": 403,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 264,
											"end": 403,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 264,
											"end": 403,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 264,
											"end": 403,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 409,
											"end": 795,
											"name": "tag",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 409,
											"end": 795,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 513,
											"end": 516,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 541,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 573,
											"end": 578,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 541,
											"end": 579,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 541,
											"end": 579,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 541,
											"end": 579,
											"name": "tag",
											"source": 1,
											"value": "21"
										},
										{
											"begin": 541,
											"end": 579,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 595,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 676,
											"end": 682,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 671,
											"end": 674,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 595,
											"end": 683,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 595,
											"end": 683,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 595,
											"end": 683,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 595,
											"end": 683,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 588,
											"end": 683,
											"name": "SWAP4",
											"source": 1
										},
										{
											"begin": 588,
											"end": 683,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 692,
											"end": 757,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 750,
											"end": 756,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 745,
											"end": 748,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 738,
											"end": 742,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 731,
											"end": 736,
											"name": "DUP7",
											"source": 1
										},
										{
											"begin": 727,
											"end": 743,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 692,
											"end": 757,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "14"
										},
										{
											"begin": 692,
											"end": 757,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 692,
											"end": 757,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 692,
											"end": 757,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 782,
											"end": 788,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 777,
											"end": 780,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 773,
											"end": 789,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 766,
											"end": 789,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 766,
											"end": 789,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 517,
											"end": 795,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 409,
											"end": 795,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 409,
											"end": 795,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 409,
											"end": 795,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 409,
											"end": 795,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 409,
											"end": 795,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 801,
											"end": 1072,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 801,
											"end": 1072,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 931,
											"end": 934,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 953,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 1042,
											"end": 1045,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1033,
											"end": 1039,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 953,
											"end": 1046,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "15"
										},
										{
											"begin": 953,
											"end": 1046,
											"jumpType": "[in]",
											"name": "JUMP",
											"source": 1
										},
										{
											"begin": 953,
											"end": 1046,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 953,
											"end": 1046,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 946,
											"end": 1046,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 946,
											"end": 1046,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1063,
											"end": 1066,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1066,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1056,
											"end": 1066,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 801,
											"end": 1072,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 801,
											"end": 1072,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 801,
											"end": 1072,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 801,
											"end": 1072,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 801,
											"end": 1072,
											"jumpType": "[out]",
											"name": "JUMP",
											"source": 1
										}
									]
								}
							},
							"sourceList": [
								"homework/经典用例/Storage.sol",
								"#utility.yul"
							]
						},
						"methodIdentifiers": {
							"test()": "f8a8fd6d"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.26+commit.8a97fa7a\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"test\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"homework/\\u7ecf\\u5178\\u7528\\u4f8b/Storage.sol\":\"TestTransientStorage\"},\"evmVersion\":\"cancun\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"homework/\\u7ecf\\u5178\\u7528\\u4f8b/Storage.sol\":{\"keccak256\":\"0x2b0a884467c4cd807a52a96f7f455779eefb57b334f1c69677eea472a6521912\",\"urls\":[\"bzz-raw://c2dc382f1a97c42d5d620ebdae47ad13595161e75a8be703c0ba790ad95d27a9\",\"dweb:/ipfs/QmSovcs1CU6CwVUnKpEJ9ioL6zDr8GhjcJruwd4mrSuVsN\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"errors": [
			{
				"component": "general",
				"errorCode": "1878",
				"formattedMessage": "Warning: SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.\n--> homework/经典用例/Storage.sol\n\n",
				"message": "SPDX license identifier not provided in source file. Before publishing, consider adding a comment containing \"SPDX-License-Identifier: <SPDX-License>\" to each source file. Use \"SPDX-License-Identifier: UNLICENSED\" for non-open-source code. Please see https://spdx.org for more information.",
				"severity": "warning",
				"sourceLocation": {
					"end": -1,
					"file": "homework/经典用例/Storage.sol",
					"start": -1
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "3628",
				"formattedMessage": "Warning: This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.\n --> homework/经典用例/Storage.sol:9:1:\n  |\n9 | contract Callback {\n  | ^ (Relevant source part starts here and spans across multiple lines).\nNote: The payable fallback function is defined here.\n  --> homework/经典用例/Storage.sol:12:5:\n   |\n12 |     fallback() external payable {\n   |     ^ (Relevant source part starts here and spans across multiple lines).\n\n",
				"message": "This contract has a payable fallback function, but no receive ether function. Consider adding a receive ether function.",
				"secondarySourceLocations": [
					{
						"end": 253,
						"file": "homework/经典用例/Storage.sol",
						"message": "The payable fallback function is defined here.",
						"start": 179
					}
				],
				"severity": "warning",
				"sourceLocation": {
					"end": 337,
					"file": "homework/经典用例/Storage.sol",
					"start": 130
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "9302",
				"formattedMessage": "Warning: Return value of low-level calls not used.\n  --> homework/经典用例/Storage.sol:27:9:\n   |\n27 |         msg.sender.call(b);\n   |         ^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Return value of low-level calls not used.",
				"severity": "warning",
				"sourceLocation": {
					"end": 490,
					"file": "homework/经典用例/Storage.sol",
					"start": 472
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "2394",
				"formattedMessage": "Warning: Transient storage as defined by EIP-1153 can break the composability of smart contracts: Since transient storage is cleared only at the end of the transaction and not at the end of the outermost call frame to the contract within a transaction, your contract may unintentionally misbehave when invoked multiple times in a complex transaction. To avoid this, be sure to clear all transient storage at the end of any call to your contract. The use of transient storage for reentrancy guards that are cleared at the end of the call is safe.\n  --> homework/经典用例/Storage.sol:36:13:\n   |\n36 |             tstore(SLOT, 321)\n   |             ^^^^^^\n\n",
				"message": "Transient storage as defined by EIP-1153 can break the composability of smart contracts: Since transient storage is cleared only at the end of the transaction and not at the end of the outermost call frame to the contract within a transaction, your contract may unintentionally misbehave when invoked multiple times in a complex transaction. To avoid this, be sure to clear all transient storage at the end of any call to your contract. The use of transient storage for reentrancy guards that are cleared at the end of the call is safe.",
				"severity": "warning",
				"sourceLocation": {
					"end": 631,
					"file": "homework/经典用例/Storage.sol",
					"start": 625
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "9302",
				"formattedMessage": "Warning: Return value of low-level calls not used.\n  --> homework/经典用例/Storage.sol:40:9:\n   |\n40 |         msg.sender.call(b);\n   |         ^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Return value of low-level calls not used.",
				"severity": "warning",
				"sourceLocation": {
					"end": 709,
					"file": "homework/经典用例/Storage.sol",
					"start": 691
				},
				"type": "Warning"
			},
			{
				"component": "general",
				"errorCode": "9302",
				"formattedMessage": "Warning: Return value of low-level calls not used.\n  --> homework/经典用例/Storage.sol:69:6:\n   |\n69 |      msg.sender.call(b);\n   |      ^^^^^^^^^^^^^^^^^^\n\n",
				"message": "Return value of low-level calls not used.",
				"severity": "warning",
				"sourceLocation": {
					"end": 1194,
					"file": "homework/经典用例/Storage.sol",
					"start": 1176
				},
				"type": "Warning"
			}
		],
		"sources": {
			"homework/经典用例/Storage.sol": {
				"ast": {
					"absolutePath": "homework/经典用例/Storage.sol",
					"exportedSymbols": {
						"Callback": [
							38
						],
						"ITest": [
							10
						],
						"ReentrancyGuard": [
							102
						],
						"ReentrancyGuardTransient": [
							130
						],
						"TestStorage": [
							61
						],
						"TestTransientStorage": [
							82
						]
					},
					"id": 131,
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".24"
							],
							"nodeType": "PragmaDirective",
							"src": "0:24:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ITest",
							"contractDependencies": [],
							"contractKind": "interface",
							"fullyImplemented": false,
							"id": 10,
							"linearizedBaseContracts": [
								10
							],
							"name": "ITest",
							"nameLocation": "36:5:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"functionSelector": "3c6bb436",
									"id": 6,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "val",
									"nameLocation": "57:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 2,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "60:2:0"
									},
									"returnParameters": {
										"id": 5,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 4,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 6,
												"src": "86:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 3,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "86:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "85:9:0"
									},
									"scope": 10,
									"src": "48:47:0",
									"stateMutability": "view",
									"virtual": false,
									"visibility": "external"
								},
								{
									"functionSelector": "f8a8fd6d",
									"id": 9,
									"implemented": false,
									"kind": "function",
									"modifiers": [],
									"name": "test",
									"nameLocation": "110:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 7,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "114:2:0"
									},
									"returnParameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "125:0:0"
									},
									"scope": 10,
									"src": "101:25:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 131,
							"src": "26:102:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "Callback",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 38,
							"linearizedBaseContracts": [
								38
							],
							"name": "Callback",
							"nameLocation": "139:8:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "3c6bb436",
									"id": 12,
									"mutability": "mutable",
									"name": "val",
									"nameLocation": "169:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 38,
									"src": "154:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 11,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "154:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 24,
										"nodeType": "Block",
										"src": "207:46:0",
										"statements": [
											{
												"expression": {
													"id": 22,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 15,
														"name": "val",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 12,
														"src": "217:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"arguments": [],
														"expression": {
															"argumentTypes": [],
															"expression": {
																"arguments": [
																	{
																		"expression": {
																			"id": 17,
																			"name": "msg",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 4294967281,
																			"src": "229:3:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_magic_message",
																				"typeString": "msg"
																			}
																		},
																		"id": 18,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"memberLocation": "233:6:0",
																		"memberName": "sender",
																		"nodeType": "MemberAccess",
																		"src": "229:10:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	}
																],
																"expression": {
																	"argumentTypes": [
																		{
																			"typeIdentifier": "t_address",
																			"typeString": "address"
																		}
																	],
																	"id": 16,
																	"name": "ITest",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 10,
																	"src": "223:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_type$_t_contract$_ITest_$10_$",
																		"typeString": "type(contract ITest)"
																	}
																},
																"id": 19,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"kind": "typeConversion",
																"lValueRequested": false,
																"nameLocations": [],
																"names": [],
																"nodeType": "FunctionCall",
																"src": "223:17:0",
																"tryCall": false,
																"typeDescriptions": {
																	"typeIdentifier": "t_contract$_ITest_$10",
																	"typeString": "contract ITest"
																}
															},
															"id": 20,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "241:3:0",
															"memberName": "val",
															"nodeType": "MemberAccess",
															"referencedDeclaration": 6,
															"src": "223:21:0",
															"typeDescriptions": {
																"typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
																"typeString": "function () view external returns (uint256)"
															}
														},
														"id": 21,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"kind": "functionCall",
														"lValueRequested": false,
														"nameLocations": [],
														"names": [],
														"nodeType": "FunctionCall",
														"src": "223:23:0",
														"tryCall": false,
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "217:29:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 23,
												"nodeType": "ExpressionStatement",
												"src": "217:29:0"
											}
										]
									},
									"id": 25,
									"implemented": true,
									"kind": "fallback",
									"modifiers": [],
									"name": "",
									"nameLocation": "-1:-1:-1",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 13,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "187:2:0"
									},
									"returnParameters": {
										"id": 14,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "207:0:0"
									},
									"scope": 38,
									"src": "179:74:0",
									"stateMutability": "payable",
									"virtual": false,
									"visibility": "external"
								},
								{
									"body": {
										"id": 36,
										"nodeType": "Block",
										"src": "298:37:0",
										"statements": [
											{
												"expression": {
													"arguments": [],
													"expression": {
														"argumentTypes": [],
														"expression": {
															"arguments": [
																{
																	"id": 31,
																	"name": "target",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 27,
																	"src": "314:6:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																}
															],
															"expression": {
																"argumentTypes": [
																	{
																		"typeIdentifier": "t_address",
																		"typeString": "address"
																	}
																],
																"id": 30,
																"name": "ITest",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 10,
																"src": "308:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_type$_t_contract$_ITest_$10_$",
																	"typeString": "type(contract ITest)"
																}
															},
															"id": 32,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"kind": "typeConversion",
															"lValueRequested": false,
															"nameLocations": [],
															"names": [],
															"nodeType": "FunctionCall",
															"src": "308:13:0",
															"tryCall": false,
															"typeDescriptions": {
																"typeIdentifier": "t_contract$_ITest_$10",
																"typeString": "contract ITest"
															}
														},
														"id": 33,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "322:4:0",
														"memberName": "test",
														"nodeType": "MemberAccess",
														"referencedDeclaration": 9,
														"src": "308:18:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
															"typeString": "function () external"
														}
													},
													"id": 34,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "308:20:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 35,
												"nodeType": "ExpressionStatement",
												"src": "308:20:0"
											}
										]
									},
									"functionSelector": "bb29998e",
									"id": 37,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "test",
									"nameLocation": "268:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 28,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 27,
												"mutability": "mutable",
												"name": "target",
												"nameLocation": "281:6:0",
												"nodeType": "VariableDeclaration",
												"scope": 37,
												"src": "273:14:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_address",
													"typeString": "address"
												},
												"typeName": {
													"id": 26,
													"name": "address",
													"nodeType": "ElementaryTypeName",
													"src": "273:7:0",
													"stateMutability": "nonpayable",
													"typeDescriptions": {
														"typeIdentifier": "t_address",
														"typeString": "address"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "272:16:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "298:0:0"
									},
									"scope": 38,
									"src": "259:76:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 131,
							"src": "130:207:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TestStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 61,
							"linearizedBaseContracts": [
								61
							],
							"name": "TestStorage",
							"nameLocation": "348:11:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"functionSelector": "3c6bb436",
									"id": 40,
									"mutability": "mutable",
									"name": "val",
									"nameLocation": "381:3:0",
									"nodeType": "VariableDeclaration",
									"scope": 61,
									"src": "366:18:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_uint256",
										"typeString": "uint256"
									},
									"typeName": {
										"id": 39,
										"name": "uint256",
										"nodeType": "ElementaryTypeName",
										"src": "366:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_uint256",
											"typeString": "uint256"
										}
									},
									"visibility": "public"
								},
								{
									"body": {
										"id": 59,
										"nodeType": "Block",
										"src": "414:83:0",
										"statements": [
											{
												"expression": {
													"id": 45,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 43,
														"name": "val",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 40,
														"src": "424:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "313233",
														"id": 44,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "430:3:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_123_by_1",
															"typeString": "int_const 123"
														},
														"value": "123"
													},
													"src": "424:9:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"id": 46,
												"nodeType": "ExpressionStatement",
												"src": "424:9:0"
											},
											{
												"assignments": [
													48
												],
												"declarations": [
													{
														"constant": false,
														"id": 48,
														"mutability": "mutable",
														"name": "b",
														"nameLocation": "456:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 59,
														"src": "443:14:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 47,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "443:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 50,
												"initialValue": {
													"hexValue": "",
													"id": 49,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "460:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "443:19:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 56,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 48,
															"src": "488:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"expression": {
																"id": 51,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "472:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 54,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "476:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "472:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 55,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "483:4:0",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "472:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 57,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "472:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"id": 58,
												"nodeType": "ExpressionStatement",
												"src": "472:18:0"
											}
										]
									},
									"functionSelector": "f8a8fd6d",
									"id": 60,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "test",
									"nameLocation": "400:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 41,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "404:2:0"
									},
									"returnParameters": {
										"id": 42,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "414:0:0"
									},
									"scope": 61,
									"src": "391:106:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 131,
							"src": "339:160:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "TestTransientStorage",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 82,
							"linearizedBaseContracts": [
								82
							],
							"name": "TestTransientStorage",
							"nameLocation": "510:20:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 64,
									"mutability": "constant",
									"name": "SLOT",
									"nameLocation": "554:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 82,
									"src": "537:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 62,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "537:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 63,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "561:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 80,
										"nodeType": "Block",
										"src": "592:124:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "611:41:0",
													"nodeType": "YulBlock",
													"src": "611:41:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "SLOT",
																		"nativeSrc": "632:4:0",
																		"nodeType": "YulIdentifier",
																		"src": "632:4:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "638:3:0",
																		"nodeType": "YulLiteral",
																		"src": "638:3:0",
																		"type": "",
																		"value": "321"
																	}
																],
																"functionName": {
																	"name": "tstore",
																	"nativeSrc": "625:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "625:6:0"
																},
																"nativeSrc": "625:17:0",
																"nodeType": "YulFunctionCall",
																"src": "625:17:0"
															},
															"nativeSrc": "625:17:0",
															"nodeType": "YulExpressionStatement",
															"src": "625:17:0"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 64,
														"isOffset": false,
														"isSlot": false,
														"src": "632:4:0",
														"valueSize": 1
													}
												],
												"id": 67,
												"nodeType": "InlineAssembly",
												"src": "602:50:0"
											},
											{
												"assignments": [
													69
												],
												"declarations": [
													{
														"constant": false,
														"id": 69,
														"mutability": "mutable",
														"name": "b",
														"nameLocation": "675:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 80,
														"src": "662:14:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 68,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "662:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 71,
												"initialValue": {
													"hexValue": "",
													"id": 70,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "679:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "662:19:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 77,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 69,
															"src": "707:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"expression": {
																"id": 72,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "691:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 75,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "695:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "691:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 76,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "702:4:0",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "691:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 78,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "691:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"id": 79,
												"nodeType": "ExpressionStatement",
												"src": "691:18:0"
											}
										]
									},
									"functionSelector": "f8a8fd6d",
									"id": 81,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "test",
									"nameLocation": "578:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 65,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "582:2:0"
									},
									"returnParameters": {
										"id": 66,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "592:0:0"
									},
									"scope": 82,
									"src": "569:147:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 131,
							"src": "501:217:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuard",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 102,
							"linearizedBaseContracts": [
								102
							],
							"name": "ReentrancyGuard",
							"nameLocation": "729:15:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": false,
									"id": 84,
									"mutability": "mutable",
									"name": "locked",
									"nameLocation": "764:6:0",
									"nodeType": "VariableDeclaration",
									"scope": 102,
									"src": "750:20:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bool",
										"typeString": "bool"
									},
									"typeName": {
										"id": 83,
										"name": "bool",
										"nodeType": "ElementaryTypeName",
										"src": "750:4:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bool",
											"typeString": "bool"
										}
									},
									"visibility": "private"
								},
								{
									"body": {
										"id": 100,
										"nodeType": "Block",
										"src": "791:91:0",
										"statements": [
											{
												"expression": {
													"arguments": [
														{
															"id": 88,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "UnaryOperation",
															"operator": "!",
															"prefix": true,
															"src": "809:7:0",
															"subExpression": {
																"id": 87,
																"name": "locked",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 84,
																"src": "810:6:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_bool",
																	"typeString": "bool"
																}
															},
															"typeDescriptions": {
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bool",
																"typeString": "bool"
															}
														],
														"id": 86,
														"name": "require",
														"nodeType": "Identifier",
														"overloadedDeclarations": [
															4294967278,
															4294967278,
															4294967278
														],
														"referencedDeclaration": 4294967278,
														"src": "801:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
															"typeString": "function (bool) pure"
														}
													},
													"id": 89,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "801:16:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$__$",
														"typeString": "tuple()"
													}
												},
												"id": 90,
												"nodeType": "ExpressionStatement",
												"src": "801:16:0"
											},
											{
												"expression": {
													"id": 93,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 91,
														"name": "locked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "827:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "74727565",
														"id": 92,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "836:4:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "true"
													},
													"src": "827:13:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 94,
												"nodeType": "ExpressionStatement",
												"src": "827:13:0"
											},
											{
												"id": 95,
												"nodeType": "PlaceholderStatement",
												"src": "850:1:0"
											},
											{
												"expression": {
													"id": 98,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftHandSide": {
														"id": 96,
														"name": "locked",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 84,
														"src": "861:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"nodeType": "Assignment",
													"operator": "=",
													"rightHandSide": {
														"hexValue": "66616c7365",
														"id": 97,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "bool",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "870:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														},
														"value": "false"
													},
													"src": "861:14:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 99,
												"nodeType": "ExpressionStatement",
												"src": "861:14:0"
											}
										]
									},
									"id": 101,
									"name": "lock",
									"nameLocation": "785:4:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 85,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "789:2:0"
									},
									"src": "776:106:0",
									"virtual": false,
									"visibility": "internal"
								}
							],
							"scope": 131,
							"src": "720:164:0",
							"usedErrors": [],
							"usedEvents": []
						},
						{
							"abstract": false,
							"baseContracts": [],
							"canonicalName": "ReentrancyGuardTransient",
							"contractDependencies": [],
							"contractKind": "contract",
							"fullyImplemented": true,
							"id": 130,
							"linearizedBaseContracts": [
								130
							],
							"name": "ReentrancyGuardTransient",
							"nameLocation": "896:24:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"constant": true,
									"id": 105,
									"mutability": "constant",
									"name": "SLOT",
									"nameLocation": "942:4:0",
									"nodeType": "VariableDeclaration",
									"scope": 130,
									"src": "925:25:0",
									"stateVariable": true,
									"storageLocation": "default",
									"typeDescriptions": {
										"typeIdentifier": "t_bytes32",
										"typeString": "bytes32"
									},
									"typeName": {
										"id": 103,
										"name": "bytes32",
										"nodeType": "ElementaryTypeName",
										"src": "925:7:0",
										"typeDescriptions": {
											"typeIdentifier": "t_bytes32",
											"typeString": "bytes32"
										}
									},
									"value": {
										"hexValue": "30",
										"id": 104,
										"isConstant": false,
										"isLValue": false,
										"isPure": true,
										"kind": "number",
										"lValueRequested": false,
										"nodeType": "Literal",
										"src": "949:1:0",
										"typeDescriptions": {
											"typeIdentifier": "t_rational_0_by_1",
											"typeString": "int_const 0"
										},
										"value": "0"
									},
									"visibility": "internal"
								},
								{
									"body": {
										"id": 110,
										"nodeType": "Block",
										"src": "970:140:0",
										"statements": [
											{
												"AST": {
													"nativeSrc": "985:67:0",
													"nodeType": "YulBlock",
													"src": "985:67:0",
													"statements": [
														{
															"body": {
																"nativeSrc": "1009:13:0",
																"nodeType": "YulBlock",
																"src": "1009:13:0",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nativeSrc": "1017:1:0",
																					"nodeType": "YulLiteral",
																					"src": "1017:1:0",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nativeSrc": "1019:1:0",
																					"nodeType": "YulLiteral",
																					"src": "1019:1:0",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nativeSrc": "1010:6:0",
																				"nodeType": "YulIdentifier",
																				"src": "1010:6:0"
																			},
																			"nativeSrc": "1010:11:0",
																			"nodeType": "YulFunctionCall",
																			"src": "1010:11:0"
																		},
																		"nativeSrc": "1010:11:0",
																		"nodeType": "YulExpressionStatement",
																		"src": "1010:11:0"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "SLOT",
																		"nativeSrc": "1004:4:0",
																		"nodeType": "YulIdentifier",
																		"src": "1004:4:0"
																	}
																],
																"functionName": {
																	"name": "tload",
																	"nativeSrc": "998:5:0",
																	"nodeType": "YulIdentifier",
																	"src": "998:5:0"
																},
																"nativeSrc": "998:11:0",
																"nodeType": "YulFunctionCall",
																"src": "998:11:0"
															},
															"nativeSrc": "995:27:0",
															"nodeType": "YulIf",
															"src": "995:27:0"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "SLOT",
																		"nativeSrc": "1038:4:0",
																		"nodeType": "YulIdentifier",
																		"src": "1038:4:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1043:1:0",
																		"nodeType": "YulLiteral",
																		"src": "1043:1:0",
																		"type": "",
																		"value": "1"
																	}
																],
																"functionName": {
																	"name": "tstore",
																	"nativeSrc": "1031:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1031:6:0"
																},
																"nativeSrc": "1031:14:0",
																"nodeType": "YulFunctionCall",
																"src": "1031:14:0"
															},
															"nativeSrc": "1031:14:0",
															"nodeType": "YulExpressionStatement",
															"src": "1031:14:0"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 105,
														"isOffset": false,
														"isSlot": false,
														"src": "1004:4:0",
														"valueSize": 1
													},
													{
														"declaration": 105,
														"isOffset": false,
														"isSlot": false,
														"src": "1038:4:0",
														"valueSize": 1
													}
												],
												"id": 107,
												"nodeType": "InlineAssembly",
												"src": "977:75:0"
											},
											{
												"id": 108,
												"nodeType": "PlaceholderStatement",
												"src": "1058:1:0"
											},
											{
												"AST": {
													"nativeSrc": "1074:31:0",
													"nodeType": "YulBlock",
													"src": "1074:31:0",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "SLOT",
																		"nativeSrc": "1091:4:0",
																		"nodeType": "YulIdentifier",
																		"src": "1091:4:0"
																	},
																	{
																		"kind": "number",
																		"nativeSrc": "1096:1:0",
																		"nodeType": "YulLiteral",
																		"src": "1096:1:0",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "tstore",
																	"nativeSrc": "1084:6:0",
																	"nodeType": "YulIdentifier",
																	"src": "1084:6:0"
																},
																"nativeSrc": "1084:14:0",
																"nodeType": "YulFunctionCall",
																"src": "1084:14:0"
															},
															"nativeSrc": "1084:14:0",
															"nodeType": "YulExpressionStatement",
															"src": "1084:14:0"
														}
													]
												},
												"evmVersion": "cancun",
												"externalReferences": [
													{
														"declaration": 105,
														"isOffset": false,
														"isSlot": false,
														"src": "1091:4:0",
														"valueSize": 1
													}
												],
												"id": 109,
												"nodeType": "InlineAssembly",
												"src": "1066:39:0"
											}
										]
									},
									"id": 111,
									"name": "lock",
									"nameLocation": "964:4:0",
									"nodeType": "ModifierDefinition",
									"parameters": {
										"id": 106,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "968:2:0"
									},
									"src": "955:155:0",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 128,
										"nodeType": "Block",
										"src": "1144:56:0",
										"statements": [
											{
												"assignments": [
													117
												],
												"declarations": [
													{
														"constant": false,
														"id": 117,
														"mutability": "mutable",
														"name": "b",
														"nameLocation": "1163:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 128,
														"src": "1150:14:0",
														"stateVariable": false,
														"storageLocation": "memory",
														"typeDescriptions": {
															"typeIdentifier": "t_bytes_memory_ptr",
															"typeString": "bytes"
														},
														"typeName": {
															"id": 116,
															"name": "bytes",
															"nodeType": "ElementaryTypeName",
															"src": "1150:5:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_storage_ptr",
																"typeString": "bytes"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 119,
												"initialValue": {
													"hexValue": "",
													"id": 118,
													"isConstant": false,
													"isLValue": false,
													"isPure": true,
													"kind": "string",
													"lValueRequested": false,
													"nodeType": "Literal",
													"src": "1167:2:0",
													"typeDescriptions": {
														"typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
														"typeString": "literal_string \"\""
													},
													"value": ""
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1150:19:0"
											},
											{
												"expression": {
													"arguments": [
														{
															"id": 125,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 117,
															"src": "1192:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														}
													],
													"expression": {
														"argumentTypes": [
															{
																"typeIdentifier": "t_bytes_memory_ptr",
																"typeString": "bytes memory"
															}
														],
														"expression": {
															"expression": {
																"id": 120,
																"name": "msg",
																"nodeType": "Identifier",
																"overloadedDeclarations": [],
																"referencedDeclaration": 4294967281,
																"src": "1176:3:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_magic_message",
																	"typeString": "msg"
																}
															},
															"id": 123,
															"isConstant": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"memberLocation": "1180:6:0",
															"memberName": "sender",
															"nodeType": "MemberAccess",
															"src": "1176:10:0",
															"typeDescriptions": {
																"typeIdentifier": "t_address",
																"typeString": "address"
															}
														},
														"id": 124,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"memberLocation": "1187:4:0",
														"memberName": "call",
														"nodeType": "MemberAccess",
														"src": "1176:15:0",
														"typeDescriptions": {
															"typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
															"typeString": "function (bytes memory) payable returns (bool,bytes memory)"
														}
													},
													"id": 126,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"kind": "functionCall",
													"lValueRequested": false,
													"nameLocations": [],
													"names": [],
													"nodeType": "FunctionCall",
													"src": "1176:18:0",
													"tryCall": false,
													"typeDescriptions": {
														"typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
														"typeString": "tuple(bool,bytes memory)"
													}
												},
												"id": 127,
												"nodeType": "ExpressionStatement",
												"src": "1176:18:0"
											}
										]
									},
									"functionSelector": "f8a8fd6d",
									"id": 129,
									"implemented": true,
									"kind": "function",
									"modifiers": [
										{
											"id": 114,
											"kind": "modifierInvocation",
											"modifierName": {
												"id": 113,
												"name": "lock",
												"nameLocations": [
													"1140:4:0"
												],
												"nodeType": "IdentifierPath",
												"referencedDeclaration": 111,
												"src": "1140:4:0"
											},
											"nodeType": "ModifierInvocation",
											"src": "1140:4:0"
										}
									],
									"name": "test",
									"nameLocation": "1123:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 112,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1127:2:0"
									},
									"returnParameters": {
										"id": 115,
										"nodeType": "ParameterList",
										"parameters": [],
										"src": "1144:0:0"
									},
									"scope": 130,
									"src": "1114:86:0",
									"stateMutability": "nonpayable",
									"virtual": false,
									"visibility": "external"
								}
							],
							"scope": 131,
							"src": "887:315:0",
							"usedErrors": [],
							"usedEvents": []
						}
					],
					"src": "0:1202:0"
				},
				"id": 0
			}
		}
	}
}